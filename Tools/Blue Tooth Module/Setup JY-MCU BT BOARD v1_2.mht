From: "Saved by Windows Internet Explorer 9"
Subject: Setup JY-MCU BT BOARD v1.2 | Alejandro Pirola
Date: Tue, 16 Apr 2013 09:07:16 -0700
MIME-Version: 1.0
Content-Type: multipart/related;
	type="multipart/alternative";
	boundary="----=_NextPart_000_0000_01CE3A81.CA9C5BC0"
X-MimeOLE: Produced By Microsoft MimeOLE V6.1.7601.17609

This is a multi-part message in MIME format.

------=_NextPart_000_0000_01CE3A81.CA9C5BC0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://i.ebayimg.com/t/JY-MCU-Inex-V1-2-Bluetooth-Transeiver-RF-Module-Wireless-Serial-6-pin-Arduino-/00/s/NjAwWDYwMA==/$(KGrHqJ,!iQE-bl!ighlBP6ElIELGg~~60_12.JPG

/9j/4AAQSkZJRgABAQEASABIAAD/2wBDAAYEBAQFBAYFBQYJBgUGCQsIBgYICwwKCgsKCgwQDAwM
DAwMEAwODxAPDgwTExQUExMcGxsbHCAgICAgICAgICD/2wBDAQcHBw0MDRgQEBgaFREVGiAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICD/wAARCABQAFADAREA
AhEBAxEB/8QAHAABAAEFAQEAAAAAAAAAAAAAAAUBAgQGBwMI/8QAPBAAAQMDAQQFBwoHAAAAAAAA
AQIDBAAFERIGEyExByIykaE0QUJRYXGBFBUXQ1JidZOisSMzNVNUcpL/xAAUAQEAAAAAAAAAAAAA
AAAAAAAA/8QAFBEBAAAAAAAAAAAAAAAAAAAAAP/aAAwDAQACEQMRAD8A+qaBQKBQKBQKBQKBQKBQ
a7eNoEWuO9MmPSNyJXyZtEdLJPY1jtj2Hz0EN9Jdl+3cfy4tA+kuy/buP5cWgyYm3EWYQIzd0czw
BDUXHeeFBLSrk/GgqmuialhsanApMcLHDzJxxNBAfSXZft3H8uLQbRbJq5LjS0urXHkRW5LYdCAo
bzlnQB5qCToFAoNH2xhSLlbFxISd9INw3ugc93uinV7smg1hexka3Nh7aG6R7c2eIStaQpQ+6DxJ
9mmgjZO3PRtZ8i3w3r1ITycUNyzkefK8rHwTQQF06ZNrJIU3bgxaWDwxGQC4R95xeo59oxQXdGO0
s53bMM3OW5J+dmlxFOPrK+ueu0etn00gfGgz7lEMSc/HIxu1EAHnjmPCg7Ds35PbvwuN+1BPUHhO
cebiOuM/zEpyM8eXPwoOcdIHSS1s1OTAVCeuMlxpL7brzgaj6VZAKUoyVciOOKDmd36WdtLgktNS
k22OfqYKdz+vi5+qg1F5555xTry1OOr4qWslSifaTQWUCg9Ykl6JKZlMK0vMLS60r1KQdQPeKDsO
2G5lrhXuOMR7owh8D1FY1cT68kj4UHR9m/J7d+Fxv2oJ6goQCMHiDzFBx3ptsZcsMK5JGXbW+qG8
fOWnOs2fcMDvoOL0CgUCgUHVdkZXzx0cPRCcybE8dPH6h3LiSfjvAKDrGzfk9u/C437UE9QKDXNr
rKm7W242oj+pRSGif8hnrNnvx3UHywpKkqKVDChwIPMGgpQKBQe0SHMmPBiIw5IfV2Wmklaj7kpy
aDrnRRsLthbZst+4Q/ktumxlNLQ8oBesEKbVuxk8CMdbHOg6jZWkNKisoOpLUBlsE8+odPHuoJig
UGJcwQwmQntR1BzgOOB2h8RQfNXSlZfmnba4NoTiPKV8rj45FL/WOPYF6hQQNsst3uru6tsN6W55
wyhS8e8jgPjQb3ZOgna2bpXcXGbY0eYUd87/AMI6vesUG/2ToO2OgaVzd7c3hz3qtDefYhvHiTQb
1b7XbbazuLfFaiM/22UJQPjpxQZVBGRGlN3iQn0d3lv3KVqP6iaCToFBRSUqSUq4pUMEe+g15eye
zl3dZk3aA1MmW8GMhTuVJ0pOQCjsq4H0hQT0ePHjNJZjtIZZT2W20hKR7gOFB6UFCQBknAHM0GKq
5xc6WtUhQ9FoavHs+NBQqujvZQiOnPNR1qx68Dq+NBfHh7t3fuOqeeKdBUcAYzngBQZNAoFBhKcR
GuCy4oIakI1alEAa2+B7wRQVNybV5O2uR5soHVz/ALHAoGLo7zUiKn1J/iL7zhPhQVFsjE6ntT6g
cguq1eHZ8KDKSlKRpSAlI5AUFaBQKBQKCxxlpzG8QleOWoA4oL6BQKBQKBQKD//Z

------=_NextPart_000_0000_01CE3A81.CA9C5BC0
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://apirola.files.wordpress.com/2012/09/image_thumb.png?w=644&h=467&h=467

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

------=_NextPart_000_0000_01CE3A81.CA9C5BC0
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://apirola.files.wordpress.com/2012/09/image_thumb1.png?w=644&h=399&h=399

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

------=_NextPart_000_0000_01CE3A81.CA9C5BC0
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://apirola.files.wordpress.com/2012/09/image_thumb2.png?w=644&h=472&h=472

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
KCkp4f8P8KxbChjkqRkAAAAASUVORK5CYII=

------=_NextPart_000_0000_01CE3A81.CA9C5BC0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://www.rctimer.com/syssite/home/shop/1/pictures/productsimg/big/684.jpg

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

------=_NextPart_000_0000_01CE3A81.CA9C5BC0
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://apirola.files.wordpress.com/2012/09/image_thumb3.png?w=644&h=369&h=369

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
cd9X72VuoZuM5DUMNT7Nzp//Of+kSLhSJCJSESWhIHkecXR7mm1b2O+j7l/8wkJmZSeQkfcoqvoc
jd/9O37yvIkq2XiS57PsK59h8coSSpo2knDuEN/b+O/8n00JuJMKmXDnN/jq4llMn/Ymbw7s519e
+Wf2v+bHnVHN9Dsf5o6pfcjdF9gaceNSspl+7yfpaPgle3755/yjIqG4ysi/41N8a80MFiQe5pkt
CgkJbpTRDVYSoqyQkGAgBSdRMr2Mh9Yc5V9eepIff/MlPN4k8pZ+mc/OX8qcoI4smOjOerGDg8PH
xkI4snHEskZ9CC3TjP/IYzaY3AR6e3vZs2cP5eXlTJo0adzK0TSN2tpaUlJSyMvLY+fOnUycOBFF
UaitrWXevHm0tLTQ2trK/PnzOXToEJZlsWLFCoT3HVTQBkRIzCN9whTmzJvBvMy4lYGWk2x84hW2
NPYSZYhYVy+1XTMpnONHd6fiyV9IxdxbWD6zjCKA3AayXjxKR7eOjg/Zf566N/dy4j9bmHnHo9z6
pwnk+usx7FOsi2roloRfdONJinDhV8/x8u6LdKNBpJWjlyqYcOtMQoX5JKaZJObmMyEjBdFw45IU
fGYLA81RdlyqxFO1gk/cWUYVQMY8ahpO0njkIp0TVQbTJpNfXcPSW6awMDd+vfb5y0hrB4gMqY4z
/XhhmZiuBIK5NSy+5yskFDZwvNOMx72U8iiePIW52UFCpo1UfQtLv5CEMrObiGZhSQouJUhCVjnV
k1NxRSJolgsxdSErvp5Pdb+bzOpk0oUYqmEiSkEC2bew8CEfgfJzNJgClpBMwdSZTJ2WQjoaSup8
Ztwb4pupx2nSbYxgMv5gNnn+dErLkpAi+hX/5Pesew1zc4KEbBu8Eylb+DCf/LNCpgxphG0PCekV
TL11AuWpAYKu+Sz6nAemNNDSo2Mn5pA3bQaT8tNIZxHLvuhDnt5M54CJkFpM8bTZlGYMkeoup3Qg
RElSADlpLtNXe/lm+nEadRvTU0L+5OksyEvCbU9mxu2Z5M5LoCjDhxCJECGNQNEtfOoxAyWtgIws
mfQHv8k3is9xvjWG6UkivWYRM8uT8YsxVHPYpdLptQ4ODh8LQTg8e49bCOOCxbKMuIVs+OdmIQgC
siwjiuK4lyNJ0qhVUJIkRFG8qnxJkpBlefQz0/xtp/rxzThWUjY+Vy6ZHhXQaDu6kb3PvMpbh3to
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
AAAAAElFTkSuQmCC

------=_NextPart_000_0000_01CE3A81.CA9C5BC0
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://apirola.files.wordpress.com/2012/09/image_thumb4.png?w=644&h=190&h=190

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
ABZhISsmN92OAAAAAElFTkSuQmCC

------=_NextPart_000_0000_01CE3A81.CA9C5BC0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://apirola.files.wordpress.com/2012/09/photo-1_thumb.jpg?w=644&h=484&h=484

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
WWWWWX6K/wChRX7DF679KL9Wtj7zQy4vZsUjmOe9Fb163vXqQ97ORZZZf79/tUV6a2oooaK2orfX
oxOsm1FFehIr10UV+1RRRQxeuyxv1WX6EvVe17t+t/s6yPtIfLayy9kiv2LLLL9N+my/3kWX+xfp
oZW1l7Jllll7PeyyyyyzWfEj8vVZZZZe1/s2WXvZfrr0UV6EVtRfoso472WWX66K3or0VtQ0huP2
a7UcjGr2sssv1r0ci0XtyL/eoor9i/Te1fs1+9ZzPMJaqMO5qPEIvsL3srgvSt8uXgiepzPJ0P1r
r3dzHrMifu7GmzeZDkdy9+RZZe1lnIsTLL2ssvZbWPeiiiiiiihIr/ouizqNjyYkS1uND8TH4mS1
2V/Z+qy/klkyMrKxYWyOlYtNwiT6PZ7PayzXN8B33E2K0aCaUOO9l/s2Jlllll7WWNiL25HI5HI5
HI5Flikciyyyyyyyyyyyyyyyx5oon4hCJPxCQ9ZkY8rZ3ONnkWR00/wR0kvwLQi0aI6ZCxpGpznH
lvXp1/ZH3vpJVk/Zf/Ur/qvp3MuqhAn4h+CerzPsOd7KDZHTNkNGyGhIaSCOEUVte1pGfUUfM02C
tr9Wv7IffeEqmhfRZe1iY2Jllll+iyyy/XZe1/v2X6M2q4GXWTkOf5LbI4WyGjI6EjpkhQSFQtrR
e1kstGXUMrzDFgoXTZll+jVy9xy67MnB87NPPnCtrOg69FnJfk5r8nNfk8xfk8/GPPjP1WP8j1eP
8n6uNEZxnEsv0WWXtZZfpsv19i2X+TNqVEy6uUznISlIxaJy7mPRqJGNFl70dS2UOVEs6Mms/AuW
QjpCGLiVuyitrLNU/cfYtk0zFm8s/WTP1kz9RmHqMx5mQ55C8p/NOL/Jwf5PLf5PJf5PLHjOP+Ty
/wDJ5aNOkoel7UVtX78SeVRM+t59iUmyMZMxaKUzHp4wOj7CTF6bolnSHrET1g8mSRHSZZmPRce4
scUdh9dr/Yy/I+yKjxOEeJ2MfUnGNk8Ua6EY0eRGR5KQ4EoQr2nGPHqYlAZO0qFo8l2Zcax9zuPq
zFp4yRmxRxpIxxqKF1JSSHqsK+x6/F+R+JYx+KRP+U/wf8p/g/5T/wAT/lf/ABP+Vf8A8ReK/wDi
LxT8oXiWL7RHWQZHNiZyh9D5fRR0+97/ACX+DNrIx+BPNLI+pb+jBpnPuYtKoDPaNo9xaQ8kUPV4
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
tYqtm1UtrZVZ2HP4KKmSqoSyWqVl8NVhK1yquWdFmqFZrNVkVIhVCoslVtCqNWVba2UKxLNTrbVV
JU6oAbFRTqttmSoqfBqqoszqqE24bMSkPgqFkslkqLCs7KhUCp8FPghKaoqiyslityWdlFJZqq42
4YixOms5KRWsphxskASqgrJYRbWqosUrKCzKyqy+CqnNZrCtVZWTQlZms1S2pVKqqositUqrVQKq
zWakxbLM5KrlssoqBYlCQdpLLxXpL0vdel7r0vdel7r0vdel7r0vdel7r0vdel7r0vdel7r0vdel
7r0vdel7r0vdel7r0vdel7r0vdel7r0vdel7r0vdel7r0vdel7r0vdel7r0vdel7r0vdel7r0vde
l7r0vdel7r0vdel7r0vdel7r0vdel7r0vdel7r0vdel7r0vdel7r0vdel7r0vdel7r0vdel7r0vd
el7r0vdel7r0vdel7r0vdel7r0vdel7r0vdel7r0vdel7r0vdel7r0vdel7r0vdel7r0vdekmsht
k0L/xAAnEAEAAgICAgIDAQEAAwEAAAABABEhMUFRYXGBoRCRwbHR4fDxIP/aAAgBAQABPyEHyLlL
cHmUNQ/AEqN/w5IxTB1MMIQY95WzRmVf4rOpgwmW5UHYIrYFxXEzGW5MJUqBUSV3+KlRI1K/BlKx
MrEysR+DL0/FpGsQxnGP4n8PhM/xZaS0SeEqBUpZg+QRhrCoUin3MrrbhiSqI4iDmDe4EVMTMIyy
MMEGNwYJLJcFwpFcEIhfwv5LJj8XiLMfiokSOZVfion41LQSvyP4KjDKYjHz+KYrLv8AFTT8P4ru
MomJRcolImVgfQZOSMwGhAfO/wA/BcSYIl/MLmCa/JlH8V//AAuEC/wXZc/B/LYZtFkYabjibJUp
mozSGUu/DDDFy4/mUl3+FqXf4ubIMxoXAxmIjD+CS+YvwYGWNXBYWLjhlX+CiV7sh2jT6Gfbf5+G
7X4lIU7hLqXL/CxjH81A/K4xI/hlHMrzBFETAnj+FopjDGEC5nH8D+FhEyjDOsqJKojFmkWOfxcu
D3HLLqMljMXMXz+GrmFmEBitICphiFQAJQnc+2/yEn4xuMIFfhcMwTP4X/8ADu4sIsuP44jdy5cv
ueH4Wz87fhIMBmGpYIiSvMadRH/4ZapaLUpMREQyjETFiEjLFiDkSr1GblRI2JrFloqIncVlwnSV
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
xPtv8i3Uj4lg1imh7lBo3KDUwFq1LnMQOC7i7gR5m0tay63KhYIYKuXcJ9xSwX4nWKcRimuohVfz
KzcfyDYpfhkgi8vki7ijA9VplWlcQDslkXXzyMwgFpd4zE2KINzBxEYC5WQHVJvcc1QQUUsyIIFo
EDmQuWHHiDbCohfDP0JVWojYg+yirHbDpTSazWTMUpcbRSwF3BfVczcWhTa5YeJaUVBFsJZufaCG
ziDtpYSvhAKwRk6g5HAuBGzAmMpbDzQ3YqCt1pAyFC2zAuiaarEK+WG7GWmky/yKBDzMO37/APE8
6POjzo86POjzo86POjzo86POjzo86POjzo86POjzo86POjzo86POjzo86POjzo86POjzo86POjzo
86POjzo86POjzo86POjzo86POjzo86POjzo86POjzo86POjzo86POjzo86POjzo86POjzo86POjz
o86POjzo86POjzo86POjzo86POgt2/f/AIjYtAn/2gAMAwEAAgADAAAAEBbhN/5BBgDUhKdWSdgE
oKUuxIO8lhO22m+8u4MhZh9uR1uBI8sasBTsabtBsobl/JAetlJ+/t33smAu/wAxWmz/APeI2ptA
EJsJrpf/ABCVjdj6SfwO++y9qUoP9jZvZst3+IvbbCICZL/bW/ASlTtbaS/Da322lSlB/wDmx+GK
360UCn9uAQDvCYkltvtZL+R82SDs1KnukkluqM0Ch7Ug2Ut9iCQNpZGkvv8A62TYDZMkD5ORrttI
DekWgazffJ++f7zk7E9k/SSg2yybt7J9k2mNMbNyUySmxPbeX9r27Tawj8jMCS20C2a3dPdPImyR
IH5qWIDUvIg6qzbyeA9eWbggeFNJ2sSpA7ppbEtXPO3mkJYbj9JK5qO23ZqDyYFgjQrtb5qxMH9I
Cwkmy2tOhNvr8E7SkbgNkkM2k7T6tbEtyWk//wC+6dsos07Y5/OrhCYB1sw/tSTJAtKml3IkAblt
Bs22+Skl6bbp89v/AIG2TaS3hiMQijOiwdp/vaS20QAlu23/AMAi3nEyRqqRkAidkHtu2PET4Giu
x/aQttMhtv8AaTsAzFraAk7vXyWJGiX1Ns96INALhawYsFB9C/GpIhZR43N9ilRZPybSZvKs2u1a
AABg1cAthM+LBf5BehuHwX6ALVpzN3JCbCV5EICG3QGQLntmDVEvzXi3u3CVpYTVPB2KRTvUWIat
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
qf5b9Q2H14UarkGsHif/2Q==

------=_NextPart_000_0000_01CE3A81.CA9C5BC0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://apirola.files.wordpress.com/2012/09/photo-2_thumb.jpg?w=644&h=484&h=484

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
ZWZ6qwCiVSXfAq8jrK0tStRUKtlVjKq8bly81uAH4oUa0/GiGdtOSvTwqrmqJzUbyorGiDiTbisz
qivLgrhp/mo3VLcpua1ss2Yubms/wWXWnZkHHzVK24BVc4xyNsfFNGa2WlXN4oQmuZ538w08kGxs
Db1qfBOcaRPH4R+JAMmdG5h0LdEBKA1rxyrfwWra0u1yY3KyDhnqg3MzpW9kuFnIB3RtZXeyjRDo
zmYz9WoVaOz862+AR6NrzTmN5OBa+M/9wWRJfC6mhe26c5obI0m72W+CeQ0ZuGetV+IMfru2cgZC
Mw9ECa+JFq+CGUN55jwTumccvh+FUaN0c0M1au0Q6RuYcbq9uQCvr47LOohUkrUn4q2ULgVcLiVa
oV3HZa60AVlvLRaLQhaq6sFYD5reC3RRcVqVwVzs4qJB2JZmK7pd16ruvVd16ruvVd16ruvVd16r
uvVd16ruvVd16ruvVd16ruvVd16ruvVd16ruvVd16ruvVd16ruvVd16ruvVd16ruvVd16ruvVd16
ruvVd16ruvVd16ruvVd16ruvVd16ruvVd16ruvVd16ruvVd16ruvVd16ruvVd16ruvVd16ruvVd1
6ruvVd16ruvVd16ruvVd16ruvVd16ruvVd16ruvVd16ruvVd16ruvVd16ruvVd16ruvVd16ruvVd
16ruvVd16ruvVd16ruk1kbaNC//EACcQAQACAgICAQUBAQEBAQAAAAEAESExQVFhcYEQkaGxwdHw
4fEg/9oACAEBAAE/IW1jebid5URuExYxLeY1kvVRltJULJ/4CdP/AOaTKa4mWU+gJ6QrKh9KUJnF
y0L7msrKQEagEEZYB9D9EEZIQi3MoNxcTK4me4EIWZvGuoH6POJUFShiFR+lp7nqZgRjBwwpuWMp
PUwmV1txnma9XOJhBmGcfQrM0kLeU6lJTDOHSIEruAhRCJS5iU5hUoSjqDKTSNtfRh9I3LZc2jmX
BZCjczFE8omK4hCI3wmUlOoH6BcwgrCWsqoSyYZXUcT3LJl9G8YMRcQZcuNpMIp1L5QylVKgPnf5
NPHIogmUK2pcxEJqOYjVSlnOpV6h4S5OyUIuZRlOICUrcExKSglHmAQQiqJ9FkuIlksSNS28TJ9C
XMvpafQ4QgH6OoAZWJmUuL6LeJcdzcSIJ9Bl9NmI0Zcs5J0TJ9TcCpaChiXUUJ+W/wAnAQcc3hLR
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
EUUdDigRtAgIseoHtsItyvUURatqwV8xqIzoaIMsZKU0/NSzB7Q2qcaa2VVvzCoMaHAlhuFprh8Q
lCqi6HuMBaPJHZsHk2pbyLjWyKzqmrRc27HJ5wvQDkV1HWaa3mUIhq4Q3yBUGzNJcbjGQCrarJhV
xiAEsFveySvaCFXbIIrHij9ZwT0NOpRlQ48n6gTzeIV8RzWJYLCf1HiBrel6rfrjmElgNjU8Xx1D
3XtLIqXhSlHp3pzXxGfT6m15HmAUQBGj2L69EeB7wI16oYJ44EBb7MgioWoH0qDQlDYO87i4Iii1
/bFwktjLT0YxdJCiBYjGnIIWrR2wpWNS04T5nLjKguafMVbYohvNe4oO0IwB5zt9w8sqUuAr079S
qFHo26vFdxGqdaHnKC8RN4Y0HzpU76jg8g68RY+oeZSAR6h1fC8SuyTLixeIvFU9fyV14QWdgZnV
jSjKVhD2DMPGw/MCgOEv9Th+LQtaWK9H3LYRVbWui3PmW9srviws+WKIgM1uNPNepd8g+fV00a41
HPv0xW8AlcVFsBSSPAyj25B+QAOVTtaiaYvOXAuB5jDphs0el8hL5Qbo9cKQmwaEOyShiiFfg6f8
YMll67qGsRxL5Y0jzBe7A1QlBOV7g8+CtQeu20s+aIOVwaZjQ9w8QhiRCgEOCAFySiz7t1Y9Wzp0
ChNLoNo0/wBjNz2KweCAF9LRdD3Go2ShMF+pXog0vyLG1FZtCgxzO5VWsuSgdAiYj+WxZKT0GRRE
VNHMTeHcILSGcaWX2GrSJZBVgOVly9htSBdgAPvgDZCNgO0DLEJO5mxDwAsPGel2phAVxXH/ACNV
WzG7T8QMWTicsChVY0a33AGkN1x/EfGC0VALpDawqKAVxzdNQTLpIdRYV6jhtsgP+QE1x+Mf5b+J
/lv4n+W/if5b+J/lv4n+W/if5b+J/lv4n+W/if5b+J/lv4n+W/if5b+J/lv4n+W/if5b+J/lv4n+
W/if5b+J/lv4n+W/if5b+J/lv4n+W/if5b+J/lv4n+W/if5b+J/lv4n+W/if5b+J/lv4n+W/if5b
+J/lv4n+W/if5b+J/lv4n+W/if5b+J/lv4n+W/if5b+J/lv4n+W/if5b+J/lv4n+W/if5b+J/lv4
n+W/if5b+J/lv4n+W/if5b+J/lv4n+W/if5b+J/lv4n+W/if5b+J/lv4n+W/if5b+J/lv4n+W/if
5b+J/lv4n+W/if5b+J/lv4n+W/if5b+J/lv4n+W/if5b+J/lv4hsfjwo1XQaw9T/2Q==

------=_NextPart_000_0000_01CE3A81.CA9C5BC0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://apirola.files.wordpress.com/2012/09/photo-3_thumb.jpg?w=519&h=484&h=484

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
5acp6yri0jSlHR1GxRaVoXOj0lbmMbp+1sRs1uYJrTSyPOn4HJ1oZG/S1iYbTqJm9zbZI5U2nqiZ
WT6fVt0qdVfTqOxWQOdE6g1BNSRabuAltFj5qu1hFmS+PCHCKw5qDyVG9MKbJw08tQlyWStka3hb
l8lTSdzUfxLT8V8Xp8W4FskQgqN7RhOfsTW72AYBi+WNydE+NVsnwvQypVL/AIgspriFHFvcynaV
aqBjS64Opaqrr9zqG6CnrblqFs1O2unJ9dUB0NXPIXTyxyCqqHtHc3BhTx2Cy4PafUl8uj8Gy3qC
N1yttvbcam0aap4GtaGN+qFX2bFsdK8W+ocrFZ5XU1n/ACq0DERZkOG0bcLasgnZy5m5MJYuHNbK
+JMkbICxNe153lhD8pj1C4e5dQWSkr5/atvXta3r2tb17Wt69rW9e1reva1vXta3r2tb17Wt69rW
9e1reva1vXta3r2tb17Wt69rW9e1reva1vXta3r2tb17Wt69rW9e1reva1vXta3r2tb17Wt69rW9
e1reva1vXta3r2tb17Wt69rW9e1reva1vXta3r2tb17Wt69rW9e1reva1vXta3r2tb17Wt69rW9e
1reva1vXta3r2tb17Wt69rW9e1reva1vXta3r2tb17Wt69rW9e1reva1vXta3r2tb1Z7FSUk/wD/
xAAvEQACAgECBQQCAgICAwEAAAAAAQIREAMSBAUgITEiMjNBIzATQlFhFHFDUmCB/9oACAEDAQE/
AVaN9jWLzWJSEhdhuxLNDEy8JjZxMqgTOAGM0isacfyGiRNX2s1X6nihPH2cwl6sM5fCoFdis3lo
oWKKw1081955G6FLFYYniZt2kZFFiGVQpDiUNYXg491AkcDnREyRoP8AIaQjXfpZq+54soWONl+Q
so4WFQKxRXQsNFl4XVzX3jVG7/Jts9pdidFWbaxQzaeBKyXYWGKQ5CGhLucfL1D8nAv14ZpsZuNP
5DREcR7Waj9T6ZypGu71BnDRvUIfraK/RzX3njySju8Eew5D7F2RkXeExxLH3N1HkarNZsRxj9eO
EfrzpZ0PkNMicR7WSXqeLKxxDrTJd2PwctjeqLpvpsQyuvmvvExTJdyqIqyUWbiMhqzwIYuw+4lm
isNYb9JxT9R9mg/XmHkeOG+VGnjifDJv1MbKLxx0ux9kmcsj9l4a610Vmy8I5t8ghCkVZ7SOon5J
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
je68rTdUamw85pPoqMBJ8Fwwyf0pzKHxmllTo5ClaFXt41QDv7VvZW5VHb5WNHLj2VrhcXEzqqto
qtV+EjK+Taf9L/lyDsSzUV7pe6+a91817r5r3XzXuvmvdfNe6+a91817r5r3XzXuvmvdfNe6+a91
817r5r3XzXuvmvdfNe6+a91817r5r3XzXuvmvdfNe6+a91817r5r3XzXuvmvdfNe6+a91817r5r3
XzXuvmvdfNe6+a91817r5r3XzXuvmvdfNe6+a91817r5r3XzXuvmvdfNe6+a91817r5r3XzXuvmv
dfNe6+a91817r5r3XzXuvmvdfNe6+a90iYY6Gi//xAAnEAEAAgIDAAEFAQADAQEAAAABABEhMUFR
YXEQgZGhscHR4fAg8f/aAAgBAQABPyGiMTTMVvkRGOZMEMrkvSMTNj6HX7pb/H6G0cxVmK2OcqV1
EgbzF7yCO3H+Gds2JhVC/GinJKL+8sN3amX+zVOyL8HFogiMlxk0zzwlWLGM5htmFOAgwd5Vxjol
kcanbLYOpixWfREzLdyq1PcS9fRZVT+4mAq4MYYi28wo2S+ELEwlzTzETEz1lXyUwzajbcsbgpuN
bRKmtqfEqS7jiOisRmyfjfoNiKnjb8Q4LwBy7HyjupdI3WbndIzogoZl7ZudAnPU36WQ8Chtl3v6
XUWeonTH39Aoy3cETCJUVk2l1DMyS5m8oBTEG37QfjAgLgaxiKqOTuBNzKJcQyaOYVbhDEcLfjE7
mRUAZjimGyXukeQ4JhjYwQyh9gzsTMeYPscUtLlxyjzeo8TP4H9lHgwrhmElDKogX9N5ZNqwjmms
lLKoxMQQ5ivEKovcCBAP0dTkQRJSV1K7+gKMuya3MoFyZI7AYouYnZBZo0ZcsOGLGZZklcK4RDpE
3Rf3CNyupdERWZlqN3M6tWc0Xvo+7ZeFcx6lT+Yj3WXjM/eTfyzKGh5lEesKm0GUuMWxqO4OcRhC
wshOlp9EfRkxPmCbiDiPv6AiYuDDKuMYqalxqdHb2KkV9YjTULKC7zMiOlIWsZV5h23+JgRwriBc
o2Z2IN7l1GMIPCcS7NC/ktvaZrFT+ywfEUZvpJyNjHOovyIfuZgplnNh/Zd8OWJgZlYqNe9plBuL
VMSpIKb+jvUWpuKbmbMEEHUKbmNI2Mcy3PiVe5TqZSxGdDdYmjuB84K4RQdwuZjiK4YYLhD2HDnD
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
iqXOHcasmrr0a5+Id9pJ2nDLpttnHDHar1B9w5lCo6ddUI0/mMEauzdg6pVmrvvYVcHTds5I7LxS
3T1H84nxXUuoLIOXIVtDwM1yP5TV6Gr4yPhiZ0nAeHhGCgB45fL5YeBbWU3G/i34RQxaXD8BBZ14
VYe8IvlzmopVTp8uIMpClY9RIHLCs/cDE6Asp7iBm2qq6fMVdarV1Z8PEvyRoaRijTNiq+WLXJg4
g6Ykm64Fp/8AInrQCvZ7Jfb2lBT8L2QlWEr/AMOYzG84aPEOhxCw9vcEB3hHKEuDwOPuGtRFLdsr
BlV7MuG2yA/5ATXH4x/lv6n+W/qf5b+p/lv6n+W/qf5b+p/lv6n+W/qf5b+p/lv6n+W/qf5b+p/l
v6n+W/qf5b+p/lv6n+W/qf5b+p/lv6n+W/qf5b+p/lv6n+W/qf5b+p/lv6n+W/qf5b+p/lv6n+W/
qf5b+p/lv6n+W/qf5b+p/lv6n+W/qf5b+p/lv6n+W/qf5b+p/lv6n+W/qf5b+p/lv6n+W/qf5b+p
/lv6n+W/qf5b+p/lv6n+W/qf5b+p/lv6n+W/qf5b+p/lv6n+W/qf5b+p/lv6n+W/qf5b+p/lv6n+
H/qL+ElDlPqf/9k=

------=_NextPart_000_0000_01CE3A81.CA9C5BC0
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://0.gravatar.com/avatar/34d7ff83168ebf223357c0298b7d5e7b?s=32&d=identicon&r=G

iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAET0lEQVRYha1XX0xbVRz+Lr0rBnct
1pS1QwbBGrGLs4U5m5ERo2BmTIgYH8weFvs0fRhL3NzbEh72hjHxaUGduYluDya+TJaxmOhYSRSR
FlZ6hTCnsMJK4TJWOtZ723J90HM493L/kLjviXu+w+/3O7/7+77ew2mapuE/XJqexLqq4MMDh8gS
em8MIhZqQ6QuADP03hjExHLWlGsUavHN0ffos1l8niUHUmOUIJsmlrM4NXwVYZ/ftJBYqA2nhq+a
FnA8FNYlN4vPm5GXZ27pNgHAPqHWtJBIXQBhnx8hbx3df2l6EkN/z+KNhudMk7PxXc+/39PHkgQp
eQlKpYyUvAQA+KzjLQDAj/N/YmhuFsnlRfhrBASeFOCvEdA/PgKlUsbM/RUMpMbQG4kiWPvMtuTG
+Py6qpi2DwAKJVX3LLirtzhVxXpJ0XWBnKxRqKWnd4rvGrzwZR97UoLu5hacbm2HKCXpmiglEfR4
8XFbO06Go2h66mnK+WsEDM3NAgA9PQAc3FMPu/g8sPWuyQkIyXEc/YffshmcP9yJI3sbdesEpAv3
i0V6egK7+LxxU6Gk6pIHPV58sL/VMjGLWKgNK8WHqDLZZxWfO/nzD5qdzj8dH8HtNRnS6rJuPejx
4pD/WRRKqi0vreZsfcJV/fbrfcapZvHV1O/4ovMdhLx1WCjk4XE/QWfgu9kpzOfXbPnjL0bobBjR
G4luvQIrnd9+sIr44hw66psQDTRA0zRwHIe0nMNoNgMAtnz/kaO2PkELOPHSK9i9y43LM7d0hQCA
mE7QGSDvTpQS9CROPOuWgrsaA6kxnHv1NVSxQ0hIAlbnpc1NaADY0VIqZfq3E2/nE1VkE3GsoMeL
84c7cbGrBx31TQD+9XTjZJPu7IS32087YKVzUm1azkGUElAqZTojrO6teGMXjD7Bxa5/r9np/PPk
L8gUHtCBIwj7/Ij49iKvKrZ8bH8rXUvm7mGl+BBd+4J0jf/6zXfpQ1rOQS5u0NYDQGmzYurnBVWF
Uik78ixYryEd0w2hKCUgP9rQdUOSc7jY1YPRbAailIBaqVBnPDtyHfKjDVveCJKYdIxnCaOugf/v
A2aJu5tb6DpVgVHXzJea7tnKB6z4tJzDJ/EhfPTTFZr8dGu7vgBSbXdzC469cICemoDonIWZD5jx
66qim5Hdu9y6YedJtcafYOJugLXOibvZ8dFAA6KBBvx67y5EKUHNiBbAvqsrd6Z1ZHxx7rH5gLEQ
Au7MzWuaUcMEQY8XL/sCj80HWNBCNAbf/jGhXZgc1awwtbKkDWf+suSNe8/cvKZbM4vveC9gYeYT
Rhh17hR/x/cCK58wS8zq3Cm+473g4J56AED/eBwLhTwAYD6/hu7mFmo4/eNxDKTGsFDIb/uadrtc
tveCqp3cC+x8wknnTvF54yczAetYdj7hpHOn+I73AiefILNgpXOn+I73AmMwFmI6sW0YrQqxiv8P
QUjjkfFz2bYAAAAASUVORK5CYII=

------=_NextPart_000_0000_01CE3A81.CA9C5BC0
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://1.gravatar.com/avatar/169b0078e474b79681d23df571e71586?s=32&d=identicon&r=G

iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAIU0lEQVRYw02XXa8k11WGn/Wxd3Wf
PufMjD3GJLaDg8WEEDlC4gopkbkBBChI3PADuAoX3PNrEL8h3CABEgIJ5SLYCShChsQyhFiMx+Px
nI8+XVV7r8XFrhmlW61Stbqq917rfZ/1ljx87TKnKtS6w+2Mw1So08QfvPdH/OWHHzDdHhESRAEB
VfACCCk6zs2QaQ/3LmBy8tkNtD6uawu5NkQF5iP88PswnwAgA289mWRivztHM3EvaNnz4OKC//7j
P+XQT0xmCIqaIVoQd3TaIV7Qywv0/ALuHfBXXsF2lfXJU+Lqlry6JueV7A2Zj/SffMj5D78/Frbf
wzzj892MBOynHVPZYSgPLx7wpM38z9tvsi8zGZ35tDAvwbp2Wl8hAlYhnj7Hnhn2uHB5+QAyWeYT
QdDXoPdGb51ixu7JZ3w7oIrA3R0AXqtz2E+sdydeWxvvItjrr/P8+povnj9GDsHx9o7nV0cef/o5
VzcnegMrhVoLiBKRJBARqCgigAgZSWYSvROt8atfPGMhMTMwB1H83jTxUI1fubnm93rn93vnr84v
Of/yL/HL9yZUVmaEq+sbrOy5f39Pa50eSWQCgprSIxBVEmFZFkQVNyMTekJkkqJEQqwrrI0E/E+O
R96Na97N5NcJjmY8eusNvvLNR7z+8Jxnz694+vwx7nuC4O7uRIuk9xhC3AQqagggCVInWm9EJmqG
ZoAZFCfc6KtsIkz8u7Hwail4TyICivPWmw959OgtPn3ylI//9wmnOVl7cHs8YV5wA9EkEUSFtnZa
b5BJJpgXqhu9dUQEc0eALJVmhRCFHKv1cOGmrewimUQI4Ob2lg/+7b+4uTny2dMryrRjWRd2+z0R
SQCZQW4tcLfRV4GIZF0X3CpWnXmZcXM0ATNCjRAZpUrBD2vyTxfG2y35+gxdlGdXt5wCkqQHtNOM
qtN6J1MQATGFYCxCBFUFAbNh17auTFPBuuPupAhSC6FKIOP/SfyWZEI4MwiSNCdSuJsXIoPWOzDK
mgkZQYqM8ouAjJuhujlgtCV6R0UpxTE1UEGsEqqkQOaQgWfC40zeaWMBYc7ag9aD1leid6xUeuRG
v3Eh21HVGL4DFSUBFWeahMyglIKIkCHgRtexwSEK0JPA11BWGBYR6BFEBD2SZe2IKMkQXSYvj4iS
CfLiLYrosGWtExEJ6Pa9kqp0tZfOSVXcRPhxFb7VIETo6rSEtbXx6Z3TaUZUUftF6EApw9+mhshg
wdhaR2pF1Gi94Thuhk0T1DpauLVBr1U4W5OlQ4oQZvSIlz1aloVkCGZdO5HJzc3tKOvWi9Yap9Md
mQEkpVbMfHMJqApeCqgR7gRDQymCFxHebONHgRBehmBUMSnsdnsQpZRKJpzmOzKTs8MBEO7ujuzP
DsMFKZRaKKWgYrTWMHNEwM3BG+GFFAEVsidegZ07GpBLI01BDDFHouPuA7W9o+a4F+o0eK5qZO5x
L5g7xcuwpAhqhpeCiY46qWHuhDupAqmkgmskX7pdcBscD3XUDFMloqNm7Pdn2Mb1z58duby4h3t9
qYneGrVOw+/JEKIqZo5ug0kEtBTCnESHcwI8RYjc1K2QZkhxRAWzAR8RRVW5vr7mlQevMi8L83La
rGdc3r9P7x1Rw20I8qVNzcnoI2cwNDbYNYaTI7qpUkiUsIKqDaKp0eO09VHZ7w/sdnvOzg6gQrFR
+sig1B3rslDrNLBMouacnR2G5aOTEYQaufEiJfDITf1bxAp3MENNEUCXF3RT2mbNgV2h98QjAKhT
wd2ptQ4SRjDVuok36G1Mxihl2yyQiofIwONmtTTHzHE3AKZpv6HYOTucY+7M84lSKm6KmdJap7UZ
U8V9LG6ZZ87PD6NCPVARJIIwJzahZgTeBTQD26iWZlgpUPwlsJdlZbd36tmEiFKnCVUbN1VlmoRp
t0NFgWQ+zdQ6EKwiiOk4Zh02fBFoBfw2k3PAGP3pZqQIqo7I6GNu4cF0BI8X1jQ1zEdgFR04npcF
c2Pa7ekRwwUJQYDodv/RdkTwv8b4djR+wwwF+rYr0S3bZXI4v2A+nRBRSimYOWaKuY9hlKCqrL3h
pVDcMTMKMqKaQKeRZqMF6BCigv993fEDc947HfmOChdqWHHG0jeAmKL70c+RZAQ1x7xg6vQ+xFmn
ylSn8ZMN0zGfcC8IQkQH21ynSnjFl0ieF+V7uzM+vbjkO9O0+d5ezntzJ+lMuz2lOL3nC5sTGaga
h8M0eC9CZiJsI3fRsbhSyEyyVLopdrgcHNDNXj2Cf10btQXfOi68+vAcJDesDmdM0w4zY7d3BKHW
Oh5WRiIZD06MWMfm/TpVlnkeLKkynqpEoRS0dfz2eMTcKGpEW/n4k5/xjefXfOmNLw8RygsiBvv9
fghQDd3Gs6qig7cvK/Yisczzifv37pGZ3N7cULyStWz9N0QCf/O1Aze3C6c1QJW74y2ff/YEr9/E
ZJR6XhrCmP273Q53HxbbgKS6QWs7X9eVdW08eHAfgN6CWguxLBzLRKpi60qq4H/+F3/Gz3/+CR9/
9BE/+eknPPv8//jHf/hbDj7xO3/4u1xfXfHw4SucHQ70tSEyUrBuKUdVMBsxe+hTEJx7l+eoKplJ
j6A3o4mw7vdDPz0RMfzt19/g0Vcesf72ezx++jN+9P77/OiDn/LhD/6Fdz76T85L5fNpzxdeaG1B
1NFS0DqhpVDqhNZK2Z1xePUh+3v3WO+OXN/eEG0ZcMsRcNrpDnv/AxxB2oL0FXcJpF0zaeGrb3yN
X3vnG/zmb/2Yf/6bv+Pu3/+Drx9PHFBMBEW2LCeb6HR7dN96rw5esN7Y8QsvUcgglxnLoJaKZCIZ
/D/Pah9GaICxsAAAAABJRU5ErkJggg==

------=_NextPart_000_0000_01CE3A81.CA9C5BC0
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://1.gravatar.com/avatar/1b00c5591200fc85743b34dbdaf792b2?s=32&d=identicon&r=G

/9j/4AAQSkZJRgABAQAAAQABAAD//gA7Q1JFQVRPUjogZ2QtanBlZyB2MS4wICh1c2luZyBJSkcg
SlBFRyB2NjIpLCBxdWFsaXR5ID0gOTAK/9sAQwADAgIDAgIDAwMDBAMDBAUIBQUEBAUKBwcGCAwK
DAwLCgsLDQ4SEA0OEQ4LCxAWEBETFBUVFQwPFxgWFBgSFBUU/9sAQwEDBAQFBAUJBQUJFA0LDRQU
FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQU/8AAEQgAIAAg
AwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMF
BQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkq
NDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqi
o6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/E
AB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMR
BAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVG
R0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKz
tLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A
/K+BA8qK2cEgECvW/BvwL8U+MtOmufD3hzUdZEe1JfsVs7BG2hsE4OSMjIrzHS9Pnub63iijLyyO
ERVGSWJwAPfNfsd+yNaXPhL4Y6E2oaY1mlxbefJFDFg+az/dLbuG5JIKcbSM9K5a9V0kmj0cFhVi
ZNO+nY/JfxH8PtQ0hJhd2Eum30DESQTjGeSDyeAQQRjr6e3HMhUgHrX6jft5fDaXxP4bg1yy0OS6
vTcJDEbSPDSJIrMDt3HcQxOWIB9sHI/M3ULELczEcruOCe4qqNX2sbmWLw/1apy9DobNtMhdWjnk
86MhgYo2ypHQ9K/WX9n/AMdah4h+GOh2erPcaJ4hIN7d6bc2zQyNuZiGUOQQpDZHPQ1+XXhFE0XX
tO1G4sIdQjtLiOc2s4Jjk2sG2uBglTjB9jX69fBTxx8Mf2nPD0ZSytzq8P72bS7xwbq1Y8MVJ5dP
9peDxkKflGeKwtWdNStqmbZdio4Wq23ozxT9s34w3PgX4c6fb6RfDUdXSZ7DzEj4t0khdex4YITt
JPUZwcYr8wrqCW4unVEGPTOdvXvX62/t4eBPDngj9nbVLe2iitpbm+torZE4Lylw7H3/AHaN+Vfl
uNKCszrwxGD7/wCc08HhakKXMt2LH4mNetd7I//Z

------=_NextPart_000_0000_01CE3A81.CA9C5BC0
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://0.gravatar.com/avatar/c9a97b1c0bde64dc2ef2b2c2cb128f48?s=32&d=identicon&r=G

iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAACG0lEQVRYhb1XsU4CQRAd7hYK5BIT
26M4KxM/ACs7WugwwUAiJf6ELb2xopEYEyugJhRYEBNLW4yJJITSBKRBgoXeeTvu7Cxs9DWXuZmb
mdudeTubKA1ya/hGwa9AJunB7ctV+ArKQV2SdSj4FTjdP4/k3qQNzVFDssH+BPVxaFTMViXZJrjK
n6P6uJitQjmok3LBr0gyAEAm6bHBVf4EDo4zxfJ8OVOuVPhMu542OPYn+tMO9KcdI+O06/16H9+a
+XLGBo4j7Xog3j/0H1F/hleIqiEK4TYJrRXhDBcoDo5XigoOAOAenvkXJklgPL09QspJQZA5MKr+
ELvJPUmf6Lxer0373BaqVnVwi/1n8KgGMDmoGPHu+EFyWBvmIV7AnJ7iiagIuT63BdVNTnfcioS0
60mZ4lazxXw5g8VKbnth2ue2oHhCxAWsjCdRG+YlG0xgOr2OJ0giwklxjEnpuVNScMa2yCQ9OLk/
IvWOaabbguOZaAW489yGB3Q8EyWw6Xm+KSieceJGqj61Bccz7ExoC45nEqVBbm1SgDtCPuNx23F6
jHJQh2K2Comb58v1X1S/CcpB/WsFwhcFvwL9aWcjUlmsZlbbRfKASfDmqMH2uVECXHAAPU+Y3Bso
kPcCDI4ntp0nRPzPOKjm/u64pb03xJ8YvUn7Zx7gzn+KJ7g+p/xLMyGXBDf3c/MElpUzIbVX256S
VFJ4pT4B/yuTv3HHDSoAAAAASUVORK5CYII=

------=_NextPart_000_0000_01CE3A81.CA9C5BC0
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://1.gravatar.com/avatar/ad516503a11cd5ca435acc9bb6523536?s=25&d=identicon&forcedefault=y&r=G

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

------=_NextPart_000_0000_01CE3A81.CA9C5BC0
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://s2.wp.com/wp-content/mu-plugins/highlander-comments/images/wplogo.png?m=1289230950g

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
5JCI0cSjJ0oAAAAASUVORK5CYII=

------=_NextPart_000_0000_01CE3A81.CA9C5BC0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://s2.wp.com/_static/??-eJx9jcsOgkAMRX/IsVGDwYXxW3iUWijthOmE8PcSN5AQXd7knHtgjqExdVSHMYcomVgTCA+YoEePVTOE7zo3KZ1gh9ditAlGhK1lD52J2Awzt4R+kHYN1o6VfQF/47jWYq4BBalSDzRlJfxnR0trSyqeIPkiR/bn68a/xufldi+K2+Nalv0HJetj0Q==

#wpadminbar li#wp-admin-bar-admin-bar-likes-widget {
	width: 61px;
}
#wpadminbar iframe.admin-bar-likes-widget {
	border-width: 0px; top: 0px; width: 61px; height: 28px; position: =
absolute; min-height: 28px;
}
div.jetpack-likes-widget-wrapper {
	width: 100%;
}
div.slim-likes-widget.jetpack-likes-widget-wrapper {
	width: 1px;
}
#likes-other-gravatars {
	border-width: 0px; padding: 10px; display: none; filter: =
alpha(opacity=3D88); position: absolute; z-index: 1000; min-width: =
130px; opacity: 0.88; box-shadow: 0px 0px 10px black; background-color: =
rgb(0, 0, 0);
}
#likes-other-gravatars * {
	line-height: normal;
}
#likes-other-gravatars .likes-text {
	color: white; padding-bottom: 5px; font-size: 14px;
}
#likes-other-gravatars ul {
	margin: 0px; padding: 0px; text-indent: 0px; list-style-type: none;
}
#likes-other-gravatars li {
	margin: 0px; padding: 0px; text-indent: 0px; list-style-type: none;
}
#likes-other-gravatars li::before {
	content: "";
}
#likes-other-gravatars ul.wpl-avatars {
	overflow: auto; display: block; position: absolute; max-height: 190px;
}
#likes-other-gravatars ul.wpl-avatars li {
	margin: 0px 5px 5px 0px; width: 32px; height: 32px; float: left;
}
#likes-other-gravatars ul.wpl-avatars li a {
	margin: 0px 2px 0px 0px; border-bottom-color: currentColor !important; =
border-bottom-width: medium !important; border-bottom-style: none =
!important; display: block;
}
#likes-other-gravatars ul.wpl-avatars li a img {
	margin: 0px !important; padding: 0px !important; border: currentColor; =
position: static;
}
div.sd-box {
	border-top-color: rgba(0, 0, 0, 0.13); border-top-width: 1px; =
border-top-style: solid;
}
h3.sd-title {
	margin: 3px 0px; padding: 0px; border: currentColor; width: 15.62%; =
text-transform: none; line-height: 1; letter-spacing: 0px; font-family: =
"Helvetica Neue", Helvetica, Arial, sans-serif; font-size: 12px; =
font-weight: bold; float: left; position: static;
}
.rtl .sd-title {
	text-align: right; float: right;
}
.entry-content .post-likes-widget {
	border-width: 0px; margin: 0px;
}
.post-likes-widget {
	border-width: 0px; margin: 0px;
}
.comment-likes-widget {
	border-width: 0px; margin: 0px;
}
.post-likes-widget-placeholder {
	border-width: 0px; margin: 0px;
}
.post-likes-widget-placeholder .button {
	background: rgb(239, 239, 239); margin: 0px; padding: 0px; =
border-radius: 3px; border: 1px solid rgb(221, 221, 221) !important; =
color: rgb(153, 153, 153); line-height: 1; font-family: "Helvetica =
Neue", Helvetica, Arial, sans-serif; font-size: 12px; font-weight: =
normal; text-decoration: none; display: inline-block; box-shadow: inset =
0px 1px 0px #fff;
}
.post-likes-widget-placeholder .button span {
	padding: 1px 5px 1px 2px; line-height: 1.5em; display: block; opacity: =
0.8; text-shadow: none;
}
.post-likes-widget-placeholder .button span::before {
	top: 3px; color: rgb(151, 168, 204); line-height: 0; font-family: =
"Noticons"; font-size: 16px; position: relative; content: "\f408"; =
text-shadow: 0 1px 0 #fff;
}
.post-likes-widget-placeholder .loading {
	color: rgb(153, 153, 153); font-family: "Helvetica Neue", Helvetica, =
Arial, sans-serif; font-size: 12px;
}
.post-likes-widget {
	width: 82.12%; float: right; display: none;
}
.slim-likes-widget .post-likes-widget {
	width: auto; float: none;
}
div.sd-like-enabled.sharedaddy .sd-like h3 {
	display: none;
}
div.sd-like-enabled.sharedaddy .sd-like .post-likes-widget {
	width: 100%; float: none;
}
div.sd-rating-enabled.sharedaddy .sd-like .post-likes-widget {
	width: 82.12%; float: right;
}
div.sd-sharing-enabled.sharedaddy .sd-like .post-likes-widget {
	width: 82.12%; float: right;
}
div.sd-rating-enabled.sharedaddy .sd-like h3 {
	display: block;
}
div.sd-sharing-enabled.sharedaddy .sd-like h3 {
	display: block;
}
.comment-likes-widget {
	width: 100%;
}
#bit {
=09
}
#bit * {
=09
}
#bit {
	font: 13px/normal "Helvetica Neue", sans-serif; font-size-adjust: none; =
font-stretch: normal; _display: none;
}
.loggedout-follow-shelf {
	right: 40%; bottom: -300px; position: fixed; z-index: 999999;
}
.loggedout-follow-normal {
	right: 10px; bottom: -300px; position: fixed; z-index: 999999;
}
.loggedout-follow-typekit {
	right: 10px; bottom: -300px; margin-right: 4.5em; position: fixed; =
z-index: 999999;
}
#bit a.bsub {
	font: 13px/28px "Helvetica Neue", sans-serif; padding: 0px 10px 0px =
8px; border: 0px currentColor; color: rgb(204, 204, 204); =
letter-spacing: normal; overflow: hidden; text-decoration: none =
!important; float: right; display: block; outline-width: 0px; =
outline-style: none; font-size-adjust: none; font-stretch: normal; =
box-shadow: 0px -1px 5px rgba(0,0,0,0.2); background-color: rgb(70, 70, =
70); text-shadow: #444 0px -1px 0px; -webkit-box-shadow: 0 -1px 5px =
rgba(0, 0, 0, 0.20); -moz-box-shadow: 0 -1px 5px rgba(0, 0, 0, 0.20); =
-o-box-shadow: 0 -1px 5px rgba(0, 0, 0, 0.20); -ms-box-shadow: 0 -1px =
5px rgba(0, 0, 0, 0.20);
}
#bit a.bsub {
	-moz-border-radius: 2px 2px 0 0; -webkit-border-radius: 2px 2px 0 0; =
-o-border-radius: 2px 2px 0 0; -ms-border-radius: 2px 2px 0 0;
}
#bit a.bsub span {
	background: =
url("/wp-content/blog-plugins/loggedout-follow/../../mu-plugins/admin-bar=
/wpcom-admin-bar-icons.png") no-repeat 0px -77px; padding-left: 19px;
}
#bit a:hover span {
	background-position: 0px -117px; color: rgb(255, 255, 255) !important;
}
#bit a.open.bsub span {
	background-position: 0px -117px; color: rgb(255, 255, 255) !important;
}
#bit a.open.bsub {
	background: rgb(51, 51, 51);
}
#bitsubscribe {
	background: rgb(70, 70, 70); padding: 15px; border-radius: 2px 0px 0px; =
width: 200px; color: rgb(255, 255, 255); margin-top: 27px; =
-moz-border-radius: 2px 0 0 0; -webkit-border-radius: 2px 0 0 0; =
-o-border-radius: 2px 0 0 0; -ms-border-radius: 2px 0 0 0;
}
div.open#bitsubscribe {
	box-shadow: 0px 0px 8px rgba(0,0,0,0.5); -webkit-box-shadow: 0 0 8px =
rgba(0, 0, 0, 0.5); -moz-box-shadow: 0 0 8px rgba(0, 0, 0, 0.5); =
-o-box-shadow: 0 0 8px rgba(0, 0, 0, 0.5); -ms-box-shadow: 0 0 8px =
rgba(0, 0, 0, 0.5);
}
#bitsubscribe div {
	overflow: hidden;
}
#bit h3 {
	margin: 0px 0px 0.5em !important; text-align: left; color: rgb(255, =
255, 255); font-family: "Helvetica Neue", Helvetica, Arial, sans-serif; =
font-size: 20px; font-weight: 300; text-shadow: 0 1px 0 #333;
}
#bit #bitsubscribe h3 {
	margin: 0px 0px 0.5em !important; text-align: left; color: rgb(255, =
255, 255); font-family: "Helvetica Neue", Helvetica, Arial, sans-serif; =
font-size: 20px; font-weight: 300; text-shadow: 0 1px 0 #333;
}
#bit #bitsubscribe p {
	font: 300 15px/1.3em "Helvetica Neue", Helvetica, Arial, sans-serif; =
margin: 0px 0px 1em; color: rgb(255, 255, 255); font-size-adjust: none; =
font-stretch: normal; text-shadow: 0 1px 0 #333;
}
#bitsubscribe p a {
	margin: 20px 0px 0px; color: rgb(255, 255, 255); text-decoration: =
underline;
}
#bit #bitsubscribe p.bit-follow-count {
	font-size: 13px;
}
#bitsubscribe input[type=3Dsubmit] {
	background: rgb(51, 51, 51); padding: 2px 20px; border-radius: 11px; =
border: 1px solid rgb(40, 40, 40); color: rgb(204, 204, 204); =
text-decoration: none; box-shadow: inset 0px 1px 0px #444; text-shadow: =
0 1px 0 #000; -webkit-box-shadow: inset 0 1px 0 #444; -moz-box-shadow: =
inset 0 1px 0 #444; -moz-border-radius: 11px; -webkit-border-radius: =
11px; -webkit-transition: all 0.25s ease-in-out; -moz-transition: all =
0.25s ease-in-out; -o-transition: all 0.25s ease-in-out; transition: all =
0.25s ease-in-out;
}
#bitsubscribe input[type=3Dsubmit]:hover {
	background: rgb(34, 34, 34); color: rgb(255, 255, 255); =
text-decoration: none; box-shadow: inset 0px 1px 0px #4f4f4f; =
-webkit-box-shadow: inset 0 1px 0 #4f4f4f; -moz-box-shadow: inset 0 1px =
0 #4f4f4f;
}
#bitsubscribe input[type=3Dsubmit]:active {
	background: rgb(17, 17, 17); color: rgb(170, 170, 170); =
text-decoration: none; box-shadow: inset 0px -1px 0px #333; =
-webkit-box-shadow: inset 0 -1px 0 #333; -moz-box-shadow: inset 0 -1px 0 =
#333;
}
#bitsubscribe input[type=3Dtext] {
	font: 300 15px/normal "Helvetica Neue", Helvetica, Arial, sans-serif; =
border-radius: 3px; font-size-adjust: none; font-stretch: normal; =
-moz-border-radius: 3px; -webkit-border-radius: 3px; -o-border-radius: =
3px; -ms-border-radius: 3px;
}
#bitsubscribe input[type=3Dtext]:focus {
	border: 1px solid rgb(0, 0, 0);
}
.open#bitsubscribe {
	display: block;
}
#bsub-subscribe-button {
	margin: 0px auto; text-align: center;
}
#bitsubscribe #lof-readerpromo p {
	color: rgb(204, 204, 204);
}
#bitsubscribe #lof-followpublicize {
	margin-bottom: 0.5em; border-top-color: rgb(60, 60, 60); =
border-top-width: 1px; border-top-style: solid;
}
#bitsubscribe #lof-followpublicize h3 {
	padding-top: 1em; font-size: 13px; margin-bottom: 1em !important;
}
#bitsubscribe #lof-followpublicize p.lof-followpublicize-twitter {
	background: rgb(85, 85, 85); border-radius: 3px; overflow: hidden; =
margin-bottom: 0.5em; box-shadow: inset 0px 1px 1px #333; =
-webkit-box-shadow: inset 0 1px 1px #333; -moz-box-shadow: inset 0 1px =
1px #333; -o-box-shadow: inset 0 1px 1px #333; -ms-box-shadow: inset 0 =
1px 1px #333; -moz-border-radius: 3px; -webkit-border-radius: 3px; =
-o-border-radius: 3px; -ms-border-radius: 3px;
}
#bitsubscribe #lof-followpublicize p.lof-followpublicize-facebook {
	background: rgb(85, 85, 85); border-radius: 3px; overflow: hidden; =
margin-bottom: 0.5em; box-shadow: inset 0px 1px 1px #333; =
-webkit-box-shadow: inset 0 1px 1px #333; -moz-box-shadow: inset 0 1px =
1px #333; -o-box-shadow: inset 0 1px 1px #333; -ms-box-shadow: inset 0 =
1px 1px #333; -moz-border-radius: 3px; -webkit-border-radius: 3px; =
-o-border-radius: 3px; -ms-border-radius: 3px;
}
#bitsubscribe #lof-followpublicize p.lof-followpublicize-twitter {
	padding: 10px 10px 5px;
}
#bitsubscribe #bsub-credit {
	font: 11px/normal "Helvetica Neue", sans-serif; margin: 0px 0px -15px; =
padding: 7px 0px; text-align: center; border-top-color: rgb(60, 60, 60); =
border-top-width: 1px; border-top-style: solid; font-size-adjust: none; =
font-stretch: normal;
}
#bitsubscribe #bsub-credit a {
	color: rgb(170, 170, 170); text-decoration: none; text-shadow: 0 1px 0 =
#262626;
}
#bitsubscribe #bsub-credit a:hover {
	color: rgb(255, 255, 255);
}
#bit {
	display: none;
}
#bit a.bsub {
	display: none;
}
#bit {
	display: block;
}
#bit a.bsub {
	display: block;
}
.neverending.infinite-scroll #content-container {
	padding-bottom: 50px;
}
.infinite-scroll #content .infinite-wrap {
	padding-top: 0px; border-top-color: currentColor; border-top-width: =
medium; border-top-style: none;
}
#infinite-footer {
	z-index: 10;
}
#infinite-footer .container {
	color: rgb(74, 74, 73);
}
#infinite-footer .blog-info {
	color: rgb(59, 59, 59);
}
#infinite-footer .blog-info a {
	color: rgb(59, 59, 59);
}
#infinite-footer .blog-credits a {
	color: rgb(59, 59, 59);
}
#infinite-footer .blog-info a:hover {
	color: rgb(59, 59, 59);
}
#infinite-footer .blog-info a:focus {
	color: rgb(59, 59, 59);
}
#infinite-footer .blog-credits a:hover {
	color: rgb(59, 59, 59);
}
#infinite-footer .blog-credits a:focus {
	color: rgb(59, 59, 59);
}
#infinite-footer .blog-credits {
	color: rgb(102, 102, 102);
}
.infinite-loader {
	margin: 0px auto 34px; width: 24px;
}
#infinite-handle {
	margin: 0px auto 45px; text-align: center;
}
#infinite-handle span {
	border-color: rgb(50, 50, 50); color: rgb(163, 163, 163); =
background-color: rgb(50, 50, 50);
}
#infinite-handle span::before {
	color: rgb(163, 163, 163);
}
#infinite-handle span:hover {
	color: rgb(163, 163, 163);
}
#infinite-handle span:focus {
	color: rgb(163, 163, 163);
}
#infinite-handle span:hover::before {
	color: rgb(163, 163, 163);
}
#infinite-handle span:focus::before {
	color: rgb(163, 163, 163);
}
.infinite-scroll .navigation {
	display: none;
}
.neverending.infinite-scroll #footer-wrap-outer {
	display: none;
}
.neverending.infinity-end #footer-wrap-outer {
	display: block;
}
div.sharedaddy ul {
	list-style: none; margin: 0px; padding: 0px; border: currentColor;
}
div.sharedaddy li {
	list-style: none; margin: 0px; padding: 0px; border: currentColor;
}
div.sharedaddy {
	clear: both; font-family: "Helvetica Neue", Helvetica, Arial, =
sans-serif; font-size: 12px;
}
#content div.sharedaddy {
	clear: both; font-family: "Helvetica Neue", Helvetica, Arial, =
sans-serif; font-size: 12px;
}
#main div.sharedaddy {
	clear: both; font-family: "Helvetica Neue", Helvetica, Arial, =
sans-serif; font-size: 12px;
}
div.sharedaddy {
	border-radius: 0px !important; -moz-border-radius: 0; =
-webkit-border-radius: 0;
}
div.sharedaddy div {
	border-radius: 0px !important; -moz-border-radius: 0; =
-webkit-border-radius: 0;
}
div.sharedaddy h3 {
	margin: 3px 0px; padding: 0px; border: currentColor; width: 15.62%; =
text-transform: none; line-height: 1; letter-spacing: 0px; font-family: =
"Helvetica Neue", Helvetica, Arial, sans-serif; font-size: 12px; =
font-weight: bold; float: left; position: static;
}
#content div.sharedaddy h3 {
	margin: 3px 0px; padding: 0px; border: currentColor; width: 15.62%; =
text-transform: none; line-height: 1; letter-spacing: 0px; font-family: =
"Helvetica Neue", Helvetica, Arial, sans-serif; font-size: 12px; =
font-weight: bold; float: left; position: static;
}
#main div.sharedaddy h3 {
	margin: 3px 0px; padding: 0px; border: currentColor; width: 15.62%; =
text-transform: none; line-height: 1; letter-spacing: 0px; font-family: =
"Helvetica Neue", Helvetica, Arial, sans-serif; font-size: 12px; =
font-weight: bold; float: left; position: static;
}
#primary div.sharedaddy h3 {
	margin: 3px 0px; padding: 0px; border: currentColor; width: 15.62%; =
text-transform: none; line-height: 1; letter-spacing: 0px; font-family: =
"Helvetica Neue", Helvetica, Arial, sans-serif; font-size: 12px; =
font-weight: bold; float: left; position: static;
}
.rtl div.sharedaddy h3 {
	text-align: right; float: right;
}
.rtl #content div.sharedaddy h3 {
	text-align: right; float: right;
}
.rtl #main div.sharedaddy h3 {
	text-align: right; float: right;
}
.rtl #primary div.sharedaddy h3 {
	text-align: right; float: right;
}
div.sharedaddy ul {
	margin: 0px !important; padding: 0px !important; text-indent: 0px;
}
div.sharedaddy li {
	margin: 0px !important; padding: 0px !important; text-indent: 0px;
}
div.sharedaddy li::before {
	content: "";
}
div.sharedaddy div.pd-rating {
	margin: 0px; min-height: 23px;
}
div.sharedaddy a {
	font-style: normal;
}
div.sharedaddy a:link {
	font-style: normal;
}
div.sharedaddy a:visited {
	font-style: normal;
}
div.sharedaddy::before {
	height: 0px; overflow: hidden; display: block; content: "\0020";
}
div.sharedaddy::after {
	height: 0px; overflow: hidden; display: block; content: "\0020";
}
div.sharedaddy .sd-block::before {
	height: 0px; overflow: hidden; display: block; content: "\0020";
}
div.sharedaddy .sd-block::after {
	height: 0px; overflow: hidden; display: block; content: "\0020";
}
div.sharedaddy ul::before {
	height: 0px; overflow: hidden; display: block; content: "\0020";
}
div.sharedaddy ul::after {
	height: 0px; overflow: hidden; display: block; content: "\0020";
}
div.sharedaddy::after {
	clear: both;
}
div.sharedaddy .sd-block::after {
	clear: both;
}
div.sharedaddy ul::after {
	clear: both;
}
div.sharedaddy {
	zoom: 1;
}
div.sharedaddy .sd-block {
	zoom: 1;
}
div.sharedaddy ul {
	zoom: 1;
}
div.sharedaddy div.sd-block {
	margin: 0px; padding: 10px 0px 5px; width: 100%; border-top-color: =
rgba(0, 0, 0, 0.13); border-top-width: 1px; border-top-style: solid;
}
div.sharedaddy-dark.sharedaddy .sd-block {
	border-top-color: rgba(50, 50, 50, 0.5);
}
div.sharedaddy .sd-content {
	margin: -2px 0px 0px; width: 82.12%; float: right;
}
div.sharedaddy .sd-content ul {
	margin: 0px;
}
div.sharedaddy .sd-content li {
	margin: 0px 5px 5px 0px !important; float: left; display: block;
}
.rtl div.sharedaddy .sd-content {
	float: right;
}
.rtl div.sharedaddy .sd-content li {
	margin: 0px 0px 5px 5px !important; float: right;
}
div.sharedaddy a.sd-button {
	background: rgb(239, 239, 239); margin: 0px; padding: 0px; =
border-radius: 3px; border: 1px solid rgb(221, 221, 221) !important; =
color: rgb(0, 0, 0) !important; line-height: 1; font-family: "Helvetica =
Neue", Helvetica, Arial, sans-serif; font-size: 12px; font-weight: =
normal; text-decoration: none; display: inline-block; box-shadow: inset =
0px 1px 0px #fff;
}
div.sharedaddy a.sd-button:hover {
	background: rgb(238, 238, 238); border-color: rgb(204, 204, 204); =
color: rgb(0, 0, 0); text-shadow: 0 1px 0 #fff;
}
div.sharedaddy a.sd-button:active {
	border-color: rgb(221, 221, 221); box-shadow: inset 0px -1px 0px #fff; =
background-color: rgb(239, 239, 239);
}
a.sd-button > span {
	padding: 4px 8px; line-height: 1.5em; display: block; opacity: 0.8; =
text-shadow: none;
}
a.sd-button:hover span {
	opacity: 1;
}
.sd-button span.share-count {
	color: rgb(102, 102, 102); line-height: 1; font-size: 90%; margin-left: =
5px;
}
.rtl .sd-button span.share-count {
	margin-right: 5px;
}
.sd-social-icon-text a.sd-button > span {
	background-position: 2px; padding: 1px 5px 1px 23px; background-repeat: =
no-repeat;
}
a.sd-button > span {
	background-position: 2px; padding: 1px 5px 1px 23px; background-repeat: =
no-repeat;
}
.sd-social-icon a.sd-button > span {
	background-position: center; padding: 3px; width: 16px; height: 16px; =
text-indent: -9999px; background-repeat: no-repeat;
}
.sd-social-text a.sd-button > span {
	padding-left: 5px;
}
.sd-social-official li {
	height: 21px;
}
div.sharedaddy .no-text {
	width: 21px; height: 21px;
}
div.sharedaddy .no-text a {
	text-decoration: none;
}
div.sharedaddy .no-icon a span {
	padding-left: 5px; background-image: none;
}
div.sharedaddy li.no-icon div a span {
	padding-left: 5px; background-image: none;
}
.rtl .sd-social-icon-text a.sd-button > span {
	background-position: 98%; padding: 3px 23px 3px 5px;
}
.rtl a.sd-button > span {
	background-position: 98%; padding: 3px 23px 3px 5px;
}
.rtl .sd-social-text a.sd-button > span {
	padding-right: 5px; padding-left: 0px;
}
.rtl div.sharedaddy .no-icon a span {
	padding-right: 5px; padding-left: 0px;
}
.rtl div.sharedaddy li.no-icon div a span {
	padding-right: 5px; padding-left: 0px;
}
div.sharedaddy .sd-rating .pd-rating {
	margin: 0px; width: 82.12%; float: right;
}
div.sharedaddy .wpl-likebox {
	padding-right: 0px !important; padding-left: 0px !important; =
margin-right: 0px !important; margin-left: 0px !important;
}
#main div.sharedaddy .wpl-likebox {
	padding-right: 0px !important; padding-left: 0px !important; =
margin-right: 0px !important; margin-left: 0px !important;
}
#content div.sharedaddy .wpl-likebox {
	padding-right: 0px !important; padding-left: 0px !important; =
margin-right: 0px !important; margin-left: 0px !important;
}
.wpl-likebox .sd-content {
	margin: -2px 0px 0px;
}
div.sharedaddy .wpl-button {
	margin: 0px 5px 0px 0px; float: left;
}
div.sharedaddy .wpl-count {
	margin: 0px; padding: 5px; text-align: left; line-height: 1; font-size: =
12px;
}
div.sharedaddy ul.wpl-avatars {
	margin: 0px -2px 0px 0px !important; overflow: hidden; padding-top: 8px =
!important;
}
.wpl-likebox {
	margin: 0px -2px 0px 0px !important; overflow: hidden; padding-top: 8px =
!important;
}
div.sharedaddy ul.wpl-avatars li {
	width: 32px; height: 32px;
}
div.sharedaddy ul.wpl-avatars li a {
	margin: 0px 2px 0px 0px; border-bottom-color: currentColor !important; =
border-bottom-width: medium !important; border-bottom-style: none =
!important; display: block;
}
div.sharedaddy ul.wpl-avatars li a img {
	margin: 0px !important; padding: 0px !important; border: currentColor; =
position: static;
}
div.sharedaddy .wpl-button a.sd-button span {
	padding: 1px 5px 1px 2px; text-shadow: none;
}
div.sharedaddy .wpl-button a.sd-button span::before {
	top: 3px; color: rgb(46, 162, 204); line-height: 0; font-family: =
"Noticons"; font-size: 16px; position: relative; content: "\f408"; =
text-shadow: 0 1px 0 #fff;
}
div.sharedaddy .wpl-button a.liked.sd-button {
	background: rgb(254, 255, 206); border: 1px solid rgb(243, 227, 137); =
cursor: default; box-shadow: inset 0px 1px 0px #fff;
}
div.sharedaddy .wpl-button a.liked.sd-button span {
	opacity: 1;
}
.rtl div.sharedaddy .wpl-button {
	margin: 0px 0px 0px 5px; float: right;
}
.rtl div.sharedaddy #wpl-count {
	text-align: right;
}
.rtl div.sharedaddy ul.wpl-avatars {
	margin: 0px 0px 0px -2px !important;
}
.rtl .wpl-likebox {
	margin: 0px 0px 0px -2px !important;
}
.rtl div.sharedaddy .wpl-button a.sd-button span {
	background-position: right; padding: 3px 5px;
}
#wpl-mustlogin {
	padding: 15px; border-radius: 3px; border: 1px solid rgb(204, 204, =
204); width: 80%; color: rgb(51, 51, 51); position: absolute; z-index: =
1001; max-width: 312px; box-shadow: 0px 2px 8px rgba(0,0,0,0.2); =
background-color: rgb(255, 255, 255); text-shadow: none; =
-webkit-box-shadow: 0px 2px 8px rgba(0, 0, 0, .2); -moz-box-shadow: 0px =
2px 8px rgba(0, 0, 0, .2); -moz-border-radius: 3px; =
-webkit-border-radius: 3px;
}
#wpl-mustlogin p {
	margin: 0px; color: rgb(51, 51, 51); text-shadow: none;
}
#wpl-mustlogin label {
	color: rgb(51, 51, 51); text-shadow: none;
}
#wpl-mustlogin a {
	color: rgb(51, 51, 51); text-shadow: none;
}
#wpl-mustlogin input[type=3D'text'] {
	background: rgb(255, 255, 255); border: 1px solid rgb(204, 204, 204); =
width: 98.5%; color: rgb(51, 51, 51); text-shadow: none;
}
#wpl-mustlogin input[type=3D'password'] {
	background: rgb(255, 255, 255); border: 1px solid rgb(204, 204, 204); =
width: 98.5%; color: rgb(51, 51, 51); text-shadow: none;
}
#wpl-mustlogin {
	background: rgb(240, 240, 240); padding: 10px; border-radius: 3px; =
line-height: 14px !important; clear: left; font-size: 11px; margin-top: =
5px; -moz-border-radius: 3px; -webkit-border-radius: 3px;
}
#wpl-mustlogin a {
	color: rgb(136, 136, 136); text-decoration: underline;
}
#wpl-mustlogin p {
	margin: 5px 0px; padding: 0px;
}
#wpl-mustlogin input.input {
	background: rgb(255, 255, 255); padding: 2px; border: 1px solid =
rgb(204, 204, 204); line-height: 12px; font-family: inherit; font-size: =
11px; -webkit-box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.1) inset; =
-moz-box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.1) inset;
}
#wpl-mustlogin input#wp-submit {
	background: repeat-x rgb(250, 250, 250); padding: 2px 4px !important; =
border-radius: 3px; border: 1px solid rgb(204, 204, 204); line-height: =
12px; font-size: 11px; -moz-border-radius: 3px; -webkit-border-radius: =
3px;
}
#wpl-mustlogin label {
	position: relative; cursor: text;
}
#wpl-mustlogin label span {
	padding: 0px !important; left: 5px; top: 0px; position: absolute;
}
.rtl #wpl-mustlogin {
	margin-right: -120px; margin-left: 0px;
}
.rtl #wpl-mustlogin {
	clear: right;
}
.rtl #wpl-mustlogin label span {
	left: auto; right: 5px;
}
div.sd-like-enabled.sharedaddy .sd-like h3 {
	display: none;
}
div.sd-like-enabled.sharedaddy .sd-like div.sd-content {
	width: 100%; float: none;
}
div.sd-rating-enabled.sharedaddy .sd-like h3 {
	display: block;
}
div.sd-rating-enabled.sharedaddy .sd-like div.sd-content {
	width: 82.12%; float: right;
}
div.sd-sharing-enabled.sharedaddy .sd-like h3 {
	display: block;
}
div.sd-sharing-enabled.sharedaddy .sd-like div.sd-content {
	width: 82.12%; float: right;
}
.rtl div.sd-rating-enabled.sharedaddy .sd-like div.sd-content {
	float: left;
}
.rtl div.sd-sharing-enabled.sharedaddy .sd-like div.sd-content {
	float: left;
}
div.sharedaddy .wpl-likebox {
	bottom: auto !important; position: static !important;
}
body {
	background: rgb(243, 244, 238); margin: 0px; padding: 0px; color: =
rgb(102, 102, 102); font-family: "Palatino", "Georgia", "Baskerville", =
serif;
}
a {
	color: rgb(95, 95, 95);
}
img {
	border: 0px currentColor;
}
#menu {
	background: rgb(25, 25, 25); border-bottom-color: rgb(55, 55, 55); =
border-bottom-width: 1px; border-bottom-style: solid; display: block;
}
#menu .menu-header {
	margin: auto auto 0px; width: 800px; background-color: rgb(25, 25, 25);
}
.content-sidebar-sidebar #menu .menu-header {
	width: 947px;
}
#menu .menu-header ul {
	list-style: none; margin: 0px;
}
#menu li {
	list-style: none; margin: 0px;
}
div.menu ul {
	list-style: none; margin: 0px;
}
#menu .menu-header li {
	float: left; position: relative;
}
div.menu li {
	float: left; position: relative;
}
#menu a {
	color: rgb(134, 134, 134); line-height: 3em; padding-right: 40px; =
text-decoration: none; display: block;
}
#menu ul ul {
	left: 0px; top: 38px; width: 180px; padding-left: 0px; float: left; =
display: none; position: absolute; z-index: 99999; box-shadow: 0px 2px =
3px rgba(100,100,100,0.2); -webkit-box-shadow: 0px 2px 3px rgba(100, =
100, 100, 0.2); -moz-box-shadow: 0px 2px 3px rgba(100, 100, 100, 0.2);
}
#menu ul ul li {
	min-width: 180px;
}
#menu ul ul ul {
	left: 100%; top: 0px;
}
#menu ul ul a {
	padding: 10px; width: 160px; height: auto; line-height: 1em;
}
#menu li:hover > a {
	color: rgb(255, 255, 255);
}
#menu ul ul :hover > a {
	color: rgb(255, 255, 255);
}
#menu ul li:hover > ul {
	background: rgb(25, 25, 25); display: block;
}
#menu ul li.current_page_item > a {
	color: rgb(255, 255, 255);
}
#menu ul li.current-menu-ancestor > a {
	color: rgb(255, 255, 255);
}
#menu ul li.current-menu-item > a {
	color: rgb(255, 255, 255);
}
#menu ul li.current-menu-parent > a {
	color: rgb(255, 255, 255);
}
* html #menu ul li.current_page_item a {
	color: rgb(255, 255, 255);
}
* html #menu ul li.current-menu-ancestor a {
	color: rgb(255, 255, 255);
}
* html #menu ul li.current-menu-item a {
	color: rgb(255, 255, 255);
}
* html #menu ul li.current-menu-parent a {
	color: rgb(255, 255, 255);
}
* html #menu ul li a:hover {
	color: rgb(255, 255, 255);
}
.sub-menu {
	padding-left: 0px;
}
#header-wrap {
	background: =
url("/wp-content/themes/pub/elegant-grunge/images/header-repeat.png") =
repeat-x top; position: relative;
}
#header-image {
	left: -400px; top: 14px; width: 800px; height: 134px; margin-left: 50%; =
display: block; position: absolute;
}
.content-sidebar-sidebar #header-image {
	left: -477px; top: 0px; width: 956px; height: 160px;
}
#header-image img {
	width: auto; height: auto; max-width: 100%;
}
.content-sidebar-sidebar #header-image img {
	width: 956px; height: 160px;
}
#header {
	background: =
url("/wp-content/themes/pub/elegant-grunge/images/header.png") no-repeat =
center; height: 216px; position: relative;
}
.no-sidebar #header {
	background-image: =
url("/wp-content/themes/pub/elegant-grunge/images/header-no-sidebar.png")=
;
}
.content-sidebar-sidebar #header {
	background-image: =
url("/wp-content/themes/pub/elegant-grunge/images/header-double-sidebar.p=
ng");
}
.sidebar-content #header {
	background-image: =
url("/wp-content/themes/pub/elegant-grunge/images/rtl-header.png");
}
#header div {
	margin: 0px auto; width: 800px; height: 168px;
}
.content-sidebar-sidebar #header div {
	width: 947px;
}
#header div a {
	width: 100%; height: 168px; display: block;
}
#header h1 {
	font: 2.2em/169px "Georgia", "Baskerville", serif; margin: 0px 0px 0px =
0.5em; float: left; position: relative; z-index: 11; font-size-adjust: =
none; font-stretch: normal;
}
#header h2 {
	font: 2.2em/169px "Georgia", "Baskerville", serif; margin: 0px 0px 0px =
0.5em; float: left; position: relative; z-index: 11; font-size-adjust: =
none; font-stretch: normal;
}
#header h1 a {
	color: rgb(211, 211, 211); font-style: normal; font-weight: normal; =
text-decoration: none; text-shadow: #000 0 1px 2px;
}
#header h2 a {
	color: rgb(211, 211, 211); font-style: normal; font-weight: normal; =
text-decoration: none; text-shadow: #000 0 1px 2px;
}
#header div a {
	color: rgb(211, 211, 211); font-style: normal; font-weight: normal; =
text-decoration: none; text-shadow: #000 0 1px 2px;
}
#blog-description {
	margin: 0px 30px 0px 0px; padding: 0px; left: 1.3em; top: 55px; color: =
rgb(211, 211, 211); line-height: 135%; position: relative; z-index: 10; =
text-shadow: #000 0 1px 1px;
}
#content-container {
	background: =
url("/wp-content/themes/pub/elegant-grunge/images/body.png") repeat-y =
top;
}
.no-sidebar #content-container {
	background-image: =
url("/wp-content/themes/pub/elegant-grunge/images/body-no-sidebar.png");
}
.content-sidebar-sidebar #content-container {
	background-image: =
url("/wp-content/themes/pub/elegant-grunge/images/body-double-sidebar.png=
");
}
.sidebar-content #content-container {
	background-image: =
url("/wp-content/themes/pub/elegant-grunge/images/rtl-body.png");
}
#content {
	margin: 0px auto; width: 800px;
}
.content-sidebar-sidebar #content {
	width: 947px;
}
#content-body {
	padding: 0px 20px; width: 490px; float: left;
}
.no-sidebar #content-body {
	width: 760px; float: none;
}
.sidebar-content #content-body {
	float: right;
}
.gallery-item {
	min-width: 33%;
}
#sidebar {
	left: -15px; width: 220px; font-size: 0.87em; float: right; position: =
relative;
}
.content-sidebar-sidebar #sidebar {
	left: 28px; width: 181px; font-size: 0.8em; float: left; position: =
relative;
}
.content-sidebar-sidebar #sidebar-2 {
	left: -8px; width: 169px; font-size: 0.8em; float: right; position: =
relative;
}
#footer-wrap-outer {
	background: =
url("/wp-content/themes/pub/elegant-grunge/images/footer-repeat.gif") =
repeat-x 0px 325px; margin-top: -51px;
}
#footer-wrap {
	background: =
url("/wp-content/themes/pub/elegant-grunge/images/footer.png") no-repeat =
top; padding: 91px 0px 30px; width: 100%;
}
.no-sidebar #footer-wrap {
	background-image: =
url("/wp-content/themes/pub/elegant-grunge/images/footer-no-sidebar.png")=
;
}
.content-sidebar-sidebar #footer-wrap {
	background-image: =
url("/wp-content/themes/pub/elegant-grunge/images/footer-double-sidebar.p=
ng");
}
.sidebar-content #footer-wrap {
	background-image: =
url("/wp-content/themes/pub/elegant-grunge/images/rtl-footer.png");
}
#footer {
	margin: 0px auto; padding: 90px 7px 0px; width: 800px; position: =
relative; min-height: 30px;
}
h1 {
	margin: 0px 0px 0.5em; color: rgb(59, 59, 59); line-height: 1em; =
font-size: 2.4em; font-weight: normal;
}
h2 {
	margin: 0px 0px 0.5em; color: rgb(59, 59, 59); line-height: 1em; =
font-size: 2.4em; font-weight: normal;
}
h1.page-title {
	line-height: 1.3em;
}
h2.page-title {
	line-height: 1.3em;
}
h1.entry-title {
	width: 354px; margin-bottom: 0.25em; position: relative; z-index: 1;
}
h2.entry-title {
	width: 354px; margin-bottom: 0.25em; position: relative; z-index: 1;
}
.archive .entry-title {
	font-size: 1.6em;
}
h2 a {
	color: rgb(59, 59, 59); text-decoration: none;
}
.sticky {
	background: =
url("/wp-content/themes/pub/elegant-grunge/images/sticky-back.png") =
no-repeat center; color: rgb(59, 59, 59);
}
.post .entry {
	line-height: 1.3em; clear: both; font-size: 0.87em;
}
.entry h1 {
	font-size: 2em;
}
.entry h2 {
	font-size: 1.8em;
}
.entry h3 {
	font-size: 1.6em;
}
.entry h4 {
	font-size: 1.5em;
}
.entry h5 {
	font-size: 1.3em;
}
.entry h6 {
	font-size: 1.2em;
}
.entry h1 {
	margin: 0px 0px 10px; color: rgb(102, 102, 102); line-height: 1.3em; =
font-weight: normal;
}
.entry h2 {
	margin: 0px 0px 10px; color: rgb(102, 102, 102); line-height: 1.3em; =
font-weight: normal;
}
.entry h3 {
	margin: 0px 0px 10px; color: rgb(102, 102, 102); line-height: 1.3em; =
font-weight: normal;
}
.entry h4 {
	margin: 0px 0px 10px; color: rgb(102, 102, 102); line-height: 1.3em; =
font-weight: normal;
}
.entry h5 {
	margin: 0px 0px 10px; color: rgb(102, 102, 102); line-height: 1.3em; =
font-weight: normal;
}
.entry h6 {
	margin: 0px 0px 10px; color: rgb(102, 102, 102); line-height: 1.3em; =
font-weight: normal;
}
.post .entry blockquote {
	margin: 0px; padding: 0px 30px; color: rgb(128, 128, 128);
}
.comment-content blockquote {
	margin: 0px; padding: 0px 30px; color: rgb(128, 128, 128);
}
.wp-post-image {
	margin: 0px 10px 0px 0px; float: left;
}
.post .entry img {
	height: auto; max-width: 100%;
}
.post .entry p img.alignleft {
	margin: 0px 10px 0px 0px;
}
.post .entry p img.alignright {
	margin: 0px 0px 0px 10px;
}
.post .entry img.size-thumbnail {
	margin-top: 10px; margin-bottom: 10px;
}
.post .entry table {
	margin: 1em 0px;
}
.post .entry ul li {
	line-height: 150%;
}
.post .entry ol li {
	line-height: 150%;
}
.post .post-author {
	color: rgb(148, 148, 148); font-size: 14px;
}
.post .post-author a {
	color: rgb(148, 148, 148); font-size: 14px; text-decoration: none;
}
.post .post-author a:hover {
	color: rgb(59, 59, 59);
}
.post .info {
	color: rgb(188, 188, 188); font-size: 0.8em;
}
.post .post-date {
	width: 136px; height: 73px; text-align: center; color: rgb(169, 169, =
169); line-height: 26px; font-size: 13px; font-weight: bold; =
margin-right: -8px; float: right; background-image: =
url("/wp-content/themes/pub/elegant-grunge/images/date-wide.png");
}
.post .post-date a {
	text-align: center; color: rgb(169, 169, 169); text-decoration: none; =
margin-top: 8px; margin-left: 4px; display: inline-block;
}
.post .post-date span {
	text-align: center; color: rgb(169, 169, 169); text-decoration: none; =
margin-top: 8px; margin-left: 4px; display: inline-block;
}
.post .post-date a:hover {
	color: rgb(59, 59, 59);
}
.metadata {
	text-align: center; color: rgb(121, 121, 121); font-size: 0.7em; =
margin-top: 40px;
}
.metadata a {
	text-decoration: none;
}
.nav-previous {
	float: left;
}
.nav-next {
	float: right;
}
.nav-previous a {
	color: rgb(136, 137, 123); font-size: 0.87em;
}
.nav-next a {
	color: rgb(136, 137, 123); font-size: 0.87em;
}
.more-link {
	background: =
url("/wp-content/themes/pub/elegant-grunge/images/more-link.png") =
no-repeat left; color: rgb(136, 137, 123); padding-left: 30px; clear: =
both; font-size: 0.87em; margin-top: 30px; margin-left: 20px; display: =
block;
}
.hr {
	margin: -4px auto 0px; border: 0px currentColor; width: 426px; height: =
121px; color: rgb(248, 250, 247); clear: both; background-image: =
url("/wp-content/themes/pub/elegant-grunge/images/hr.png"); =
background-color: rgb(248, 250, 247);
}
.hr hr {
	display: none;
}
.sticky .hr {
	background-image: =
url("/wp-content/themes/pub/elegant-grunge/images/hr-sticky.png") =
!important;
}
.adcode {
	font-size: 12px;
}
.navigation {
	width: 100%; margin-top: 50px;
}
.single .navigation {
	margin-top: 0px;
}
#image-navigation {
	width: 100%; margin-top: 15px;
}
#image-navigation a {
	margin: 0px 5px;
}
.navigation a {
	font-size: 0.7em; text-decoration: none;
}
#image-navigation {
	font-size: 0.7em; text-decoration: none;
}
.navigation .previous {
	float: right;
}
.navigation .next {
	float: left;
}
.search_result {
	margin-left: 20px;
}
.search_result h4 {
	margin-left: -20px;
}
.search_result h4 a {
	text-decoration: none;
}
.search_result .metadata {
	text-align: left; color: rgb(191, 196, 193); margin-top: 10px;
}
.search_result .metadata a {
	color: rgb(191, 196, 193);
}
#entry-author-info {
	line-height: 1.15em; clear: both; font-size: 0.8em;
}
#entry-author-info {
	margin-top: 20px; margin-bottom: 40px;
}
body.author #entry-author-info {
	margin: 20px 0px 40px; clear: both;
}
#entry-author-info h2 {
	color: rgb(102, 102, 102); font-size: 1.5em;
}
#author-avatar {
	width: 60px; float: left; display: inline;
}
#author-description {
	width: 415px; line-height: 125%; margin-left: 15px; float: left;
}
#author-description .more-link {
	margin-top: 20px;
}
div.the_attachment {
	text-align: center;
}
.entry-caption {
	text-align: center;
}
.thumbs-nav {
	text-align: left;
}
.thumbs-nav p.prev-post {
	float: left;
}
.thumbs-nav p.next-post {
	float: right;
}
.aligncenter {
	margin-right: auto; margin-left: auto; display: block;
}
div.aligncenter {
	margin-right: auto; margin-left: auto; display: block;
}
.alignleft {
	float: left;
}
.alignright {
	float: right;
}
.clear {
	clear: both;
}
.wp-caption {
	border: currentColor; text-align: center; padding-top: 4px; max-width: =
100%; background-color: rgb(248, 250, 247);
}
.alignleft.wp-caption {
	margin: 0px 10px 0px 0px;
}
.alignright.wp-caption {
	margin: 0px 0px 0px 10px;
}
.wp-caption img {
	margin: 0px; padding: 0px; border: 0px currentColor; height: auto; =
max-width: 100%;
}
.wp-caption p.wp-caption-text {
	margin: 0px; padding: 0px 4px 5px; line-height: 17px; font-size: 11px;
}
#wpstats {
	margin-top: -6px; float: right;
}
#commentlist {
	padding: 0px; margin-top: 16px; margin-left: 40px; list-style-type: =
none;
}
#commentlist li {
	margin-top: 16px; margin-left: 30px; max-width: 460px;
}
#commentlist li .comment-content {
	background: =
url("/wp-content/themes/pub/elegant-grunge/images/comment.jpg") =
no-repeat right top;
}
#commentlist li .before-comment {
	background: =
url("/wp-content/themes/pub/elegant-grunge/images/comment.jpg") =
no-repeat right top;
}
#commentlist li .after-comment {
	background: =
url("/wp-content/themes/pub/elegant-grunge/images/comment.jpg") =
no-repeat right top;
}
#commentlist li .after-comment div {
	background: =
url("/wp-content/themes/pub/elegant-grunge/images/comment.jpg") =
no-repeat right top;
}
#commentlist li.bypostauthor .comment-content {
	color: rgb(0, 0, 0); background-image: =
url("/wp-content/themes/pub/elegant-grunge/images/comment-author.jpg");
}
#commentlist li.bypostauthor .before-comment {
	color: rgb(0, 0, 0); background-image: =
url("/wp-content/themes/pub/elegant-grunge/images/comment-author.jpg");
}
#commentlist li.bypostauthor .after-comment {
	color: rgb(0, 0, 0); background-image: =
url("/wp-content/themes/pub/elegant-grunge/images/comment-author.jpg");
}
#commentlist li.bypostauthor .after-comment div {
	color: rgb(0, 0, 0); background-image: =
url("/wp-content/themes/pub/elegant-grunge/images/comment-author.jpg");
}
#commentlist li.trackback .comment-content {
	color: rgb(0, 0, 0); background-image: =
url("/wp-content/themes/pub/elegant-grunge/images/comment-reaction.jpg");=

}
#commentlist li.trackback .before-comment {
	color: rgb(0, 0, 0); background-image: =
url("/wp-content/themes/pub/elegant-grunge/images/comment-reaction.jpg");=

}
#commentlist li.trackback .after-comment {
	color: rgb(0, 0, 0); background-image: =
url("/wp-content/themes/pub/elegant-grunge/images/comment-reaction.jpg");=

}
#commentlist li.trackback .after-comment div {
	color: rgb(0, 0, 0); background-image: =
url("/wp-content/themes/pub/elegant-grunge/images/comment-reaction.jpg");=

}
#commentlist li.pingback .comment-content {
	color: rgb(0, 0, 0); background-image: =
url("/wp-content/themes/pub/elegant-grunge/images/comment-reaction.jpg");=

}
#commentlist li.pingback .before-comment {
	color: rgb(0, 0, 0); background-image: =
url("/wp-content/themes/pub/elegant-grunge/images/comment-reaction.jpg");=

}
#commentlist li.pingback .after-comment {
	color: rgb(0, 0, 0); background-image: =
url("/wp-content/themes/pub/elegant-grunge/images/comment-reaction.jpg");=

}
#commentlist li.pingback .after-comment div {
	color: rgb(0, 0, 0); background-image: =
url("/wp-content/themes/pub/elegant-grunge/images/comment-reaction.jpg");=

}
#commentlist li .comment-content {
	padding: 28px 0px 0px; position: relative;
}
#commentlist li .before-comment {
	left: 0px; top: 0px; width: 27px; height: 100%; margin-left: -27px; =
position: absolute;
}
#commentlist li .after-comment {
	width: 100%; position: relative;
}
#commentlist li .after-comment {
	height: 40px; font-size: 1px;
}
#commentlist li .after-comment div {
	height: 40px; font-size: 1px;
}
#commentlist li .after-comment {
	background-position: right bottom;
}
#commentlist li .after-comment div {
	background-position: left bottom; width: 27px; margin-left: -27px; =
position: relative;
}
#commentlist .comment {
	margin: 0px; padding-right: 0px; font-size: 12px;
}
.comment-text {
	padding-right: 15px; font-size: 13px; margin-top: 24px; margin-right: =
10px; margin-left: 42px; word-wrap: break-word;
}
.comment-text * {
	padding-bottom: 0px; margin-bottom: 0px;
}
.trackback .comment-text {
	margin-left: 0px;
}
.pingback .comment-text {
	margin-left: 0px;
}
#commentlist .comment .reply {
	top: 15px; text-align: right; font-size: 0.87em; margin-right: 25px; =
position: relative; z-index: 100;
}
#commentlist .comment .reply a {
	color: rgb(179, 179, 179); text-decoration: none;
}
#commentlist .comment .reply a:hover {
	color: rgb(95, 95, 95); text-decoration: none;
}
#commentlist .comment .reply a:active {
	color: rgb(95, 95, 95); text-decoration: none;
}
#page .avatar {
	margin: 0px 10px 0px 0px !important; float: left;
}
.comment cite {
	width: 400px; display: block; word-wrap: break-word;
}
.comment cite a {
	width: 400px; display: block; word-wrap: break-word;
}
#commentform input[type=3D'text'] {
	padding: 5px; border: 1px solid rgb(242, 242, 242); width: 310px; =
float: right;
}
#commentform p {
	width: 400px;
}
textarea {
	margin: 0px; padding: 5px; border: 1px solid rgb(242, 242, 242); width: =
460px; height: 100px;
}
#commentform .logged-in-as {
	width: 460px; font-size: 12px;
}
#commentform .comment-notes {
	width: 460px; font-size: 12px;
}
#commentform p label {
	margin: 6px 0px 8px; display: inline-block;
}
#commentform .form-allowed-tags {
	color: rgb(179, 179, 179); font-size: 12px;
}
.sidebar h2 {
	color: rgb(103, 103, 103); clear: both; font-size: 1.4em; =
margin-bottom: 20px; display: block;
}
.sidebar div {
	word-wrap: break-word;
}
.sidebar p {
	word-wrap: break-word;
}
.sidebar a {
	color: rgb(159, 159, 159);
}
.sidebar ul {
	margin: 0px; padding: 0px;
}
.sidebar ul ol {
	margin: 0px; padding: 0px;
}
.sidebar ul li {
	margin-bottom: 25px; list-style-type: none; list-style-image: none;
}
.sidebar ul p {
	margin: 5px 0px 8px;
}
.sidebar ul select {
	margin: 5px 0px 8px;
}
.sidebar ul ul {
	margin: 5px 0px 0px 10px;
}
.sidebar ul ol {
	margin: 5px 0px 0px 10px;
}
.sidebar ul ul ul {
	margin: 0px 0px 0px 10px; word-wrap: break-word;
}
.sidebar ul ol {
	margin: 0px 0px 0px 10px; word-wrap: break-word;
}
ol > li {
	list-style: decimal;
}
.sidebar ul ol li {
	list-style: decimal;
}
.sidebar ul ul li {
	margin: 3px 0px 0px 5px; padding: 0px; color: rgb(153, 153, 153); =
line-height: 150%; list-style-type: square;
}
.sidebar ul ol li {
	margin: 3px 0px 0px 5px; padding: 0px; color: rgb(153, 153, 153); =
line-height: 150%; list-style-type: square;
}
.sidebar img {
	height: auto; max-width: 100%;
}
.sidebar #searchform div {
	background: =
url("/wp-content/themes/pub/elegant-grunge/images/searchform.png") =
no-repeat left top; width: 226px; height: 49px; margin-left: -7px;
}
#footer #searchform div {
	background: =
url("/wp-content/themes/pub/elegant-grunge/images/searchform.png") =
no-repeat left top; width: 226px; height: 49px; margin-left: -7px;
}
#footer #searchform div {
	background: =
url("/wp-content/themes/pub/elegant-grunge/images/searchform-footer.png")=
 no-repeat left top;
}
#sidebar-2 #searchform div {
	margin-left: -15px;
}
.sidebar #searchform div #s {
	border: 0px currentColor; width: 149px; height: 16px; color: rgb(144, =
144, 144); font-size: 1em; margin-top: 14px; margin-left: 19px;
}
#footer #searchform div #s {
	border: 0px currentColor; width: 149px; height: 16px; color: rgb(144, =
144, 144); font-size: 1em; margin-top: 14px; margin-left: 19px;
}
.sidebar #searchform div #searchsubmit {
	border: 0px currentColor; width: 39px; height: 26px; color: rgb(153, =
153, 153); text-transform: lowercase; overflow: hidden; font-family: =
"Palatino", "Georgia", "Baskerville", serif; font-size: 0.7em; =
margin-left: 4px; cursor: pointer;
}
#footer #searchform div #searchsubmit {
	border: 0px currentColor; width: 39px; height: 26px; color: rgb(153, =
153, 153); text-transform: lowercase; overflow: hidden; font-family: =
"Palatino", "Georgia", "Baskerville", serif; font-size: 0.7em; =
margin-left: 4px; cursor: pointer;
}
.content-sidebar-sidebar .sidebar #searchform div {
	width: 190px; height: 45px; margin-left: -3px; background-image: =
url("/wp-content/themes/pub/elegant-grunge/images/searchform-double-sideb=
ar.jpg");
}
.content-sidebar-sidebar .sidebar #searchform div #s {
	border: 0px currentColor; width: 117px; height: 16px; color: rgb(144, =
144, 144); font-size: 0.87em; margin-top: 14px; margin-left: 19px;
}
.widget_tag_cloud a {
	text-decoration: none;
}
.widget_flickr table {
	border: 0px currentColor !important; width: 100%; border-collapse: =
collapse; background-color: transparent !important;
}
.widget_flickr table img {
	max-width: 185px;
}
.widget_flickr table#flickr_badge_uber_wrapper {
	border: currentColor; border-spacing: 0;
}
.widget_flickr table#flickr_badge_wrapper {
=09
}
.widget_flickr table#flickr_badge_uber_wrapper a {
	color: rgb(159, 159, 159);
}
#footer table#flickr_badge_uber_wrapper {
	padding: 0px; border: currentColor !important; width: 100% !important; =
border-spacing: 0;
}
#footer table#flickr_badge_wrapper {
	padding: 0px; border: currentColor !important; width: 100% !important; =
border-spacing: 0;
}
#footer .widget_flickr table#flickr_badge_wrapper td br {
	display: none;
}
#footer .widget_flickr table#flickr_badge_wrapper td a {
	width: 110px; height: 110px; overflow: hidden; margin-top: 5px; float: =
left; display: inline-block;
}
#footer .widget_flickr table#flickr_badge_wrapper td a:last-child {
	width: 100%; text-align: center; margin-top: 10px;
}
#footer .widget_flickr table#flickr_badge_wrapper td img {
	width: 105px; height: auto; float: left;
}
.sidebar .widget_authors > ul {
	margin: 5px 0px 0px;
}
.sidebar .widget_authors > ul > li {
	list-style: none; margin: 5px 0px 15px;
}
.sidebar .widget_authors > ul > li > a {
	text-decoration: none;
}
#page .widget_authors .avatar {
	vertical-align: middle; float: none;
}
#page .widget_authors .avatar-1 {
	margin: 0px 0px 0px -6px !important;
}
#page .widget_authors .avatar-16 {
	margin: 0px 4px 0px 0px !important;
}
#page .widget_authors .avatar-32 {
	margin: 0px 4px 0px 0px !important;
}
#page .widget_authors .avatar-48 {
	margin: 0px 4px 0px 0px !important;
}
#page .widget_authors .avatar-96 {
	margin: 0px 4px 0px 0px !important;
}
#page .widget_authors .avatar-128 {
	margin: 0px 4px 0px 0px !important;
}
#calendar_wrap {
	margin: 0px;
}
#wp-calendar {
	width: 100%;
}
#wp-calendar th {
	text-align: left;
}
.widget-wrap h2 a {
	color: rgb(255, 255, 255) !important;
}
.timesince {
	margin: 0px 4px;
}
#footer #subscribe-rss {
	left: 0px; top: 0px; position: absolute;
}
#footer #subscribe-rss a {
	width: 149px; height: 126px; text-indent: -999em; margin-top: -5px; =
margin-left: -115px; display: block; background-image: =
url("/wp-content/themes/pub/elegant-grunge/images/rss.png");
}
#footer .legal {
	top: 10px; color: rgb(95, 95, 95); position: relative;
}
#footer .credit {
	top: 10px; color: rgb(95, 95, 95); position: relative;
}
#footer .legal {
	float: left;
}
#footer .credit a {
	text-decoration: none;
}
#footer .credit {
	float: right;
}
#footer .widget-wrap {
	width: 264px; margin-bottom: 36px; float: left;
}
#footer .widget {
	margin-right: 21px; margin-left: 21px;
}
#footer {
	line-height: 1.1em; font-size: 0.8em;
}
#footer a {
	color: rgb(163, 163, 163);
}
#footer h2 {
	color: rgb(255, 255, 255); font-size: 1.3em; font-style: normal; =
font-weight: normal; margin-bottom: 15px;
}
#footer .widget > ul {
	list-style: none; padding-left: 0px;
}
#footer .widget > ol {
	list-style: none; padding-left: 0px;
}
#footer .widget div > ul {
	list-style: none; padding-left: 0px;
}
#footer .widget div > ol {
	list-style: none; padding-left: 0px;
}
#footer ul {
	list-style: none; padding-left: 15px;
}
#footer ol {
	list-style: none; padding-left: 15px;
}
#footer li {
	line-height: 140%;
}
.clearfix::after {
	height: 0px; clear: both; display: block; visibility: hidden; content: =
".";
}
.clearfix {
	height: 1%;
}
*:first-child + html .clearfix {
	min-height: 1px;
}
#ie8 .post .entry img {
	width: auto;
}

------=_NextPart_000_0000_01CE3A81.CA9C5BC0
Content-Type: text/css;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://s0.wp.com/wp-content/mu-plugins/global-print/global-print.css?m=1335386953g

@page  {}
* {
	color: black !important; letter-spacing: normal !important; =
word-spacing: normal !important; box-shadow: none !important; =
text-shadow: none;
}
a {
	text-decoration: underline;
}
a:visited {
	text-decoration: underline;
}
.entry-content a[href]::after {
	content: " (" attr(href) ")";
}
.entry a[href]::after {
	content: " (" attr(href) ")";
}
abbr[title]::after {
	content: " (" attr(title) ")";
}
a[href^=3D'javascript:']::after {
	content: "" !important;
}
a[href^=3D'#']::after {
	content: "" !important;
}
[class^=3D'meta'] a::after {
	content: "" !important;
}
[class$=3D'meta'] a::after {
	content: "" !important;
}
.page-link a::after {
	content: "" !important;
}
.postmetadata a::after {
	content: "" !important;
}
.gallery-item a::after {
	content: "" !important;
}
.postinfo a::after {
	content: "" !important;
}
.entry h2 a::after {
	content: "" !important;
}
.entry-taxonomy a::after {
	content: "" !important;
}
.tags a::after {
	content: "" !important;
}
#masthead a::after {
	content: "" !important;
}
pre {
	page-break-inside: avoid;
}
blockquote {
	page-break-inside: avoid;
}
thead {
	display: table-header-group;
}
tr {
	page-break-inside: avoid;
}
img {
	page-break-inside: avoid;
}
img {
	max-width: 100%;
}
p {
	orphans: 3; widows: 3;
}
h2 {
	orphans: 3; widows: 3;
}
h3 {
	orphans: 3; widows: 3;
}
h2 {
	page-break-after: avoid;
}
h3 {
	page-break-after: avoid;
}
body {
	min-width: 0px !important;
}
div {
	margin: 0px !important; padding: 0px !important; border: 0px =
currentColor !important; width: auto !important; height: auto =
!important; float: none !important; position: static !important; =
min-height: 0px !important; max-height: none !important; min-width: 0px =
!important; max-width: none !important;
}
section {
	margin: 0px !important; padding: 0px !important; border: 0px =
currentColor !important; width: auto !important; height: auto =
!important; float: none !important; position: static !important; =
min-height: 0px !important; max-height: none !important; min-width: 0px =
!important; max-width: none !important;
}
article {
	margin: 0px !important; padding: 0px !important; border: 0px =
currentColor !important; width: auto !important; height: auto =
!important; float: none !important; position: static !important; =
min-height: 0px !important; max-height: none !important; min-width: 0px =
!important; max-width: none !important;
}
header {
	margin: 0px !important; padding: 0px !important; border: 0px =
currentColor !important; width: auto !important; height: auto =
!important; float: none !important; position: static !important; =
min-height: 0px !important; max-height: none !important; min-width: 0px =
!important; max-width: none !important;
}
hgroup {
	margin: 0px !important; padding: 0px !important; border: 0px =
currentColor !important; width: auto !important; height: auto =
!important; float: none !important; position: static !important; =
min-height: 0px !important; max-height: none !important; min-width: 0px =
!important; max-width: none !important;
}
footer {
	margin: 0px !important; padding: 0px !important; border: 0px =
currentColor !important; width: auto !important; height: auto =
!important; float: none !important; position: static !important; =
min-height: 0px !important; max-height: none !important; min-width: 0px =
!important; max-width: none !important;
}
h1 {
	margin: 0px !important; padding: 0px !important; border: 0px =
currentColor !important; width: auto !important; height: auto =
!important; float: none !important; position: static !important; =
min-height: 0px !important; max-height: none !important; min-width: 0px =
!important; max-width: none !important;
}
h2 {
	margin: 0px !important; padding: 0px !important; border: 0px =
currentColor !important; width: auto !important; height: auto =
!important; float: none !important; position: static !important; =
min-height: 0px !important; max-height: none !important; min-width: 0px =
!important; max-width: none !important;
}
h3 {
	margin: 0px !important; padding: 0px !important; border: 0px =
currentColor !important; width: auto !important; height: auto =
!important; float: none !important; position: static !important; =
min-height: 0px !important; max-height: none !important; min-width: 0px =
!important; max-width: none !important;
}
h4 {
	margin: 0px !important; padding: 0px !important; border: 0px =
currentColor !important; width: auto !important; height: auto =
!important; float: none !important; position: static !important; =
min-height: 0px !important; max-height: none !important; min-width: 0px =
!important; max-width: none !important;
}
h5 {
	margin: 0px !important; padding: 0px !important; border: 0px =
currentColor !important; width: auto !important; height: auto =
!important; float: none !important; position: static !important; =
min-height: 0px !important; max-height: none !important; min-width: 0px =
!important; max-width: none !important;
}
h6 {
	margin: 0px !important; padding: 0px !important; border: 0px =
currentColor !important; width: auto !important; height: auto =
!important; float: none !important; position: static !important; =
min-height: 0px !important; max-height: none !important; min-width: 0px =
!important; max-width: none !important;
}
p {
	margin: 0px !important; padding: 0px !important; border: 0px =
currentColor !important; width: auto !important; height: auto =
!important; float: none !important; position: static !important; =
min-height: 0px !important; max-height: none !important; min-width: 0px =
!important; max-width: none !important;
}
ul {
	margin: 0px !important; padding: 0px !important; border: 0px =
currentColor !important; width: auto !important; height: auto =
!important; float: none !important; position: static !important; =
min-height: 0px !important; max-height: none !important; min-width: 0px =
!important; max-width: none !important;
}
ol {
	margin: 0px !important; padding: 0px !important; border: 0px =
currentColor !important; width: auto !important; height: auto =
!important; float: none !important; position: static !important; =
min-height: 0px !important; max-height: none !important; min-width: 0px =
!important; max-width: none !important;
}
li {
	margin: 0px !important; padding: 0px !important; border: 0px =
currentColor !important; width: auto !important; height: auto =
!important; float: none !important; position: static !important; =
min-height: 0px !important; max-height: none !important; min-width: 0px =
!important; max-width: none !important;
}
dl {
	margin: 0px !important; padding: 0px !important; border: 0px =
currentColor !important; width: auto !important; height: auto =
!important; float: none !important; position: static !important; =
min-height: 0px !important; max-height: none !important; min-width: 0px =
!important; max-width: none !important;
}
dt {
	margin: 0px !important; padding: 0px !important; border: 0px =
currentColor !important; width: auto !important; height: auto =
!important; float: none !important; position: static !important; =
min-height: 0px !important; max-height: none !important; min-width: 0px =
!important; max-width: none !important;
}
dd {
	margin: 0px !important; padding: 0px !important; border: 0px =
currentColor !important; width: auto !important; height: auto =
!important; float: none !important; position: static !important; =
min-height: 0px !important; max-height: none !important; min-width: 0px =
!important; max-width: none !important;
}
blockquote {
	margin: 0px !important; padding: 0px !important; border: 0px =
currentColor !important; width: auto !important; height: auto =
!important; float: none !important; position: static !important; =
min-height: 0px !important; max-height: none !important; min-width: 0px =
!important; max-width: none !important;
}
table {
	margin: 0px !important; padding: 0px !important; border: 0px =
currentColor !important; width: auto !important; height: auto =
!important; float: none !important; position: static !important; =
min-height: 0px !important; max-height: none !important; min-width: 0px =
!important; max-width: none !important;
}
fieldset {
	margin: 0px !important; padding: 0px !important; border: 0px =
currentColor !important; width: auto !important; height: auto =
!important; float: none !important; position: static !important; =
min-height: 0px !important; max-height: none !important; min-width: 0px =
!important; max-width: none !important;
}
a {
	border: 0px currentColor !important; float: none !important; display: =
inline !important;
}
span {
	border: 0px currentColor !important; float: none !important; display: =
inline !important;
}
time {
	border: 0px currentColor !important; float: none !important; display: =
inline !important;
}
code {
	border: 0px currentColor !important; float: none !important; display: =
inline !important;
}
small {
	border: 0px currentColor !important; float: none !important; display: =
inline !important;
}
img {
	border-width: 0px !important; padding: 0px !important; border-radius: =
0px !important;
}
* {
	line-height: 1.25 !important; font-family: inherit !important; =
font-size: 100% !important;
}
body {
	font-family: Palatino, "Palatino Linotype", serif !important; =
font-size: 12pt !important;
}
h1 {
	text-align: left !important; text-transform: none !important; =
font-family: "Helvetica Neue", Helvetica, Arial, sans-serif !important; =
font-style: normal !important; font-variant: normal !important; =
font-weight: normal !important;
}
h2 {
	text-align: left !important; text-transform: none !important; =
font-family: "Helvetica Neue", Helvetica, Arial, sans-serif !important; =
font-style: normal !important; font-variant: normal !important; =
font-weight: normal !important;
}
h3 {
	text-align: left !important; text-transform: none !important; =
font-family: "Helvetica Neue", Helvetica, Arial, sans-serif !important; =
font-style: normal !important; font-variant: normal !important; =
font-weight: normal !important;
}
h4 {
	text-align: left !important; text-transform: none !important; =
font-family: "Helvetica Neue", Helvetica, Arial, sans-serif !important; =
font-style: normal !important; font-variant: normal !important; =
font-weight: normal !important;
}
h5 {
	text-align: left !important; text-transform: none !important; =
font-family: "Helvetica Neue", Helvetica, Arial, sans-serif !important; =
font-style: normal !important; font-variant: normal !important; =
font-weight: normal !important;
}
h6 {
	text-align: left !important; text-transform: none !important; =
font-family: "Helvetica Neue", Helvetica, Arial, sans-serif !important; =
font-style: normal !important; font-variant: normal !important; =
font-weight: normal !important;
}
strong {
	font-weight: bold !important;
}
b {
	font-weight: bold !important;
}
th {
	font-weight: bold !important;
}
thead {
	font-weight: bold !important;
}
dt {
	font-weight: bold !important;
}
em {
	font-style: italic !important;
}
i {
	font-style: italic !important;
}
h1 {
	padding: 1.25em 0px !important; font-size: 2em !important;
}
h2 {
	padding: 1.51em 0px !important; font-size: 1.75em !important;
}
h3 {
	padding: 1.45em 0px !important; font-size: 1.5em !important;
}
h4 {
	padding: 1.25em 0px !important; font-size: 1.33em !important;
}
h5 {
	padding: 1.51em 0px !important; font-size: 1.16em !important;
}
h1 + h2 {
	padding-top: 0px !important;
}
h2 + h3 {
	padding-top: 0px !important;
}
h3 + h4 {
	padding-top: 0px !important;
}
h4 + h5 {
	padding-top: 0px !important;
}
h5 + h6 {
	padding-top: 0px !important;
}
p {
	margin: 0px 0px 1em !important;
}
ul {
	margin: 0px 0px 1em !important;
}
ol {
	margin: 0px 0px 1em !important;
}
dl {
	margin: 0px 0px 1em !important;
}
address {
	margin: 0px 0px 1em !important;
}
::first-letter {
	margin: 0px !important; padding: 0px !important; color: inherit =
!important; line-height: inherit !important; font-size: inherit =
!important; float: none !important; display: inline !important; =
position: static !important;
}
::first-line {
	margin: 0px !important; padding: 0px !important; color: inherit =
!important; line-height: inherit !important; font-size: inherit =
!important; float: none !important; display: inline !important; =
position: static !important;
}
.text .content > p:first-child::first-letter {
	margin: 0px !important; padding: 0px !important; color: inherit =
!important; line-height: inherit !important; font-size: inherit =
!important; float: none !important; display: inline !important; =
position: static !important;
}
ol {
	list-style: decimal !important;
}
ul {
	list-style: circle !important;
}
li ol {
	margin-bottom: 0px !important;
}
li ul {
	margin-bottom: 0px !important;
}
blockquote {
	padding-left: 1.5em !important;
}
ul {
	padding-left: 1.5em !important;
}
ol {
	padding-left: 1.5em !important;
}
dd {
	padding-left: 1.5em !important;
}
pre {
	border: 0px currentColor !important; font-family: Consolas, monospace =
!important;
}
code {
	border: 0px currentColor !important; font-family: Consolas, monospace =
!important;
}
kbd {
	border: 0px currentColor !important; font-family: Consolas, monospace =
!important;
}
tt {
	border: 0px currentColor !important; font-family: Consolas, monospace =
!important;
}
table {
	border: 1pt solid black !important; border-collapse: collapse =
!important;
}
th {
	border: 1pt solid black !important; border-collapse: collapse =
!important;
}
td {
	border: 1pt solid black !important; border-collapse: collapse =
!important;
}
th {
	padding: 0.25em 0.5em !important;
}
td {
	padding: 0.25em 0.5em !important;
}
#footer {
	padding: 2em 0px 1em !important; text-align: center !important;
}
#colophon {
	padding: 2em 0px 1em !important; text-align: center !important;
}
.entry-date {
	text-align: left !important;
}
.post-date {
	text-align: left !important;
}
.date {
	text-align: left !important;
}
.entry-date * {
	display: inline !important; position: static !important;
}
.post-date * {
	display: inline !important; position: static !important;
}
.description {
	padding: 0px !important; display: block !important;
}
.widget {
	display: none !important;
}
aside {
	display: none !important;
}
.widget-area {
	display: none !important;
}
[role=3D'complemantary'] {
	display: none !important;
}
#supplementary {
	display: none !important;
}
.secondary {
	display: none !important;
}
#wpstats {
	display: none !important;
}
#wpadminbar {
	display: none !important;
}
#help {
	display: none !important;
}
#sidebar {
	display: none !important;
}
.sidebar {
	display: none !important;
}
#right_col {
	display: none !important;
}
nav {
	display: none !important;
}
#nav {
	display: none !important;
}
.nav {
	display: none !important;
}
.navigation {
	display: none !important;
}
[role=3D'navigation'] {
	display: none !important;
}
#nav-above {
	display: none !important;
}
#nav-below {
	display: none !important;
}
#nav-post {
	display: none !important;
}
#navigation {
	display: none !important;
}
.navigate-single {
	display: none !important;
}
.pagination {
	display: none !important;
}
#pagesnav {
	display: none !important;
}
#pagetab {
	display: none !important;
}
.nav-entries {
	display: none !important;
}
#navbar {
	display: none !important;
}
#menu {
	display: none !important;
}
.menu {
	display: none !important;
}
.menu-header {
	display: none !important;
}
#menus {
	display: none !important;
}
.main-nav {
	display: none !important;
}
#topmenu {
	display: none !important;
}
#menu-primary {
	display: none !important;
}
.navigation-menu {
	display: none !important;
}
.navigation-single {
	display: none !important;
}
.breadcrumb {
	display: none !important;
}
.breadcrumbs {
	display: none !important;
}
.skip-link {
	display: none !important;
}
#skiptocontent {
	display: none !important;
}
.skip-content {
	display: none !important;
}
.pagenav {
	display: none !important;
}
.page-links {
	display: none !important;
}
.post-navigation {
	display: none !important;
}
.page-link {
	display: none !important;
}
.postpages {
	display: none !important;
}
.post-nav {
	display: none !important;
}
.postnav {
	display: none !important;
}
.sharedaddy {
	display: none !important;
}
.post-edit-link {
	display: none !important;
}
.more-link {
	display: none !important;
}
.screen-reader-text {
	display: none !important;
}
legend {
	display: none !important;
}
img {
	display: none !important;
}
.page-list {
	display: none !important;
}
#tag-cloud {
	display: none !important;
}
#footer #top {
	display: none !important;
}
#right > .subcontainer {
	display: none !important;
}
#mainmenu {
	display: none !important;
}
#wrap > #rightside {
	display: none !important;
}
#wrap > #leftside {
	display: none !important;
}
#topnav {
	display: none !important;
}
#footer > .archives {
	display: none !important;
}
#syndication {
	display: none !important;
}
.primary-links {
	display: none !important;
}
.sideheading {
	display: none !important;
}
.sideheading + #credit {
	display: none !important;
}
.main > br {
	display: none !important;
}
#content_bg #right {
	display: none !important;
}
#skip {
	display: none !important;
}
.secondaryColumn {
	display: none !important;
}
#ancillary > .inside {
	display: none !important;
}
#inner-wrapper .hentry > .post-date {
	display: none !important;
}
#contentdesc {
	display: none !important;
}
#headerbanner > p {
	display: none !important;
}
#footer > .foot1 {
	display: none !important;
}
#footer > .foot2 {
	display: none !important;
}
#footer > .foot3 {
	display: none !important;
}
#credits #creditsright {
	display: none !important;
}
#obar {
	display: none !important;
}
#pagetabs {
	display: none !important;
}
.postwrapper + .title {
	display: none !important;
}
.postwrapper + .title + .post {
	display: none !important;
}
#content-inner + .title {
	display: none !important;
}
#content-inner + .title + .post {
	display: none !important;
}
#rss-feed {
	display: none !important;
}
[href=3D'#nav'] {
	display: none !important;
}
#footer-secondary #sticky-posts {
	display: none !important;
}
.meta > div > h3 {
	display: none !important;
}
#dooncha_sidebar {
	display: none !important;
}
#search_menu {
	display: none !important;
}
#topbanner > div {
	display: none !important;
}
#follow {
	display: none !important;
}
#glass-bottomblock {
	display: none !important;
}
#controls > li {
	display: none !important;
}
#respond {
	display: none !important;
}
form {
	display: none !important;
}
input {
	display: none !important;
}
select {
	display: none !important;
}
textarea {
	display: none !important;
}
div::before {
	display: none !important;
}
section::before {
	display: none !important;
}
article::before {
	display: none !important;
}
div::after {
	display: none !important;
}
section::after {
	display: none !important;
}
article::after {
	display: none !important;
}
.hentry img {
	display: inline-block !important; max-width: 100%;
}
.hentry .aligncenter {
	margin: 0px auto 1em !important; text-align: center !important; =
display: block !important;
}
.hentry .alignright {
	margin: 0px 0px 0.5em 1em !important; float: right !important;
}
.hentry .alignleft {
	margin: 0px 1em 0.5em 0px !important; float: left !important;
}
.hentry .alignnone {
	display: inline-block;
}
.gallery-item {
	margin: 1em 0px 1.5em !important; width: 33% !important; text-align: =
center !important; float: left !important;
}
.hentry .corner {
	display: none !important;
}
.hentry .lefth2img {
	display: none !important;
}
.hentry > .category > img {
	display: none !important;
}
.postmeta img {
	display: none !important;
}

------=_NextPart_000_0000_01CE3A81.CA9C5BC0
Content-Type: text/css;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://s1.wp.com/wp-content/themes/h4/global.css?m=1351293556g

img.latex {
	border: currentColor; vertical-align: middle;
}
.video-player {
	margin: auto; padding: 5px; border: 0px currentColor; text-align: =
center;
}
.wpvidavee_title {
	padding: 2px 5px; text-align: left; line-height: 12px; font-family: =
Tahoma,Arial,sans-serif; font-size: 10px; font-weight: bold;
}
.wpvidavee_footer {
	padding: 2px 5px; text-align: right; line-height: 11px; font-family: =
Tahoma,Arial,sans-serif; font-size: 9px;
}
.wpvidavee_footer a {
	text-decoration: none;
}
.wpvidavee_p {
	color: red;
}
.hidden {
	display: none;
}
.possibly-related {
	clear: both;
}
.screen-reader-text {
	left: -1000em; position: absolute;
}
.comment object {
	max-width: 100%;
}
.comment embed {
	max-width: 100%;
}
.embed-vimeo iframe {
	max-width: 100%;
}
.embed-youtube iframe {
	max-width: 100%;
}
.simple-homepage-experiment #header {
	display: none !important;
}
.simple-homepage-experiment #footer {
	display: none !important;
}
.simple-homepage-experiment #landingpage {
	display: none !important;
}
.simple-homepage-experiment .simple-homepage {
	display: block !important;
}
.simple-homepage-experiment .simple-homepage {
	background: rgb(245, 245, 245);
}
.simple-homepage-experiment body {
	line-height: 1.5; font-family: "Open Sans", "Helvetica", sans-serif =
!important; font-size: 14px;
}
.simple-homepage-experiment td {
	line-height: 1.5; font-family: "Open Sans", "Helvetica", sans-serif =
!important; font-size: 14px;
}
.simple-homepage-experiment p {
	line-height: 1.5; font-family: "Open Sans", "Helvetica", sans-serif =
!important; font-size: 14px;
}
.simple-homepage-experiment div {
	line-height: 1.5; font-family: "Open Sans", "Helvetica", sans-serif =
!important; font-size: 14px;
}
.simple-homepage-experiment input {
	line-height: 1.5; font-family: "Open Sans", "Helvetica", sans-serif =
!important; font-size: 14px;
}
.simple-homepage-experiment label {
	line-height: 1.5; font-family: "Open Sans", "Helvetica", sans-serif =
!important; font-size: 14px;
}
.simple-homepage-experiment input[type=3Dcheckbox] {
	margin: 0px;
}
.simple-homepage-experiment h2 {
	text-align: center;
}
.simple-homepage-experiment h3 {
	text-align: center;
}
.simple-homepage-experiment h2 {
	color: rgb(70, 70, 70); font-family: "Open Sans", "Helvetica", =
sans-serif !important; font-size: 18px !important; margin-bottom: 16px;
}
.simple-homepage-experiment h3 {
	color: rgb(137, 137, 137); text-transform: none !important; =
letter-spacing: 0px !important; font-size: 14px !important;
}
.simple-homepage-experiment a {
	color: rgb(30, 140, 190); text-decoration: none;
}
.simple-homepage-experiment a:hover {
	color: rgb(0, 86, 132);
}
body.simple-homepage-experiment {
	background: rgb(241, 241, 241);
}
body.simple-homepage-experiment#h4home #lang-guess {
	padding: 15px; margin-top: 85px; box-shadow: 0px 1px 5px =
rgba(0,0,0,0.4); -webkit-box-shadow: 0 1px 5px rgba(0, 0, 0, 0.4); =
-moz-box-shadow: 0 1px 5px rgba(0, 0, 0, 0.4);
}
.simple-homepage {
	display: none;
}
body.simple-homepage-experiment .simple-homepage {
	display: block;
}
.simple-homepage-experiment h1 {
	background: url("i/simple-homepage/wp-logo-1x.png") no-repeat =
!important; margin: 50px auto; width: 305px; height: 75px; color: =
rgb(115, 115, 115); line-height: 75px; padding-left: 85px; font-size: =
43px !important; font-weight: 100; text-shadow: 0 1px 0 #fff;
}
.simple-homepage-experiment .content {
	margin: auto; max-width: 910px;
}
.simple-homepage-experiment .box {
	background: rgb(255, 255, 255); padding: 35px; width: 43.4%; height: =
280px; float: left; box-sizing: border-box; box-shadow: 0px 2px 3px =
rgba(0,0,0,0.2); -webkit-box-shadow: 0px 2px 3px rgba(0, 0, 0, 0.2); =
-moz-box-shadow: 0px 2px 3px rgba(0, 0, 0, 0.2); -webkit-box-sizing: =
border-box; -moz-box-sizing: border-box;
}
.simple-homepage-experiment .box:hover {
	box-shadow: 0px 2px 5px rgba(0,0,0,0.3); -webkit-box-shadow: 0px 2px =
5px rgba(0, 0, 0, 0.3); -moz-box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.3);
}
.simple-homepage-experiment .or {
	margin: 100px 20px; border-radius: 50%; border: 8px solid rgba(0, 0, 0, =
0.1); width: 45px; height: 45px; text-align: center; color: rgba(0, 0, =
0, 0.2); text-transform: uppercase; line-height: 45px; letter-spacing: =
2px; font-size: 14px; font-weight: bold; float: left; text-shadow: 0 1px =
1px #f1f1f1, 0 0 0 #aaa, 0 4px 1px #f1f1f1;
}
.simple-homepage-experiment .sign-up {
	text-align: center;
}
.simple-homepage-experiment .big-ass-blue-button {
	margin: 20px auto; padding: 12px 40px; border-radius: 4px; border: 1px =
solid rgb(0, 136, 181); color: rgb(255, 255, 255) !important; font-size: =
24px; text-decoration: none; display: inline-block; filter: =
progid:DXImageTransform.Microsoft.gradient(GradientType=3D0,StartColorStr=
=3D'#0aa1ce', EndColorStr=3D'#0088b5'); box-shadow: inset 0px 1px 1px =
rgba(255,254,254,0.5), 0px 1px 1px rgba(0,0,0,0.3); background-color: =
rgb(10, 161, 206); text-shadow: 0px -1px 1px rgba(0, 0, 0, 0.32);
}
.simple-homepage-experiment .big-ass-blue-button:hover {
	color: rgb(255, 255, 255); filter: =
progid:DXImageTransform.Microsoft.gradient(GradientType=3D0,StartColorStr=
=3D'#4eb5d5', EndColorStr=3D'#0088b5'); background-color: rgb(78, 181, =
213);
}
.simple-homepage-experiment .big-ass-blue-button:active {
	background: rgb(10, 161, 206); box-shadow: inset 0px -1px 1px =
rgba(255,254,254,0.2);
}
.simple-homepage-experiment .login input[type=3Dtext] {
	background: url(" i/simple-homepage/login-sprite-1x.png") no-repeat =
rgb(252, 252, 252); margin: 0px 0px 10px; padding: 10px 15px 10px 35px; =
border-radius: 3px; border: 1px solid rgb(191, 191, 191); width: 90%; =
color: rgb(137, 137, 137); font-size: 14px; font-weight: 200; display: =
block; box-shadow: inset 0px 1px 3px rgba(0,0,0,0.15); =
-webkit-box-shadow: inset 0px 1px 3px rgba(0, 0, 0, 0.15); =
-moz-box-shadow: inset 0px 1px 3px rgba(0, 0, 0, 0.15);
}
.simple-homepage-experiment .login input[type=3Dpassword] {
	background: url(" i/simple-homepage/login-sprite-1x.png") no-repeat =
rgb(252, 252, 252); margin: 0px 0px 10px; padding: 10px 15px 10px 35px; =
border-radius: 3px; border: 1px solid rgb(191, 191, 191); width: 90%; =
color: rgb(137, 137, 137); font-size: 14px; font-weight: 200; display: =
block; box-shadow: inset 0px 1px 3px rgba(0,0,0,0.15); =
-webkit-box-shadow: inset 0px 1px 3px rgba(0, 0, 0, 0.15); =
-moz-box-shadow: inset 0px 1px 3px rgba(0, 0, 0, 0.15);
}
.simple-homepage-experiment .login input:focus {
	background: url(" i/simple-homepage/login-sprite-1x.png") no-repeat =
rgb(255, 255, 255); border: 1px solid rgb(170, 170, 170); color: rgb(68, =
68, 68);
}
.simple-homepage-experiment .login input[type=3Dtext] {
	background-position: -3px -3px;
}
.simple-homepage-experiment .login input[type=3Dpassword] {
	background-position: -3px -57px;
}
.simple-homepage-experiment#h4home #wrapper button.login-button {
	margin: 20px 0px !important; padding: 5px 20px !important; =
border-radius: 3px !important; border: 1px solid rgb(187, 187, 187) =
!important; color: rgb(70, 70, 70) !important; text-transform: none =
!important; line-height: 1.6 !important; letter-spacing: 0px !important; =
font-size: 15px !important; float: right !important; filter: =
progid:DXImageTransform.Microsoft.gradient(GradientType=3D0,StartColorStr=
=3D'#eaeaea', EndColorStr=3D'#c9c9c9') !important; box-shadow: inset 0px =
1px 1px rgba(255,254,254,0.8), 0px 1px 2px rgba(0,0,0,0.1) !important; =
background-color: rgb(234, 234, 234) !important; text-shadow: 0px 1px =
1px #fff;
}
.simple-homepage-experiment#h4home #wrapper .login-button:hover {
	filter: =
progid:DXImageTransform.Microsoft.gradient(GradientType=3D0,StartColorStr=
=3D'#fcfcfc', EndColorStr=3D'#cacaca') !important; background-color: =
rgb(252, 252, 252) !important;
}
.simple-homepage-experiment#h4home #wrapper .login-button:active {
	background: rgb(234, 234, 234) !important; box-shadow: 0px -1px 1px =
rgba(255,255,255,0.8) !important;
}
.simple-homepage-experiment .forgot-password {
	margin: 17px 0px 4px; clear: left; font-size: 12px; float: left; =
display: block;
}
.simple-homepage-experiment .remember-me {
	margin: 0px; clear: left; float: left;
}
.simple-homepage-experiment .remember-me label {
	color: rgb(30, 140, 190); font-size: 12px;
}
.simple-homepage-experiment .remember-me label:hover {
	color: rgb(0, 86, 132);
}
.simple-homepage-experiment .footer {
	left: 0px; text-align: center; right: 0px; bottom: 20px; color: =
rgb(137, 137, 137); clear: both; font-size: 11px; position: fixed;
}
.simple-homepage-experiment .footer .automattic {
	background: url("i/simple-homepage/automattic-1x.png") no-repeat; =
margin: 0px 3px; width: 127px; height: 13px; text-indent: -999999px; =
vertical-align: text-bottom; display: inline-block;
}
.simple-homepage-experiment .clear {
	clear: both;
}
.simple-homepage-experiment h1 {
	background: url("i/simple-homepage/wp-logo-2x.png") no-repeat =
!important;
}
.simple-homepage-experiment .footer .automattic {
	background: url("i/simple-homepage/automattic-2x.png") no-repeat 0% 0% =
/ 127px 11px;
}
.simple-homepage-experiment .login input[type=3Dtext] {
	background: url(" i/simple-homepage/login-sprite-2x.png") no-repeat 0% =
0% / 40px 96px rgb(252, 252, 252);
}
.simple-homepage-experiment .login input[type=3Dpassword] {
	background: url(" i/simple-homepage/login-sprite-2x.png") no-repeat 0% =
0% / 40px 96px rgb(252, 252, 252);
}
.simple-homepage-experiment .login input:focus {
	background: url(" i/simple-homepage/login-sprite-2x.png") no-repeat 0% =
0% / 40px 96px rgb(255, 255, 255);
}
.simple-homepage-experiment .or {
	margin: 20px auto; clear: both; float: none;
}
.simple-homepage-experiment .box {
	margin: auto 20px; width: auto; clear: both; float: none;
}
.simple-homepage-experiment .login {
	margin-bottom: 30px;
}
.simple-homepage-experiment .footer {
	padding-top: 30px; position: relative;
}
.simple-homepage-experiment .footer {
	padding-top: 30px; margin-top: 50px; position: relative;
}

------=_NextPart_000_0000_01CE3A81.CA9C5BC0
Content-Type: text/css;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://s0.wp.com/wp-content/mu-plugins/highlander-comments/style.css?m=1364417154g

#respond {
	margin: 0px 0px 15px; padding: 15px 0px; border: currentColor; width: =
auto; color: inherit; overflow: hidden; clear: both; font-family: Arial, =
Helvetica, Tahoma, Verdana, sans-serif; font-weight: normal; float: =
none;
}
div#respond {
	border: currentColor;
}
#respond form * {
	font-size: 12px;
}
#respond form {
	background: rgba(0, 0, 0, 0.08); margin: 0px; padding: 0px; border: =
currentColor; width: auto !important; text-align: left;
}
#respond h3 {
	padding-top: 0px; padding-bottom: 0px; margin-top: 15px; margin-bottom: =
15px; display: block;
}
#respond h3 small {
	float: right;
}
#respond h3 small a {
	width: auto; display: inline;
}
#respond span {
	display: inline;
}
#respond label {
	padding: 0px; color: inherit; text-transform: none; display: inline;
}
#respond form label {
	padding: 0px; color: inherit; text-transform: none; display: inline;
}
#respond .comment-textarea {
	position: relative;
}
#respond .comment-textarea label {
	margin: 0px; width: auto; color: rgba(0, 0, 0, 0.5); text-transform: =
none; line-height: 1; font-size: 14px; font-weight: normal; display: =
none;
}
.js#respond .comment-textarea label {
	left: 12px; top: 12px; display: block; position: absolute;
}
.comment_registration#comment-form-identity {
	border-bottom-color: rgba(0, 0, 0, 0.07); border-bottom-width: 1px; =
border-bottom-style: solid;
}
#respond #comment-form-comment {
	background: rgba(255, 255, 255, 0.85); padding: 10px 10px 5px =
!important; border: 1px solid rgba(0, 0, 0, 0.2); line-height: 18px =
!important; box-shadow: inset 1px 1px 2px rgba(0,0,0,0.12); =
-webkit-box-shadow: 1px 1px 2px rgba( 0, 0, 0, 0.12 ) inset; =
-moz-box-shadow: 1px 1px 2px rgba( 0, 0, 0, 0.12 ) inset; =
-webkit-transition-duration: .3s; -moz-transition-duration: .3s;
}
#comment-form-share-text-padder {
	background: rgba(255, 255, 255, 0.85); padding: 10px 10px 5px =
!important; border: 1px solid rgba(0, 0, 0, 0.2); line-height: 18px =
!important; box-shadow: inset 1px 1px 2px rgba(0,0,0,0.12); =
-webkit-box-shadow: 1px 1px 2px rgba( 0, 0, 0, 0.12 ) inset; =
-moz-box-shadow: 1px 1px 2px rgba( 0, 0, 0, 0.12 ) inset; =
-webkit-transition-duration: .3s; -moz-transition-duration: .3s;
}
#respond .active#comment-form-comment {
	background: rgba(255, 255, 255, 0.95); border: 1px solid rgba(0, 0, 0, =
0.3); box-shadow: inset 1px 1px 2px rgba(0,0,0,0.2); -webkit-box-shadow: =
1px 1px 2px rgba( 0, 0, 0, 0.2 ) inset; -moz-box-shadow: 1px 1px 2px =
rgba( 0, 0, 0, 0.2 ) inset; -webkit-transition-duration: .3s; =
-moz-transition-duration: .3s;
}
.active#comment-form-share-text-padder {
	background: rgba(255, 255, 255, 0.95); border: 1px solid rgba(0, 0, 0, =
0.3); box-shadow: inset 1px 1px 2px rgba(0,0,0,0.2); -webkit-box-shadow: =
1px 1px 2px rgba( 0, 0, 0, 0.2 ) inset; -moz-box-shadow: 1px 1px 2px =
rgba( 0, 0, 0, 0.2 ) inset; -webkit-transition-duration: .3s; =
-moz-transition-duration: .3s;
}
#respond #comment-form-comment textarea {
	margin: 0px; padding: 0px; border: currentColor !important; width: =
100%; height: 125px; color: rgba(0, 0, 0, 0.7); font-family: inherit; =
font-size: 14px; float: none; box-shadow: none; text-shadow: 0 1px 0 =
rgba( 255, 255, 255, 0.45 ); -webkit-box-shadow: none; -moz-box-shadow: =
none; -webkit-appearance: none;
}
#comment-form-share-text-padder textarea {
	margin: 0px; padding: 0px; border: currentColor !important; width: =
100%; height: 125px; color: rgba(0, 0, 0, 0.7); font-family: inherit; =
font-size: 14px; float: none; box-shadow: none; text-shadow: 0 1px 0 =
rgba( 255, 255, 255, 0.45 ); -webkit-box-shadow: none; -moz-box-shadow: =
none; -webkit-appearance: none;
}
#respond #comment-form-comment textarea:focus {
	margin: 0px; padding: 0px; border: currentColor; box-shadow: none; =
-webkit-box-shadow: none; -moz-box-shadow: none;
}
#comment-form-share-text-padder textarea:focus {
	margin: 0px; padding: 0px; border: currentColor; box-shadow: none; =
-webkit-box-shadow: none; -moz-box-shadow: none;
}
#respond #comment-form-identity {
	padding: 0px; overflow: hidden; border-top-color: rgba(255, 255, 255, =
0.35); border-top-width: 1px; border-top-style: solid;
}
#respond #comment-form-identity #comment-form-nascar {
	background: rgba(255, 255, 255, 0.7); overflow: hidden; display: none;
}
#respond #comment-form-identity #comment-form-nascar p {
	margin: 10px 0px 0px; padding: 5px 0px 0px 12px; width: auto; color: =
rgba(0, 0, 0, 0.7); line-height: 100%; float: left; display: inline;
}
#respond .comment_registration#comment-form-identity =
#comment-form-nascar p {
	margin: 10px 0px 10px 5px; padding-bottom: 5px;
}
.js#respond #comment-form-identity #comment-form-nascar {
	display: block;
}
#respond #comment-form-identity #comment-form-nascar ul {
	list-style: none; margin: 7px 12px 0px; padding: 0px; border: =
currentColor !important; text-indent: 0px; float: right;
}
#respond #comment-form-identity #comment-form-nascar ul li {
	list-style: none; margin: 0px; padding: 5px 1px; border-radius: 0px; =
border: currentColor !important; width: auto; clear: none; float: left; =
min-height: 0px; -moz-border-radius: 0; -webkit-border-radius: 0;
}
#respond #comment-form-identity #comment-form-nascar ul li.selected {
	background: inherit; border: currentColor; box-shadow: none; =
-webkit-box-shadow: none; -moz-box-shadow: none;
}
.highlander-dark #respond #comment-form-identity #comment-form-nascar ul =
li.selected {
	background: inherit; border: currentColor; box-shadow: none; =
-webkit-box-shadow: none; -moz-box-shadow: none;
}
#respond #comment-form-wordpress #wordpress-change-account p {
	margin: 0px 15px 10px 0px; padding: 0px; text-align: right;
}
#respond #comment-form-identity #comment-form-nascar ul li::before {
	content: normal;
}
#respond #comment-form-identity #comment-form-nascar ul li::before {
	content: normal;
}
#respond #comment-form-nascar ul li a {
	border: currentColor !important; height: 24px; overflow: hidden; =
font-style: normal; text-decoration: none !important; display: block; =
opacity: 0.7;
}
#respond #comment-form-nascar ul li a:hover {
	opacity: 1;
}
#respond #comment-form-nascar ul li a:focus {
	opacity: 1;
}
#respond .comment-form-padder {
	padding: 0px 12px; position: relative;
}
#respond .comment-form-service {
	background: rgba(255, 255, 255, 0.7); padding: 10px 0px; overflow: =
hidden; clear: left; border-bottom-color: rgba(0, 0, 0, 0.07); =
border-bottom-width: 1px; border-bottom-style: solid; display: none;
}
#respond .comment-form-service * {
	line-height: 18px !important;
}
#respond .selected {
	display: block;
}
#respond .comment-form-service p {
	margin: 10px 0px 3px; padding: 0px; border: currentColor; clear: none =
!important;
}
#respond .comment-form-avatar {
	float: left;
}
#respond .comment-form-avatar img {
	background: rgb(255, 255, 255); margin: 0px; padding: 1px; border: 1px =
solid rgb(204, 204, 204); width: 25px; vertical-align: middle;
}
#respond .no-border img {
	border: currentColor;
}
#respond .comment-form-fields {
	margin-top: 0px; margin-left: 38px;
}
#respond div.comment-form-field {
	padding: 0px; border: currentColor; overflow: visible; font-size: 12px; =
-webkit-margin-before: 0; -webkit-margin-after: 0;
}
#respond .comment-form-fields div.comment-form-field {
	margin: 2px 15px 5px 0px; width: auto; clear: none; position: relative;
}
#respond .comment-form-fields label {
	margin: 0px; padding: 0px; width: 100%; text-align: left; color: =
rgba(0, 0, 0, 0.5); text-transform: none; font-size: 12px; font-weight: =
normal; position: relative; z-index: 99; cursor: text; box-shadow: none; =
-webkit-box-shadow: none; -moz-box-shadow: none;
}
.js#respond .comment-form-fields label {
	padding: 0px !important; left: 8px; top: 5px; position: absolute;
}
#respond .comment-form-fields label span.required {
	margin: 0px; padding: 0px; left: auto; top: auto; width: auto; =
text-align: left; color: rgba(0, 0, 0, 0.4); font-size: 11px; float: =
none; position: relative; background-color: transparent;
}
#respond .comment-form-fields label span.nopublish {
	margin: 0px; padding: 0px; left: auto; top: auto; width: auto; =
text-align: left; color: rgba(0, 0, 0, 0.4); font-size: 11px; float: =
none; position: relative; background-color: transparent;
}
#respond .comment-form-fields label span.nopublish {
	float: right;
}
.js#respond .comment-form-fields label span.nopublish {
	right: 15px; float: none; position: absolute;
}
#respond .comment-form-fields label {
	left: auto; top: auto; position: relative;
}
.js#respond .comment-form-fields label {
	left: auto; top: auto; position: relative;
}
#respond .comment-form-fields label span.nopublish {
	right: auto; display: block; position: relative;
}
.js#respond .comment-form-fields label span.nopublish {
	right: auto; display: block; position: relative;
}
#respond .comment-form-fields div.comment-form-input {
	background: rgba(255, 255, 255, 0.9); margin: 0px 0px 8px; padding: 4px =
5px; border: 1px solid rgb(205, 205, 205); width: auto !important; =
box-shadow: inset 1px 1px 1px rgba(0,0,0,0.1); -webkit-box-shadow: 1px =
1px 1px rgba(0, 0, 0, 0.1) inset; -moz-box-shadow: 1px 1px 1px rgba(0, =
0, 0, 0.1) inset; -webkit-transition-duration: .3s; =
-moz-transition-duration: .3s;
}
#respond .comment-form-fields div.active.comment-form-input {
	background: rgba(255, 255, 255, 0.95); border: 1px solid rgba(0, 0, 0, =
0.3); box-shadow: inset 1px 1px 2px rgba(0,0,0,0.2); -webkit-box-shadow: =
1px 1px 2px rgba(0, 0, 0, 0.2) inset; -moz-box-shadow: 1px 1px 2px =
rgba(0, 0, 0, 0.2) inset; -webkit-transition-duration: .3s; =
-moz-transition-duration: .3s;
}
#respond .comment-form-fields div.comment-form-input input {
	margin: 0px !important; padding: 0px !important; border: currentColor =
!important; width: 100% !important; color: rgba(0, 0, 0, 0.7); =
line-height: 18px !important; text-indent: 0px; clear: none; =
font-family: inherit; font-size: 12px !important; float: none; position: =
static; box-shadow: none; -webkit-box-shadow: none; -moz-box-shadow: =
none; -webkit-appearance: none;
}
#respond .comment-form-fields div.comment-form-input input:focus {
	margin: 0px; padding: 0px; border: currentColor; box-shadow: none; =
-webkit-box-shadow: none; -moz-box-shadow: none;
}
#respond .comment-form-fields h5 {
	margin: 0px !important; padding: 5px 0px !important; text-transform: =
none; clear: none; font-family: inherit; font-size: 18px; font-style: =
normal; font-weight: bold; -webkit-margin-before: 0; =
-webkit-margin-after: 0;
}
#respond .comment-form-fields p.comment-form-posting-as {
	margin: 0px; color: rgba(0, 0, 0, 0.7); padding-top: 5px;
}
#respond .comment-form-fields p.comment-form-log-out {
	margin: 0px; color: rgba(0, 0, 0, 0.7); padding-top: 5px;
}
#respond .comment-form-posting-as {
	width: auto !important; padding-right: 20px !important;
}
#postas-wordpress {
	background: url("../post-flair/sharing/images/icon-wordpress.png") =
no-repeat center; width: 24px;
}
#postas-twitter {
	background: url("../post-flair/sharing/images/icon-twitter.png") =
no-repeat center; width: 24px;
}
#postas-facebook {
	background: url("../post-flair/sharing/images/icon-facebook.png") =
no-repeat center; width: 24px;
}
.pa-wordpress {
	background: url("../post-flair/sharing/images/icon-wordpress.png") =
no-repeat right 6px;
}
.pa-twitter {
	background: url("../post-flair/sharing/images/icon-twitter.png") =
no-repeat right 6px;
}
.pa-facebook {
	background: url("../post-flair/sharing/images/icon-facebook.png") =
no-repeat right 6px;
}
#postas-wordpress {
	background-image: =
url("../post-flair/sharing/images/icon-wordpress-2x.png"); =
background-size: 16px 16px;
}
.pa-wordpress {
	background-image: =
url("../post-flair/sharing/images/icon-wordpress-2x.png"); =
background-size: 16px 16px;
}
#postas-twitter {
	background-image: =
url("../post-flair/sharing/images/icon-twitter-2x.png"); =
background-size: 16px 16px;
}
.pa-twitter {
	background-image: =
url("../post-flair/sharing/images/icon-twitter-2x.png"); =
background-size: 16px 16px;
}
#postas-facebook {
	background-image: =
url("../post-flair/sharing/images/icon-facebook-2x.png"); =
background-size: 16px 16px;
}
.pa-facebook {
	background-image: =
url("../post-flair/sharing/images/icon-facebook-2x.png"); =
background-size: 16px 16px;
}
#respond .comment-form-posting-as-cancel {
	text-align: right; margin-right: 10px;
}
#respond .comment-form-fields p.comment-form-log-out {
	margin: 0px !important;
}
#respond .comment-form-service a {
	border: 0px currentColor; color: rgba(0, 0, 0, 0.6); text-decoration: =
underline;
}
#respond #comment-form-post-to {
	background: rgba(255, 255, 255, 0.35); padding: 10px 0px 6px; =
border-top-color: rgba(255, 255, 255, 0.8); border-bottom-color: rgba(0, =
0, 0, 0.05); border-top-width: 1px; border-bottom-width: 1px; =
border-top-style: solid; border-bottom-style: solid; position: relative;
}
#respond #comment-form-post-to p {
	margin: 0px 0px 3px; padding: 0px;
}
#respond #comment-form-post-to p#comment-form-post-to-edit {
	margin-top: 3px;
}
#respond #comment-form-post-to label {
	background: url("images/postto-buttons.png") no-repeat 15px -18px; =
margin: 0px; padding: 2px 22px 3px 0px; left: auto; color: rgba(0, 0, 0, =
0.7); font-weight: normal; position: relative;
}
#respond #comment-form-post-to label {
	margin-left: 5px;
}
#respond #comment-form-post-to label input {
	width: auto;
}
#respond #comment-form-post-to label#labelto-twitter {
	background-position: 15px -67px;
}
#respond #comment-form-post-to label#labelto-wordpress {
	background-position: 15px -113px;
}
#respond #comment-form-post-to label span {
	margin: 0px; padding-left: 20px; display: none;
}
#respond #comment-form-post-to label input {
	margin: 0px 0px 0px 4px !important; padding: 0px !important;
}
#respond #comment-form-post-to-edit {
	top: 5%; right: 16px; position: absolute;
}
#respond #comment-form-post-to-edit a {
	color: rgba(0, 0, 0, 0.4); font-size: 12px;
}
#comment-form-wpcom-cancel {
	background: rgba(255, 255, 255, 0.7); text-align: right; padding-right: =
15px;
}
#comment-form-wpcom-cancel p {
	margin: 0px; padding: 10px 0px;
}
#respond #comment-form-edit-share-text {
	display: none;
}
#respond #comment-form-share-text-padder {
	padding: 5px 7px !important;
}
#respond #comment-form-edit-share-text textarea {
	height: 40px; font-size: 12px;
}
#respond #comment-form-edit-share-text .comment-form-padder {
	padding: 8px 12px;
}
#respond #comment-form-edit-share-text p {
	margin: 5px 0px 0px; text-align: right; color: rgb(119, 119, 119); =
font-size: 12px; text-shadow: 0 -1px 1px #fff;
}
#respond p#wordpress-login-first {
	background: rgba(0, 0, 0, 0.07); margin: 0px 0px 10px; padding: 5px =
10px; display: none;
}
#respond #comment-form-subscribe {
	line-height: 18px !important; padding-left: 5px; margin-top: 15px; =
float: left;
}
#respond #comment-form-subscribe p {
	margin: 0px; padding: 0px 0px 2px; border: currentColor; =
-webkit-margin-before: 0; -webkit-margin-after: 0;
}
#respond p.comment-subscription-form input {
	width: auto; height: auto; float: none;
}
#respond p.comment-subscription-form label {
	margin: 0px; text-transform: none; font-size: 12px !important; =
font-weight: normal; float: none;
}
#respond .form-submit {
	margin: 0px; padding: 10px 5px 10px 0px; border: currentColor; width: =
auto !important; line-height: 18px !important; clear: none !important; =
float: right;
}
#respond .form-submit input {
	background: url("images/button-back.gif") repeat-x left bottom =
!important; padding: 3px 10px !important; border-radius: 15px =
!important; border: 1px solid rgb(204, 204, 204); width: auto; height: =
auto; color: rgb(85, 85, 85) !important; line-height: 18px !important; =
font-family: Arial, Helvetica, Tahoma, Verdana, sans-serif; font-size: =
14px !important; font-weight: normal !important; cursor: pointer; =
min-width: 0px; box-shadow: none; text-shadow: 0 1px 0 rgba( 255, 255, =
255, 0.45 ); -webkit-box-shadow: none; -moz-box-shadow: none; =
-moz-border-radius: 15px; -webkit-border-radius: 15px;
}
#respond .form-submit input#comment-submit {
	background: url("images/button-back.gif") repeat-x left bottom =
!important; padding: 3px 10px !important; border-radius: 15px =
!important; border: 1px solid rgb(204, 204, 204); width: auto; height: =
auto; color: rgb(85, 85, 85) !important; line-height: 18px !important; =
font-family: Arial, Helvetica, Tahoma, Verdana, sans-serif; font-size: =
14px !important; font-weight: normal !important; cursor: pointer; =
min-width: 0px; box-shadow: none; text-shadow: 0 1px 0 rgba( 255, 255, =
255, 0.45 ); -webkit-box-shadow: none; -moz-box-shadow: none; =
-moz-border-radius: 15px; -webkit-border-radius: 15px;
}
#respond .comment-form-fields input[type=3Dsubmit] {
	background: url("images/button-back.gif") repeat-x left bottom =
!important; padding: 3px 10px !important; border-radius: 15px =
!important; border: 1px solid rgb(204, 204, 204); width: auto; height: =
auto; color: rgb(85, 85, 85) !important; line-height: 18px !important; =
font-family: Arial, Helvetica, Tahoma, Verdana, sans-serif; font-size: =
14px !important; font-weight: normal !important; cursor: pointer; =
min-width: 0px; box-shadow: none; text-shadow: 0 1px 0 rgba( 255, 255, =
255, 0.45 ); -webkit-box-shadow: none; -moz-box-shadow: none; =
-moz-border-radius: 15px; -webkit-border-radius: 15px;
}
#respond p.form-submit input[type=3Dsubmit] {
	background: url("images/button-back.gif") repeat-x left bottom =
!important; padding: 3px 10px !important; border-radius: 15px =
!important; border: 1px solid rgb(204, 204, 204); width: auto; height: =
auto; color: rgb(85, 85, 85) !important; line-height: 18px !important; =
font-family: Arial, Helvetica, Tahoma, Verdana, sans-serif; font-size: =
14px !important; font-weight: normal !important; cursor: pointer; =
min-width: 0px; box-shadow: none; text-shadow: 0 1px 0 rgba( 255, 255, =
255, 0.45 ); -webkit-box-shadow: none; -moz-box-shadow: none; =
-moz-border-radius: 15px; -webkit-border-radius: 15px;
}
#respond input[type=3Dsubmit] {
	background: url("images/button-back.gif") repeat-x left bottom =
!important; padding: 3px 10px !important; border-radius: 15px =
!important; border: 1px solid rgb(204, 204, 204); width: auto; height: =
auto; color: rgb(85, 85, 85) !important; line-height: 18px !important; =
font-family: Arial, Helvetica, Tahoma, Verdana, sans-serif; font-size: =
14px !important; font-weight: normal !important; cursor: pointer; =
min-width: 0px; box-shadow: none; text-shadow: 0 1px 0 rgba( 255, 255, =
255, 0.45 ); -webkit-box-shadow: none; -moz-box-shadow: none; =
-moz-border-radius: 15px; -webkit-border-radius: 15px;
}
#commentform #submit {
	background: url("images/button-back.gif") repeat-x left bottom =
!important; padding: 3px 10px !important; border-radius: 15px =
!important; border: 1px solid rgb(204, 204, 204); width: auto; height: =
auto; color: rgb(85, 85, 85) !important; line-height: 18px !important; =
font-family: Arial, Helvetica, Tahoma, Verdana, sans-serif; font-size: =
14px !important; font-weight: normal !important; cursor: pointer; =
min-width: 0px; box-shadow: none; text-shadow: 0 1px 0 rgba( 255, 255, =
255, 0.45 ); -webkit-box-shadow: none; -moz-box-shadow: none; =
-moz-border-radius: 15px; -webkit-border-radius: 15px;
}
#respond .form-submit input:hover {
	background: url("images/button-back-over.gif") repeat-x left top; =
border-color: rgb(153, 153, 153) !important; box-shadow: 0px 1px 10px =
#999; -webkit-box-shadow: 0 1px 10px #999; -moz-box-shadow: 0 1px 10px =
#999;
}
#respond .comment-form-fields input[type=3Dsubmit]:hover {
	background: url("images/button-back-over.gif") repeat-x left top; =
border-color: rgb(153, 153, 153) !important; box-shadow: 0px 1px 10px =
#999; -webkit-box-shadow: 0 1px 10px #999; -moz-box-shadow: 0 1px 10px =
#999;
}
#respond p.form-submit input[type=3Dsubmit]:hover {
	background: url("images/button-back-over.gif") repeat-x left top; =
border-color: rgb(153, 153, 153) !important; box-shadow: 0px 1px 10px =
#999; -webkit-box-shadow: 0 1px 10px #999; -moz-box-shadow: 0 1px 10px =
#999;
}
#respond input[type=3Dsubmit]:hover {
	background: url("images/button-back-over.gif") repeat-x left top; =
border-color: rgb(153, 153, 153) !important; box-shadow: 0px 1px 10px =
#999; -webkit-box-shadow: 0 1px 10px #999; -moz-box-shadow: 0 1px 10px =
#999;
}
#commentform #submit:hover #respond .form-submit input:focus {
	background: url("images/button-back-over.gif") repeat-x left top; =
border-color: rgb(153, 153, 153) !important; box-shadow: 0px 1px 10px =
#999; -webkit-box-shadow: 0 1px 10px #999; -moz-box-shadow: 0 1px 10px =
#999;
}
#respond .comment-form-fields input[type=3Dsubmit]:focus {
	background: url("images/button-back-over.gif") repeat-x left top; =
border-color: rgb(153, 153, 153) !important; box-shadow: 0px 1px 10px =
#999; -webkit-box-shadow: 0 1px 10px #999; -moz-box-shadow: 0 1px 10px =
#999;
}
#respond p.form-submit input[type=3Dsubmit]:focus {
	background: url("images/button-back-over.gif") repeat-x left top; =
border-color: rgb(153, 153, 153) !important; box-shadow: 0px 1px 10px =
#999; -webkit-box-shadow: 0 1px 10px #999; -moz-box-shadow: 0 1px 10px =
#999;
}
#respond input[type=3Dsubmit]:focus {
	background: url("images/button-back-over.gif") repeat-x left top; =
border-color: rgb(153, 153, 153) !important; box-shadow: 0px 1px 10px =
#999; -webkit-box-shadow: 0 1px 10px #999; -moz-box-shadow: 0 1px 10px =
#999;
}
#commentform #submit:focus {
	background: url("images/button-back-over.gif") repeat-x left top; =
border-color: rgb(153, 153, 153) !important; box-shadow: 0px 1px 10px =
#999; -webkit-box-shadow: 0 1px 10px #999; -moz-box-shadow: 0 1px 10px =
#999;
}
#respond .form-submit input.disabled {
	color: rgb(170, 170, 170); box-shadow: none; -webkit-box-shadow: none; =
-moz-box-shadow: none;
}
#respond .comment-form-fields input[type=3Dsubmit].disabled {
	color: rgb(170, 170, 170); box-shadow: none; -webkit-box-shadow: none; =
-moz-box-shadow: none;
}
#respond .form-submit input.disabled:hover {
	background: url("images/button-back.gif") repeat-x left bottom rgb(255, =
255, 255); border-color: rgb(204, 204, 204); cursor: default;
}
#respond .comment-form-fields input[type=3Dsubmit].disabled:hover {
	background: url("images/button-back.gif") repeat-x left bottom rgb(255, =
255, 255); border-color: rgb(204, 204, 204); cursor: default;
}
#respond #comment-form-submitting {
	margin: 0px; padding: 0px;
}
#respond .comment-form-fields input[type=3Dsubmit] {
	margin-top: 15px;
}
#respond #comment-form-load-service {
	height: 70px;
}
#respond #comment-form-load-service p {
	background: url("images/loader.gif") no-repeat top; text-align: center; =
color: rgba(0, 0, 0, 0.6); padding-top: 25px; font-size: 14px;
}
#wordpress-login-iframe {
	border: currentColor !important; width: 100%; height: 115px;
}
#respond label.error {
	color: rgb(225, 0, 0);
}
#respond #comment-form-identity #comment-form-nascar > p.error {
	color: rgb(225, 0, 0);
}
#respond div.error {
	border-color: rgb(255, 122, 122) !important;
}
#respond p.guidelines {
	display: none;
}
#respond p.comments-rss {
	display: none;
}
#respond .form-section {
	display: none;
}
#respond div.clear {
	clear: both;
}
.highlander-dark #respond form {
	background: rgba(255, 255, 255, 0.3);
}
.highlander-dark #respond .comment-textarea label {
	color: rgba(255, 255, 255, 0.6);
}
.highlander-dark #respond #comment-form-comment {
	background: rgba(0, 0, 0, 0.7); border: 1px solid rgba(255, 255, 255, =
0.13); box-shadow: inset 2px 2px 3px rgba(0,0,0,0.55); =
-webkit-box-shadow: 2px 2px 3px rgba( 0, 0, 0, 0.55 ) inset; =
-moz-box-shadow: 2px 2px 3px rgba( 0, 0, 0, 0.55 ) inset;
}
.highlander-dark #comment-form-share-text-padder {
	background: rgba(0, 0, 0, 0.7); border: 1px solid rgba(255, 255, 255, =
0.13); box-shadow: inset 2px 2px 3px rgba(0,0,0,0.55); =
-webkit-box-shadow: 2px 2px 3px rgba( 0, 0, 0, 0.55 ) inset; =
-moz-box-shadow: 2px 2px 3px rgba( 0, 0, 0, 0.55 ) inset;
}
.highlander-dark #respond .active#comment-form-comment {
	border: 1px solid rgba(255, 255, 255, 0.2); box-shadow: inset 2px 2px =
3px rgba(0,0,0,0.55); -webkit-box-shadow: 2px 2px 3px rgba( 0, 0, 0, =
0.55 ) inset; -moz-box-shadow: 2px 2px 3px rgba( 0, 0, 0, 0.55 ) inset;
}
.highlander-dark #comment-form-share-text-padder:active {
	border: 1px solid rgba(255, 255, 255, 0.2); box-shadow: inset 2px 2px =
3px rgba(0,0,0,0.55); -webkit-box-shadow: 2px 2px 3px rgba( 0, 0, 0, =
0.55 ) inset; -moz-box-shadow: 2px 2px 3px rgba( 0, 0, 0, 0.55 ) inset;
}
.highlander-dark #respond #comment-form-comment textarea {
	color: rgba(255, 255, 255, 0.8); text-shadow: 0 1px 0 rgba( 0, 0, 0, =
0.45 );
}
.highlander-dark #comment-form-share-text-padder textarea {
	color: rgba(255, 255, 255, 0.8); text-shadow: 0 1px 0 rgba( 0, 0, 0, =
0.45 );
}
.highlander-dark #respond #comment-form-identity {
	background: rgba(0, 0, 0, 0.8); border-top-color: rgba(0, 0, 0, 0.9); =
border-top-width: 1px; border-top-style: solid;
}
.highlander-dark #comment-form-nascar {
	background: rgba(255, 255, 255, 0.15);
}
.highlander-dark #comment-form-wpcom-cancel {
	background: rgba(255, 255, 255, 0.15);
}
.highlander-dark #respond #comment-form-load-service p {
	color: rgba(255, 255, 255, 0.6);
}
.highlander-dark #respond #comment-form-identity #comment-form-nascar {
	background: rgba(255, 255, 255, 0.15); overflow: hidden;
}
.highlander-dark #respond #comment-form-identity #comment-form-nascar p =
{
	color: rgba(255, 255, 255, 0.55);
}
.highlander-dark #respond .comment-form-service {
	background: rgba(255, 255, 255, 0.15); border-bottom-color: rgba(255, =
255, 255, 0.1); border-bottom-width: 1px; border-bottom-style: solid; =
text-shadow: 0 1px 0 rgba( 0, 0, 0, 0.45 );
}
.highlander-dark #respond .comment-form-avatar img {
	background: rgba(0, 0, 0, 0.3); border: 1px solid rgba(255, 255, 255, =
0.35);
}
.highlander-dark #respond label {
	color: rgba(255, 255, 255, 0.6);
}
.highlander-dark #respond .comment-form-fields label span.required {
	color: rgba(255, 255, 255, 0.35);
}
.highlander-dark #respond .comment-form-fields label span.nopublish {
	color: rgba(255, 255, 255, 0.35);
}
.highlander-dark #respond .comment-form-fields div.comment-form-input {
	background: rgba(0, 0, 0, 0.3) !important; border: 1px solid rgba(255, =
255, 255, 0.2); color: rgba(255, 255, 255, 0.8); box-shadow: inset 1px =
1px 2px rgba(0,0,0,0.55); -webkit-box-shadow: 1px 1px 2px rgba( 0, 0, 0, =
0.55 ) inset; -moz-box-shadow: 1px 1px 2px rgba( 0, 0, 0, 0.55 ) inset;
}
.highlander-dark #respond .comment-form-fields =
div.active.comment-form-input {
	background: rgba(0, 0, 0, 0.37) !important; border: 1px solid rgba(255, =
255, 255, 0.25); color: rgba(255, 255, 255, 0.8) !important; box-shadow: =
inset 1px 1px 2px rgba(0,0,0,0.55); -webkit-box-shadow: 1px 1px 2px =
rgba( 0, 0, 0, 0.55 ) inset; -moz-box-shadow: 1px 1px 2px rgba( 0, 0, 0, =
0.55 ) inset;
}
.highlander-dark #respond .comment-form-fields div.comment-form-input =
input {
	color: rgb(211, 211, 211) !important;
}
.highlander-dark #respond .comment-form-fields label {
	color: rgba(255, 255, 255, 0.7);
}
.highlander-dark #respond .comment-form-fields h5 {
	color: rgba(255, 255, 255, 0.8);
}
.highlander-dark #respond .comment-form-fields p.comment-form-posting-as =
{
	color: rgba(255, 255, 255, 0.55);
}
.highlander-dark #respond .comment-form-fields p.comment-form-log-out {
	color: rgba(255, 255, 255, 0.55);
}
.highlander-dark #respond .comment-form-service a {
	color: rgba(255, 255, 255, 0.85);
}
.highlander-dark #respond label.error {
	color: rgb(233, 64, 67);
}
.highlander-dark #respond div.error {
	border-color: rgb(255, 33, 33) !important;
}
.highlander-dark #respond #comment-form-post-to {
	background: rgba(255, 255, 255, 0.1); border-top-color: rgba(255, 255, =
255, 0.05); border-bottom-color: rgba(255, 255, 255, 0.1); =
border-top-width: 1px; border-bottom-width: 1px; border-top-style: =
solid; border-bottom-style: solid;
}
.highlander-dark #respond #comment-form-post-to label {
	color: rgb(185, 185, 185); text-shadow: none;
}
.highlander-dark #respond #comment-form-post-to-edit a {
	color: rgb(185, 185, 185); text-shadow: none;
}
.highlander-dark #respond #comment-form-edit-share-text p {
	color: rgb(185, 185, 185); text-shadow: none;
}
.highlander-tooltip {
	background: rgb(0, 0, 0); padding: 8px; border-radius: 5px; width: =
110px; text-align: center; color: rgb(255, 255, 255); line-height: =
1.3em; font-family: Arial, Helvetica, Tahoma, Verdana, sans-serif; =
font-size: 11px; filter: alpha(opacity=3D.99); position: absolute; =
z-index: 100; opacity: 0.8; -moz-border-radius: 5px; =
-webkit-border-radius: 5px; -moz-opacity: .9;
}
.highlander-dark .highlander-tooltip {
	filter: alpha(opacity=3D.99); opacity: 0.9; -moz-opacity: .9;
}

------=_NextPart_000_0000_01CE3A81.CA9C5BC0
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://tap.rubiconproject.com/oz/feeds/appnexus/tokens?token=2351750265292626564&expires=30

R0lGODlhAQABAJEAAAAAAP///////wAAACH5BAEAAAIALAAAAAABAAEAAAICVAEAOw==

------=_NextPart_000_0000_01CE3A81.CA9C5BC0
Content-Type: application/javascript
Content-Transfer-Encoding: quoted-printable
Content-Location: http://servedby.adxpose.com/adxpose/find_ad.js

(function(){if(__ADXPOSE_PREFS__.prid){var =
b=3DdecodeURIComponent(__ADXPOSE_PREFS__.prid).split(";");for(var =
a=3D0;a<b.length;++a){var =
c=3Db[a].split("=3D",2);if(c.length=3D=3D2){__ADXPOSE_PREFS__[c[0]]=3Dc[1=
]}}}})();if(!__ADXPOSE_PREFS__.elementid){document.write("<div =
id=3D'"+__ADXPOSE_PREFS__.uid+"' =
style=3D'display:none'></div>")}(function(d){var =
f=3Dd.uid,y=3DdecodeURIComponent(d.curl||""),x=3DdecodeURIComponent(d.vch=
annel||""),i=3DdecodeURIComponent(d.cid||""),j=3DdecodeURIComponent(d.pag=
eurl||""),o=3DdecodeURIComponent(d.publisher||""),c=3Dd.version,v=3Dd.alt=
bannerurl,k=3Dd.advertiser,t=3DdecodeURIComponent(d.bidid||""),m=3Ddecode=
URIComponent(d.engageurl||""),g=3Dd.elementid||d.uid;var =
b=3D!d.elementid;if(d.oba=3D=3D2){var =
l=3Dd.width,r=3Dd.height,q=3Dd.obaid1||"",p=3Dd.obaid2||"";var =
a=3D"http://c.betrad.com/surly.js?;ad_wxh=3D"+l+"x"+r+";coid=3D"+q+";nid=3D=
"+p+";r=3D"+Math.floor(Math.random()*100000000000000);document.write("<sc=
ript type=3D'text/javascript' src=3D'"+a+"'><\/script>")}function =
u(A){var =
w=3DA.style,h=3D{w:0,h:0};if(w){if(w.width){h.w=3DparseInt(w.width.replac=
e("px",""),10)}if(w.height){h.h=3DparseInt(w.height.replace("px",""),10)}=
}if(!h.w||isNaN(h.w)){h.w=3DA.clientWidth}if(!h.h||isNaN(h.h)){h.h=3DA.cl=
ientHeight}return h}function s(w,B){var h=3Du(w);var =
A=3Dh.h*h.w;if(A>B.area){B.wh=3Dh;B.area=3DA;B.el=3Dw}var =
C=3Dw.firstChild;while(C){if(C.nodeType=3D=3D1){s(C,B)}C=3DC.nextSibling}=
}function e(A){var h=3DA.charAt(0)=3D=3D"*";var =
w=3DA.charAt(A.length-1)=3D=3D"*";if(!h&&!w){return =
document.getElementById(A)}if(h&&w){A=3DA.substring(1,A.length-1);return =
document.querySelector?document.querySelector("*[id*=3D"+A+"]"):document.=
getElementById(A)}else{if(h){A=3DA.substring(1);return =
document.querySelector?document.querySelector("*[id$=3D"+A+"]"):document.=
getElementById(A)}else{A=3DA.substring(0,A.length-1);return =
document.querySelector?document.querySelector("*[id^=3D"+A+"]"):document.=
getElementById(A)}}}var =
n=3D0,z=3Dfalse;(function(){if(!window.__ADXPOSE_WIDGET_IN_VIEW__&&n<20){=
setTimeout(arguments.callee,5);return}var =
B=3De(g);if(!B){setTimeout(arguments.callee,5);return}if(!z&&__AX_CHK__(B=
)){var =
w=3D__AX_GET_WIN_INFO__();__ADXPOSE_LOG_AD_IMPRESSION__(w.win,w.loc,f,"",=
"0,0","0,0",x,i,j,o,"0,0",c,v,k,true,t);z=3Dtrue}++n;var =
A=3D{area:0};if(b){var =
C=3DB.parentNode.firstChild;while(C){if(C.nodeType=3D=3D1){s(C,A)}C=3DC.n=
extSibling}}else{A.wh=3Du(B);A.area=3DA.wh.h*A.wh.w;A.el=3DB}var =
h=3DA.wh;if(h&&h.h>=3D10&&h.w>=3D10){__ADXPOSE_WIDGET_IN_VIEW__(A.el,f,y,=
h.w,h.h,x,i,j,o,c,v,k,z,t,m,true,d)();return}if(n<20){setTimeout(argument=
s.callee,500)}})()})(__ADXPOSE_PREFS__);
------=_NextPart_000_0000_01CE3A81.CA9C5BC0
Content-Type: multipart/alternative;
	boundary="----=_NextPart_001_002D_01CE3A81.CAB11C40"


------=_NextPart_001_002D_01CE3A81.CAB11C40
Content-Type: text/html;
	charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://apirola.wordpress.com/2012/09/05/setup-jy-mcu-bt-board-v1-2/

=EF=BB=BF<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!DOCTYPE html><!--[if IE 8]>=0A=
<html id=3D"ie8" lang=3D"es">=0A=
<![endif]--><!--[if !(IE 8) ]><!--><HTML=20
lang=3D"es"><!--<![endif]--><!--=0A=
	generated 70 seconds ago=0A=
	generated in 0.517 seconds=0A=
	served from batcache in 0.004 seconds=0A=
	expires in 230 seconds=0A=
--><HEAD>
<META charset=3D"UTF-8"><TITLE>Setup JY-MCU BT BOARD v1.2 | Alejandro=20
Pirola</TITLE><LINK rel=3D"profile" =
href=3D"http://gmpg.org/xfn/11"><LINK rel=3D"pingback"=20
href=3D"http://apirola.wordpress.com/xmlrpc.php"><LINK =
title=3D"Alejandro Pirola =C2=BB Feed"=20
rel=3D"alternate" type=3D"application/rss+xml" =
href=3D"http://apirola.wordpress.com/feed/">
<LINK title=3D"Alejandro Pirola =C2=BB RSS de los comentarios" =
rel=3D"alternate" type=3D"application/rss+xml"=20
href=3D"http://apirola.wordpress.com/comments/feed/"><LINK =
title=3D"Alejandro Pirola =C2=BB Setup JY-MCU BT BOARD&nbsp;v1.2 RSS de =
los comentarios"=20
rel=3D"alternate" type=3D"application/rss+xml" =
href=3D"http://apirola.wordpress.com/2012/09/05/setup-jy-mcu-bt-board-v1-=
2/feed/">
<SCRIPT type=3D"text/javascript">=0A=
/* <![CDATA[ */=0A=
function addLoadEvent(func){var oldonload=3Dwindow.onload;if(typeof =
window.onload!=3D'function'){window.onload=3Dfunc;}else{window.onload=3Df=
unction(){oldonload();func();}}}=0A=
/* ]]> */=0A=
</SCRIPT>
<LINK id=3D"all-css-0" rel=3D"stylesheet" type=3D"text/css" =
href=3D"http://s2.wp.com/_static/??-eJx9jcsOgkAMRX/IsVGDwYXxW3iUWijthOmE8=
PcSN5AQXd7knHtgjqExdVSHMYcomVgTCA+YoEePVTOE7zo3KZ1gh9ditAlGhK1lD52J2Awzt4=
R+kHYN1o6VfQF/47jWYq4BBalSDzRlJfxnR0trSyqeIPkiR/bn68a/xufldi+K2+Nalv0HJet=
j0Q=3D=3D"=20
media=3D"all"><!--[if lt IE 8]>=0A=
<link rel=3D'stylesheet' id=3D'elegant-grunge-ie-css'  =
href=3D'http://s0.wp.com/wp-content/themes/pub/elegant-grunge/ie.css?m=3D=
1288065825g&#038;ver=3D3.6-beta1-23997' type=3D'text/css' media=3D'all' =
/>=0A=
<![endif]-->
<LINK id=3D"print-css-2" rel=3D"stylesheet" type=3D"text/css" =
href=3D"http://s0.wp.com/wp-content/mu-plugins/global-print/global-print.=
css?m=3D1335386953g"=20
media=3D"print"><LINK id=3D"all-css-2" rel=3D"stylesheet" =
type=3D"text/css" =
href=3D"http://s1.wp.com/wp-content/themes/h4/global.css?m=3D1351293556g"=
=20
media=3D"all">
<SCRIPT type=3D"text/javascript">=0A=
/* <![CDATA[ */=0A=
var LoggedOutFollow =3D {"invalid_email":"No se ha completado su =
suscripcion, por favor intentelo de nuevo con una direcci\u00f3n de =
correo valida."};=0A=
/* ]]> */=0A=
</SCRIPT>

<SCRIPT type=3D"text/javascript" =
src=3D"http://s1.wp.com/_static/??-eJyFj+EKwjAMhF/Irorb/CU+y+xiSW2buqQr8+=
mtoD/EoRDIwX25I7okhdH4PAJrV+eWYVpeq3G80b8AFdBOg8AbNBQFojy5RCwBmAe75n7WYJw=
Ryl/MgaTBXNUEjPev1LMnq5LPFiPrqi2MlEVdyHsquuBoQdYeMhRCva+pyS9NwFihUzju9n3X=
t9uuPbgHb95tEg=3D=3D"></SCRIPT>
<LINK id=3D"all-css-0" rel=3D"stylesheet" type=3D"text/css" =
href=3D"http://s0.wp.com/wp-content/mu-plugins/highlander-comments/style.=
css?m=3D1364417154g"=20
media=3D"all"><!--[if lt IE 8]>=0A=
<link rel=3D'stylesheet' id=3D'highlander-comments-ie7-css'  =
href=3D'http://s2.wp.com/wp-content/mu-plugins/highlander-comments/style-=
ie7.css?m=3D1351637563g&#038;ver=3D20110606' type=3D'text/css' =
media=3D'all' />=0A=
<![endif]-->
<LINK title=3D"RSD" rel=3D"EditURI" type=3D"application/rsd+xml" =
href=3D"http://apirola.wordpress.com/xmlrpc.php?rsd">
<LINK rel=3D"wlwmanifest" type=3D"application/wlwmanifest+xml" =
href=3D"http://apirola.wordpress.com/wp-includes/wlwmanifest.xml"><LINK=20
title=3D"Instalar Ultima versi=C3=B3n de&nbsp;Redis.io" rel=3D"prev" =
href=3D"http://apirola.wordpress.com/2012/09/05/instalar-ultima-versin-de=
-redis-io/">
<LINK title=3D"MinimOSD rev.0.1 running arducam-osd&nbsp;2.0" =
rel=3D"next" =
href=3D"http://apirola.wordpress.com/2012/11/07/minimosd-rev-0-1-running-=
arducam-osd/">
<META name=3D"GENERATOR" content=3D"MSHTML 9.00.8112.16476"><LINK =
rel=3D"canonical"=20
href=3D"http://apirola.wordpress.com/2012/09/05/setup-jy-mcu-bt-board-v1-=
2/"><LINK=20
rel=3D"shortlink" href=3D"http://wp.me/pj1NI-43"><LINK rel=3D"alternate" =
type=3D"application/json+oembed"=20
href=3D"http://public-api.wordpress.com/oembed/1.0/?format=3Djson&amp;url=
=3Dhttp%3A%2F%2Fapirola.wordpress.com%2F2012%2F09%2F05%2Fsetup-jy-mcu-bt-=
board-v1-2%2F&amp;for=3Dwpcom-auto-discovery"><LINK=20
rel=3D"alternate" type=3D"application/xml+oembed" =
href=3D"http://public-api.wordpress.com/oembed/1.0/?format=3Dxml&amp;url=3D=
http%3A%2F%2Fapirola.wordpress.com%2F2012%2F09%2F05%2Fsetup-jy-mcu-bt-boa=
rd-v1-2%2F&amp;for=3Dwpcom-auto-discovery"><!-- Jetpack Open Graph Tags =
-->
<META content=3D"article" property=3D"og:type">
<META content=3D"Setup JY-MCU BT BOARD v1.2" property=3D"og:title">
<META =
content=3D"http://apirola.wordpress.com/2012/09/05/setup-jy-mcu-bt-board-=
v1-2/"=20
property=3D"og:url">
<META content=3D"This &nbsp;Bluetooth <-> RS232 adapter allows =
connection from any device that supports RS232 to PC or mobile device =
that supports Bluetooth. This walkthrough demonstrates how to configure =
some par..."=20
property=3D"og:description">
<META content=3D"Alejandro Pirola" property=3D"og:site_name">
<META =
content=3D"http://i1_wp_com/i_ebayimg_com/t/JY-MCU-Inex-V1-2-Bluetooth-Tr=
anseiver-RF-Module-Wireless-Serial-6-pin-Arduino-/00/s/NjAwWDYwMA=3D%3D%2=
F%24%28KGrHqJ%2C%21iQE-bl%21ighlBP6ElIELGg%7E%7E60_12.JPG&amp;fit=3D1000%=
2C1000"=20
property=3D"og:image">
<META =
content=3D"http://i2.wp.com/apirola.files.wordpress.com/2012/09/image_thu=
mb.png?fit=3D1000%2C1000"=20
property=3D"og:image">
<META =
content=3D"http://i1.wp.com/apirola.files.wordpress.com/2012/09/image_thu=
mb1.png?fit=3D1000%2C1000"=20
property=3D"og:image">
<META =
content=3D"http://i2.wp.com/apirola.files.wordpress.com/2012/09/image_thu=
mb2.png?fit=3D1000%2C1000"=20
property=3D"og:image">
<META =
content=3D"http://i2.wp.com/www.rctimer.com/syssite/home/shop/1/pictures/=
productsimg/big/684.jpg?fit=3D1000%2C1000"=20
property=3D"og:image">
<META =
content=3D"http://i1.wp.com/apirola.files.wordpress.com/2012/09/image_thu=
mb3.png?fit=3D1000%2C1000"=20
property=3D"og:image">
<META =
content=3D"http://i0.wp.com/apirola.files.wordpress.com/2012/09/image_thu=
mb4.png?fit=3D1000%2C1000"=20
property=3D"og:image">
<META =
content=3D"http://i0.wp.com/apirola.files.wordpress.com/2012/09/photo-1_t=
humb.jpg?fit=3D1000%2C1000"=20
property=3D"og:image">
<META =
content=3D"http://i0.wp.com/apirola.files.wordpress.com/2012/09/photo-2_t=
humb.jpg?fit=3D1000%2C1000"=20
property=3D"og:image">
<META =
content=3D"http://i0.wp.com/apirola.files.wordpress.com/2012/09/photo-3_t=
humb.jpg?fit=3D1000%2C1000"=20
property=3D"og:image">
<META name=3D"twitter:site" content=3D"@wordpressdotcom">
<META name=3D"twitter:image0" =
content=3D"http://i1_wp_com/i_ebayimg_com/t/JY-MCU-Inex-V1-2-Bluetooth-Tr=
anseiver-RF-Module-Wireless-Serial-6-pin-Arduino-/00/s/NjAwWDYwMA=3D%3D%2=
F%24%28KGrHqJ%2C%21iQE-bl%21ighlBP6ElIELGg%7E%7E60_12.JPG&amp;fit=3D1000%=
2C1000">
<META name=3D"twitter:image1" =
content=3D"http://i2.wp.com/apirola.files.wordpress.com/2012/09/image_thu=
mb.png?fit=3D1000%2C1000">
<META name=3D"twitter:image2" =
content=3D"http://i1.wp.com/apirola.files.wordpress.com/2012/09/image_thu=
mb1.png?fit=3D1000%2C1000">
<META name=3D"twitter:image3" =
content=3D"http://i2.wp.com/apirola.files.wordpress.com/2012/09/image_thu=
mb2.png?fit=3D1000%2C1000">
<META name=3D"twitter:card" content=3D"gallery">
<META name=3D"twitter:creator" content=3D"@wordpressdotcom">
<META content=3D"249643311490" property=3D"fb:app_id"><LINK =
rel=3D"shortcut icon"=20
type=3D"image/x-icon" =
href=3D"http://s2.wp.com/i/favicon.ico?m=3D1311976022g" sizes=3D"16x16 =
24x24 32x32 48x48">
<LINK rel=3D"icon" type=3D"image/x-icon" =
href=3D"http://s2.wp.com/i/favicon.ico?m=3D1311976022g"=20
sizes=3D"16x16 24x24 32x32 48x48"><LINK =
rel=3D"apple-touch-icon-precomposed" =
href=3D"http://s0.wp.com/i/webclip.png?m=3D1355642671g">
<LINK rel=3D"openid.server" =
href=3D"http://apirola.wordpress.com/?openidserver=3D1">
<LINK rel=3D"openid.delegate" =
href=3D"http://apirola.wordpress.com/"><LINK title=3D"Alejandro Pirola"=20
rel=3D"search" type=3D"application/opensearchdescription+xml" =
href=3D"http://apirola.wordpress.com/osd.xml">
<LINK title=3D"WordPress.com" rel=3D"search" =
type=3D"application/opensearchdescription+xml"=20
href=3D"http://wordpress.com/opensearch.xml">
<STYLE>=0A=
		/* <![CDATA[ */=0A=
		/* Block: reblog */=0A=
		=0A=
		.reblog-from img                   { margin: 0 10px 0 0; =
vertical-align: middle; padding: 0; border: 0; }=0A=
		.reblogger-note img.avatar         { float: left; padding: 0; border: =
0; }=0A=
		.reblogger-note-content            { margin: 0 0 20px; }=0A=
		.reblog-post .wpcom-enhanced-excerpt-content { border-left: 3px solid =
#eee; padding-left: 15px; }=0A=
		.reblog-post ul.thumb-list         { display: block; list-style: none; =
margin: 2px 0; padding: 0; clear: both; }=0A=
		.reblog-post ul.thumb-list li      { display: inline; margin: 0; =
padding: 0 1px; border: 0; }=0A=
		.reblog-post ul.thumb-list li a    { margin: 0; padding: 0; border: 0; =
}=0A=
		.reblog-post ul.thumb-list li img  { margin: 0; padding: 0; border: 0; =
}=0A=
		=0A=
		.reblog-post .wpcom-enhanced-excerpt { clear: both; }=0A=
		=0A=
		.reblog-post .wpcom-enhanced-excerpt address,=0A=
		.reblog-post .wpcom-enhanced-excerpt li,=0A=
		.reblog-post .wpcom-enhanced-excerpt h1,=0A=
		.reblog-post .wpcom-enhanced-excerpt h2,=0A=
		.reblog-post .wpcom-enhanced-excerpt h3,=0A=
		.reblog-post .wpcom-enhanced-excerpt h4,=0A=
		.reblog-post .wpcom-enhanced-excerpt h5,=0A=
		.reblog-post .wpcom-enhanced-excerpt h6,=0A=
		.reblog-post .wpcom-enhanced-excerpt p { font-size: 100% !important; }=0A=
		=0A=
		.reblog-post .wpcom-enhanced-excerpt blockquote,=0A=
		.reblog-post .wpcom-enhanced-excerpt pre,=0A=
		.reblog-post .wpcom-enhanced-excerpt code,=0A=
		.reblog-post .wpcom-enhanced-excerpt q { font-size: 98% !important; }=0A=
		=0A=
=0A=
		/* ]]> */=0A=
		</STYLE>

<META name=3D"application-name" content=3D"Alejandro Pirola">
<META name=3D"msapplication-window" =
content=3D"width=3Ddevice-width;height=3Ddevice-height">
<META name=3D"msapplication-tooltip"=20
content=3D"Just another monkey, coding for fun">
<META name=3D"msapplication-task" =
content=3D"name=3DSubscribir;action-uri=3Dhttp://apirola.wordpress.com/fe=
ed/;icon-uri=3Dhttp://s2.wp.com/i/favicon.ico">
<META name=3D"msapplication-task" content=3D"name=3DRegistrar un blog =
gratuito;action-uri=3Dhttp://wordpress.com/signup/;icon-uri=3Dhttp://s2.w=
p.com/i/favicon.ico">
<META name=3D"msapplication-task" content=3D"name=3DSoporte de =
WordPress.com;action-uri=3Dhttp://support.wordpress.com/;icon-uri=3Dhttp:=
//s2.wp.com/i/favicon.ico">
<META name=3D"msapplication-task" content=3D"name=3DForos de =
WordPress.com;action-uri=3Dhttp://forums.wordpress.com/;icon-uri=3Dhttp:/=
/s2.wp.com/i/favicon.ico">
<META name=3D"title" content=3D"Setup JY-MCU BT BOARD&nbsp;v1.2 | =
Alejandro Pirola en WordPress.com">
<META name=3D"description" content=3D"Just another monkey, coding for =
fun">
<STYLE type=3D"text/css">=0A=
			#header div a,=0A=
		#header h1,=0A=
		#header h2,=0A=
		#blog-description {=0A=
			color: #d3d3d3;=0A=
		}=0A=
		</STYLE>

<SCRIPT type=3D"text/javascript" =
src=3D"http://partner.googleadservices.com/gampad/google_service.js">=0A=
</SCRIPT>

<SCRIPT type=3D"text/javascript">=0A=
if ( typeof GS_googleAddAdSenseService =3D=3D 'function' ) { =
GS_googleAddAdSenseService("ca-pub-3443918307802676"); }=0A=
if ( typeof GS_googleEnableAllServices =3D=3D 'function' ) { =
GS_googleEnableAllServices() };=0A=
</SCRIPT>

<SCRIPT type=3D"text/javascript">=0A=
if ( typeof GA_googleAddSlot =3D=3D 'function' ) { =
GA_googleAddSlot("ca-pub-3443918307802676", "wpcom_below_post_adsafe"); }=0A=
</SCRIPT>

<SCRIPT type=3D"text/javascript">=0A=
if ( typeof GA_googleFetchAds =3D=3D 'function' ) { GA_googleFetchAds(); =
}=0A=
</SCRIPT>

<SCRIPT type=3D"text/javascript">=0A=
var wpcom_ads =3D { bid: 4535158, pt: 'permalink', wa: 0, as: 1, domain: =
'apirola.wordpress.com', url: =
'http://apirola.wordpress.com/2012/09/05/setup-jy-mcu-bt-board-v1-2/', =
gid: '', };=0A=
</SCRIPT>

<STYLE id=3D"syntaxhighlighteranchor"></STYLE>

<SCRIPT type=3D"text/javascript"> =0A=
	window.google_analytics_uacct =3D "UA-52447-2"; =0A=
</SCRIPT>

<SCRIPT type=3D"text/javascript">=0A=
	var _gaq =3D _gaq || [];=0A=
	_gaq.push(['_setAccount', 'UA-52447-2']);=0A=
	_gaq.push(['_setDomainName', 'wordpress.com']);=0A=
	_gaq.push(['_initData']);=0A=
	_gaq.push(['_trackPageview']);=0A=
=0A=
	(function() {=0A=
		var ga =3D document.createElement('script'); ga.type =3D =
'text/javascript'; ga.async =3D true;=0A=
		ga.src =3D ('https:' =3D=3D document.location.protocol ? 'https://ssl' =
: 'http://www') + '.google-analytics.com/ga.js';=0A=
		(document.getElementsByTagName('head')[0] || =
document.getElementsByTagName('body')[0]).appendChild(ga);=0A=
	})();=0A=
</SCRIPT>
</HEAD>
<BODY class=3D"single single-post postid-251 single-format-standard =
two-column content-sidebar highlander-enabled highlander-light">
<DIV id=3D"page">
<DIV id=3D"menu">
<DIV class=3D"menu-header">
<UL>
  <LI><A title=3D"Inicio" =
href=3D"http://apirola.wordpress.com/">Inicio</A></LI>
  <LI class=3D"page_item page-item-2"><A =
href=3D"http://apirola.wordpress.com/about/">About</A></LI></UL></DIV>
<DIV class=3D"clear"></DIV></DIV><!-- #menu -->
<DIV id=3D"header-wrap">
<DIV id=3D"header">
<DIV><A title=3D"Alejandro Pirola" =
href=3D"http://apirola.wordpress.com/"=20
rel=3D"home">
<H2>Alejandro Pirola</H2>
<P id=3D"blog-description">Just another monkey, coding for=20
fun</P></A></DIV></DIV></DIV><!-- #header-wrap -->
<DIV id=3D"content-container">
<DIV id=3D"content">
<DIV id=3D"content-body">
<DIV id=3D"post-251" class=3D"post-251 post type-post status-publish =
format-standard hentry category-uncategorized">
<DIV class=3D"post-date"><SPAN>septiembre 5, 2012</SPAN></DIV>
<H1 class=3D"entry-title">Setup JY-MCU BT BOARD&nbsp;v1.2</H1>
<DIV class=3D"post-author"><SPAN class=3D"author vcard">Por <A =
class=3D"url fn n"=20
title=3D"Ver todas las entradas de alejamp" =
href=3D"http://apirola.wordpress.com/author/alejamp/">alejamp</A></SPAN><=
/DIV>
<DIV class=3D"entry">
<P>This &nbsp;Bluetooth &lt;-&gt; RS232 adapter allows connection from =
any=20
device that supports RS232 to PC or mobile device that supports =
Bluetooth. This=20
walkthrough demonstrates how to configure some parameters such as name =
and Baud=20
rate.</P>
<P><A =
href=3D"http://www.goodluckbuy.com/arduino-serial-bluetooth-rf-transceive=
r-module-rs232-passive.html">http://www.goodluckbuy.com/arduino-serial-bl=
uetooth-rf-transceiver-module-rs232-passive.html</A></P>
<P><IMG alt=3D"JY-MCU Inex V1.2 Bluetooth Transeiver RF Module Wireless =
Serial 6 pin Arduino"=20
src=3D"http://i.ebayimg.com/t/JY-MCU-Inex-V1-2-Bluetooth-Transeiver-RF-Mo=
dule-Wireless-Serial-6-pin-Arduino-/00/s/NjAwWDYwMA=3D=3D/$(KGrHqJ,!iQE-b=
l!ighlBP6ElIELGg~~60_12.JPG"=20
width=3D"238" height=3D"238"></P>
<P><SPAN id=3D"more-251"></SPAN>By default, this adapter has the =
following=20
settings:</P>
<P>RS232</P>
<UL>
  <LI>9600 Baud 8N1</LI>
  <LI>Device Name =E2=80=9Clinvor=E2=80=9D (a name that occurs as the BT =
device).</LI>
  <LI>Device pin or pass: 1234</LI></UL>
<P>Once paired with your PC or another device via BT, It creates a =
virtual port=20
COMxx</P>
<P>Default settings for COMxx are 9600 Baud, 8N1, but this can be =
changed=20
&nbsp;BT device configuration (I have renamed it as Quadx650):</P>
<P><A =
href=3D"http://www.microsofttranslator.com/bv.aspx?from=3Des&amp;to=3Den&=
amp;a=3Dhttp%3A%2F%2Fapirola.files.wordpress.com%2F2012%2F09%2Fimage.png"=
><IMG=20
title=3D"image" alt=3D"image" =
src=3D"http://apirola.files.wordpress.com/2012/09/image_thumb.png?w=3D644=
&amp;h=3D467&amp;h=3D467"=20
width=3D"644" height=3D"467"></A></P>
<P><A =
href=3D"http://www.microsofttranslator.com/bv.aspx?from=3Des&amp;to=3Den&=
amp;a=3Dhttp%3A%2F%2Fapirola.files.wordpress.com%2F2012%2F09%2Fimage1.png=
"><IMG=20
title=3D"image" alt=3D"image" =
src=3D"http://apirola.files.wordpress.com/2012/09/image_thumb1.png?w=3D64=
4&amp;h=3D399&amp;h=3D399"=20
width=3D"644" height=3D"399"></A></P>
<P><A =
href=3D"http://www.microsofttranslator.com/bv.aspx?from=3Des&amp;to=3Den&=
amp;a=3Dhttp%3A%2F%2Fapirola.files.wordpress.com%2F2012%2F09%2Fimage2.png=
"><IMG=20
title=3D"image" alt=3D"image" =
src=3D"http://apirola.files.wordpress.com/2012/09/image_thumb2.png?w=3D64=
4&amp;h=3D472&amp;h=3D472"=20
width=3D"644" height=3D"472"></A></P>
<P>But this only changes the virtual RS232 settings but we still need to =
setup=20
RS232 in the other side.</P>
<H4>The RS232 port configuration</H4>
<P>At this point is necessary a cable or direct RS232 connection on your =

computer. There are a lot of alternatives on the market, in my case I =
use FTDI=20
Basic (<A =
href=3D"http://www.microsofttranslator.com/bv.aspx?from=3Des&amp;to=3Den&=
amp;a=3Dhttp%3A%2F%2Fwww.rctimer.com%2Findex.php%3FgOo%3Dgoods_details.dw=
t%26goodsid%3D684%26productname%3D">Buy</A>)</P>
<P><IMG alt=3D"" =
src=3D"http://www.rctimer.com/syssite/home/shop/1/pictures/productsimg/bi=
g/684.jpg"></P>
<P>But there are many local alternatives, some directly available on a =
PC home=20
depot.</P>
<H4></H4>
<H4>Connecting the module for configuring through AT commands</H4>
<P>The module is configurable through AT commands sent from RX, TX PINs =
when it=20
is not paired (connected through BT with the PC).</P>
<P>From now on everytime I say MBT (module bluetooth) and FTDI (adapter =
rs232 =E2=80=93=20
usb)</P>
<OL>
  <LI>Unpair BT device.</LI>
  <LI>Feed the module with 5v, in my case the USB adapter is 5V.
  <OL>
    <LI>5V (FTDI) =E2=80=93 &gt; 5v (MBT)</LI>
    <LI>GND =E2=80=93 &gt; GND</LI></OL></LI>
  <LI>Connect the RS232 pin
  <OL>
    <LI>(MBT) TX =E2=80=93 &gt; RX (FTDI)</LI>
    <LI>RX (of the MBT) =E2=80=93 &gt; TX (FTDI)</LI></OL></LI>
  <LI>Download <A =
href=3D"http://www.microsofttranslator.com/bv.aspx?from=3Des&amp;to=3Den&=
amp;a=3Dhttp%3A%2F%2Fwww.chiark.greenend.org.uk%2F~sgtatham%2Fputty%2Fdow=
nload.html">PuTTY.exe</A></LI>
</OL>
<P>Well now we can connect through FTDI to the MBT using PuTTY:</P>
<P><A =
href=3D"http://www.microsofttranslator.com/bv.aspx?from=3Des&amp;to=3Den&=
amp;a=3Dhttp%3A%2F%2Fapirola.files.wordpress.com%2F2012%2F09%2Fimage3.png=
"><IMG=20
title=3D"image" alt=3D"image" =
src=3D"http://apirola.files.wordpress.com/2012/09/image_thumb3.png?w=3D64=
4&amp;h=3D369&amp;h=3D369"=20
width=3D"644" height=3D"369"></A></P>
<P>COM17 is the FTDI port, in your case it could be another. Remember =
default=20
setting is 9600 8N1 .</P>
<P><A =
href=3D"http://www.microsofttranslator.com/bv.aspx?from=3Des&amp;to=3Den&=
amp;a=3Dhttp%3A%2F%2Fapirola.files.wordpress.com%2F2012%2F09%2Fimage4.png=
"><IMG=20
title=3D"image" alt=3D"image" =
src=3D"http://apirola.files.wordpress.com/2012/09/image_thumb4.png?w=3D64=
4&amp;h=3D190&amp;h=3D190"=20
width=3D"644" height=3D"190"></A></P>
<P>In PuTTY type AT (do not press enter) and if the response is OK means =
that we=20
did everything correctly.</P>
<P>It is now time to set up the MBT using a series of AT commands. My=20
recommendation is to open a Notepad and write the commands that we are =
going to=20
use, then copy and paste in the terminal (use right click on the =
terminal, do=20
not use Ctrl + V). Why? couse MBT process the command to fast, if you =
manually=20
type the command it fails but when you paste the whole sentence it works =

fine.</P>
<P>To change the device name BT must send AT+NAMExxxxx, in my case, use =
the=20
following command to baptize it Quadx650</P>
<BLOCKQUOTE>
  <P>AT+NAMEQuadx650</P></BLOCKQUOTE>
<P>To change the Baud rate, and upload it to 115200 use BAUD8 that in =
the table=20
is equivalent to 115200.</P>
<BLOCKQUOTE>
  <P>AT+BAUD8</P></BLOCKQUOTE>
<P>For testing it is possible to mate the device and open two consoles =
one=20
pointing the FTDI COM and another to the COM on the MBT. Anything typed =
on a=20
console should echo in the other.</P>
<P><A =
href=3D"http://www.microsofttranslator.com/bv.aspx?from=3Des&amp;to=3Den&=
amp;a=3Dhttp%3A%2F%2Fapirola.files.wordpress.com%2F2012%2F09%2Fphoto-1.jp=
g"><IMG=20
title=3D"photo 1" alt=3D"photo 1" =
src=3D"http://apirola.files.wordpress.com/2012/09/photo-1_thumb.jpg?w=3D6=
44&amp;h=3D484&amp;h=3D484"=20
width=3D"644" height=3D"484"></A></P>
<P><A =
href=3D"http://www.microsofttranslator.com/bv.aspx?from=3Des&amp;to=3Den&=
amp;a=3Dhttp%3A%2F%2Fapirola.files.wordpress.com%2F2012%2F09%2Fphoto-2.jp=
g"><IMG=20
title=3D"photo 2" alt=3D"photo 2" =
src=3D"http://apirola.files.wordpress.com/2012/09/photo-2_thumb.jpg?w=3D6=
44&amp;h=3D484&amp;h=3D484"=20
width=3D"644" height=3D"484"></A></P>
<P><A =
href=3D"http://www.microsofttranslator.com/bv.aspx?from=3Des&amp;to=3Den&=
amp;a=3Dhttp%3A%2F%2Fapirola.files.wordpress.com%2F2012%2F09%2Fphoto-3.jp=
g"><IMG=20
title=3D"photo 3" alt=3D"photo 3" =
src=3D"http://apirola.files.wordpress.com/2012/09/photo-3_thumb.jpg?w=3D5=
19&amp;h=3D484&amp;h=3D484"=20
width=3D"519" height=3D"484"></A></P>
<P>You can then change the parity, PIN etc. For them I leave the rest of =
the AT=20
commands</P>
<H4></H4>
<H4>HCxx Manual</H4>
<P>This is the HCxx manual, wich is the small board attached to =
JY-MCU:<A =
href=3D"http://apirola.files.wordpress.com/2012/11/hc-serial-bluetooth-pr=
oducts-201104.pdf">&nbsp;http://apirola.files.wordpress.com/2012/11/hc-se=
rial-bluetooth-products-201104.pdf</A></P>
<H4>AT command set</H4>
<BLOCKQUOTE>
  <P>The way to the AT command mode: supply power to the module, it will =
enter=20
  to the AT mode if it<BR>needn=E2=80=99t pair. The interval of command =
is about 1=20
  second.<BR>Default parameter: Baud rate:9600N81, ID: linvor, =
Password:1234</P>
  <P>1 Test communication<BR>Send: AT (please send it every =
second)<BR>Back:=20
  OK</P>
  <P>2 Reset the Bluetooth serial baud rate<BR>Send: AT+BAUD1<BR>Back:=20
  OK1200<BR>Send: AT+BAUD2<BR>Back: =
OK2400<BR>=E2=80=A6=E2=80=A6<BR>1=E2=80=93 1200<BR>2=E2=80=93 =
2400<BR>3=E2=80=93=20
  4800<BR>4=E2=80=93 9600 (Default)<BR>5=E2=80=93 19200<BR>6=E2=80=93 =
38400<BR>7=E2=80=93 57600<BR>8=E2=80=93 115200<BR>
  9=E2=80=93 230400<BR>A=E2=80=93 460800<BR>B=E2=80=94 =
921600<BR>C=E2=80=94 1382400<BR>PC can=E2=80=99t support the baud=20
  rate 115200 than lager. The solution is: make the MCUS have higher =
baud<BR>
  rate (lager than 115200) through programming, and reset the baud rate =
to low=20
  level through the AT<BR>command.<BR>The baud rate reset by the AT =
command can=20
  be kept for the next time even though the power is cut<BR>off.</P>
  <P>3. Reset the Bluetooth name<BR>Send: AT+NAMEname<BR>Back: =
OKname</P>
  <P>Parameter name: Name needed to be set (20 characters =
limited)<BR>Por=20
  Ejemplo:<BR>Send: AT + NAMEbill_gates<BR>Back: OKname<BR>Now, the =
Bluetooth=20
  name is reset to be =E2=80=9Cbill_gates=E2=80=9D<BR>The parameter can =
be kept even though the=20
  power is cut off. User can see the new Bluetooth name<BR>PDA in =
refresh=20
  service. (Note: The name is limited in 20 characters.)</P>
  <P>4 change the Bluetooth password pair<BR>Send: AT+PINxxxx<BR>
  Back:OKsetpin<BR>Parameter xxxx: The pair password needed to be set, =
is a=20
  4-bit number. This command can be used<BR>in the master and slave =
module. At=20
  some occasions, the master module may be asked to enter the<BR>when =
the master=20
  password module tries to connect the slave module (adapter or =
cell-phone).=20
  Only if the<BR>password is entered, the successful connection can be =
built. At=20
  the other occasions, the pair can be finish<BR>automatically if the =
master=20
  module can search the proper slave module and the password is =
correct.<BR>
  Besides the paired slave module, the master can connect the other =
devices who=20
  have slave module, such<BR>as digital camera Bluetooth, Bluetooth GPS, =

  Bluetooth serial printer etc.<BR>Por Ejemplo:<BR>Send: =
AT+PIN8888<BR>Back:=20
  OKsetpin<BR>Then the password is changed to be 8888, while the default =
is=20
  1234.<BR>This parameter can be kept even though the power is cut =
off.</P>
  <P>5. Do not check parity (The version, higher than V1.5, can use this =

  command)<BR>Send: AT+PN (This is the default value)<BR>Back: OK =
NONE</P>
  <P>6. Set odd parity check (The version, higher than V1.5, can use =
this=20
  command)<BR>Send: AT+PO<BR>Back: OK ODD</P>
  <P>7 Set even parity check (The version, higher than V1.5, can use =
this=20
  command)<BR>Send: AT+PE<BR>Back: OK EVEN</P>
  <P>8 Get the AT version<BR>Send: AT+VERSION<BR>Back: =
LinvorV1.n</P></BLOCKQUOTE>
<DIV style=3D"margin: 10px auto; padding: 0px; width: 300px; text-align: =
center; overflow: hidden; clear: both; position: relative;"=20
class=3D"wpa"><A style=3D"font: 9px sans-serif; text-align: left; =
text-decoration: underline; display: block; position: absolute; =
font-size-adjust: none; font-stretch: normal;"=20
href=3D"http://en.wordpress.com/about-these-ads/" rel=3D"nofollow">About =
these=20
ads</A>
<SCRIPT type=3D"text/javascript">=0A=
		var wpcom_adclk_hovering =3D false;=0A=
		var wpcom_adclk_recorded =3D false;=0A=
		var wpcom_adclk_theme =3D "Elegant Grunge";=0A=
		var wpcom_adclk_slot =3D "wpcom_below_post_adsafe";=0A=
		var wpcom_adclk_network =3D ( typeof wpcom_adclk_network =3D=3D=3D =
"undefined" ) ? "" : wpcom_adclk_network ;=0A=
=0A=
		jQuery(document).ready( function() {=0A=
			function wpcom_adclk_hover_yes() { wpcom_adclk_hovering =3D true; }=0A=
			function wpcom_adclk_hover_no() { wpcom_adclk_hovering =3D false; }=0A=
			jQuery(".wpa").click(wpcom_adclk_click);=0A=
			jQuery(".wpa iframe").hover( wpcom_adclk_hover_yes, =
wpcom_adclk_hover_no );=0A=
			jQuery(".wpa object").hover( wpcom_adclk_hover_yes, =
wpcom_adclk_hover_no );=0A=
=0A=
			jQuery(window).blur( function() {=0A=
				if ( wpcom_adclk_hovering ) { wpcom_adclk_click(); }=0A=
			});=0A=
		});=0A=
=0A=
		function wpcom_adclk_impression() {=0A=
			var stat_gif =3D document.location.protocol + =
"//stats.wordpress.com/g.gif?v=3Dwpcom-no-pv";=0A=
			stat_gif +=3D "&x_ads_imp_theme=3D" + wpcom_adclk_theme;=0A=
			stat_gif +=3D "&x_ads_imp_placement=3D"+wpcom_adclk_slot;=0A=
			stat_gif +=3D "&x_ads_imp_network=3D" + wpcom_adclk_network;=0A=
			stat_gif +=3D =
"&x_ads_imp_theme_network=3D"+wpcom_adclk_theme+"_"+wpcom_adclk_network;=0A=
			new Image().src =3D stat_gif + "&baba=3D" + Math.random();=0A=
			return true;=0A=
		}=0A=
=0A=
		function wpcom_adclk_click() {=0A=
			if (wpcom_adclk_recorded) { return true; } // no double counting=0A=
			var stat_gif =3D document.location.protocol + =
"//stats.wordpress.com/g.gif?v=3Dwpcom-no-pv";=0A=
			stat_gif +=3D "&x_ads_click_theme=3D" + wpcom_adclk_theme;=0A=
			stat_gif +=3D "&x_ads_click_placement=3D"+wpcom_adclk_slot;=0A=
			stat_gif +=3D "&x_ads_click_network=3D" + wpcom_adclk_network;=0A=
			stat_gif +=3D =
"&x_ads_click_theme_network=3D"+wpcom_adclk_theme+"_"+wpcom_adclk_network=
;=0A=
=0A=
			new Image().src =3D stat_gif + "&baba=3D" + Math.random();=0A=
			wpcom_adclk_recorded =3D true;=0A=
			var now=3Dnew Date(); var end=3Dnow.getTime()+250;=0A=
			while(true){now=3Dnew Date();if(now.getTime()>end){break;}}=0A=
			return true;=0A=
		}=0A=
	=0A=
if ( typeof GA_googleAddAttr =3D=3D 'function' ) {=0A=
GA_googleAddAttr("AdOpt", "1");=0A=
GA_googleAddAttr("Origin", "other");=0A=
GA_googleAddAttr("LangId", "19");=0A=
GA_googleAddAttr("Domain", "apirola.wordpress.com");=0A=
GA_googleAddAttr("BlogId", "4535158");=0A=
GA_googleAddAttr("AdSafe", "1");=0A=
GA_googleAddAttr("Partner", "AOL");=0A=
GA_googleAddAttr("theme_bg", "f9fbf9");=0A=
GA_googleAddAttr("theme_border", "bebcad");=0A=
GA_googleAddAttr("theme_text", "666666");=0A=
GA_googleAddAttr("theme_link", "5f5f5f");=0A=
GA_googleAddAttr("theme_url", "9f9f9f");=0A=
GA_googleAddAdSensePageAttr("google_page_url", =
"http://apirola.wordpress.com/2012/09/05/setup-jy-mcu-bt-board-v1-2/");=0A=
GA_googleFillSlot("wpcom_below_post_adsafe");=0A=
}=0A=
</SCRIPT>
</DIV>
<STYLE type=3D"text/css">=0A=
div.wpa>div { margin-top: 1em; }=0A=
</STYLE>

<SCRIPT type=3D"text/javascript">=0A=
jQuery( window ).load( function() {=0A=
    if ( jQuery(".wpa script[src*=3D'shareth.ru']").length > 0 || =
jQuery(".wpa iframe[src*=3D'boomvideo.tv']").length > 0 || jQuery(".wpa =
iframe[src*=3D'viewablemedia.net']").length > 0 || jQuery(".wpa =
.sharethrough-placement").length > 0 ) {=0A=
        jQuery( '.wpa' ).css( 'width', '400px' );=0A=
    }=0A=
setTimeout(function(){if(typeof GS_googleAddAdSenseService !=3D=3D =
'function'){new =
Image().src=3Ddocument.location.protocol+"//stats.wordpress.com/g.gif?v=3D=
wpcom-no-pv&x_noads=3Dadblock&baba=3D"+Math.random()}},100);=0A=
} );=0A=
</SCRIPT>

<DIV id=3D"jp-post-flair" class=3D"sharedaddy sd-like-enabled">
<DIV id=3D"like-post-wrapper-4535158-251-516d76e9c9739" =
class=3D"sharedaddy sd-block sd-like jetpack-likes-widget-wrapper =
jetpack-likes-widget-unloaded"=20
data-name=3D"like-post-frame-4535158-251-516d76e9c9739" =
data-src=3D"http://widgets.wp.com/likes/#blog_id=3D4535158&amp;post_id=3D=
251&amp;origin=3Dhttp://apirola.wordpress.com&amp;obj_id=3D4535158-251-51=
6d76e9c9739">
<H3 class=3D"sd-title">Me gusta:</H3>
<DIV style=3D"height: 55px;" =
class=3D"post-likes-widget-placeholder"><SPAN class=3D"button"><SPAN>Me=20
gusta</SPAN></SPAN> <SPAN =
class=3D"loading">Cargando...</SPAN></DIV><SPAN =
class=3D"sd-text-color"></SPAN><A=20
class=3D"sd-link-color"></A></DIV></DIV></DIV>
<DIV class=3D"clear"></DIV>
<DIV class=3D"metadata">					Esta entrada fue publicada el 5 septiembre =
2012 en=20
4:56 pm																 						y publicado el <A title=3D"Ver todas las =
entradas en Uncategorized"=20
href=3D"http://apirola.wordpress.com/category/uncategorized/"=20
rel=3D"category tag">Uncategorized</A>.										Puedes seguir las =
respuestas a=20
esta entrada a trav=C3=A9s de este feed <A =
href=3D"http://apirola.wordpress.com/2012/09/05/setup-jy-mcu-bt-board-v1-=
2/feed/">RSS=20
2.0</A> .									</DIV>
<DIV class=3D"hr">
<HR>
</DIV></DIV>
<DIV class=3D"single navigation clearfix">
<DIV class=3D"nav-previous"><A =
href=3D"http://apirola.wordpress.com/2012/09/05/instalar-ultima-versin-de=
-redis-io/"=20
rel=3D"prev"><SPAN class=3D"meta-nav">=C2=AB</SPAN> Instalar Ultima =
versi=C3=B3n=20
de&nbsp;Redis.io</A></DIV>
<DIV class=3D"nav-next"><A =
href=3D"http://apirola.wordpress.com/2012/11/07/minimosd-rev-0-1-running-=
arducam-osd/"=20
rel=3D"next">MinimOSD rev.0.1 running arducam-osd&nbsp;2.0 <SPAN=20
class=3D"meta-nav">=C2=BB</SPAN></A></DIV></DIV>
<H4 id=3D"comments">6 comentarios		 to =E2=80=9CSetup JY-MCU BT =
BOARD&nbsp;v1.2=E2=80=9D	</H4>
<UL id=3D"commentlist">
  <LI id=3D"comment-31" class=3D"comment even thread-even depth-1 =
highlander-comment">
  <DIV class=3D"comment-content">
  <DIV class=3D"before-comment"></DIV>
  <DIV class=3D"comment"><IMG class=3D"avatar avatar-32" alt=3D"" =
src=3D"http://0.gravatar.com/avatar/34d7ff83168ebf223357c0298b7d5e7b?s=3D=
32&amp;d=3Didenticon&amp;r=3DG"=20
  width=3D"32" height=3D"32"><CITE>Alex				</CITE><BR><SMALL=20
  class=3D"commentmetadata"><A title=3D"" =
href=3D"http://apirola.wordpress.com/2012/09/05/setup-jy-mcu-bt-board-v1-=
2/#comment-31">
  					30/10/12 at 6:58 pm</A></SMALL>
  <DIV class=3D"comment-text">
  <P>Hi,<BR>I have been trying to change the baudrate on my JY-MCU INEX =
BT_BOARD=20
  V1.2 and have linked it up to my pc using and FDTI adaptor (arduino =
uno with=20
  chip removed) and also with a CP2102 USB to serial adaptor.<BR>In both =
cases I=20
  have installed the drivers for the adapters and they show up in device =
manager=20
  where I check the COM port.<BR>However the device manager does not say =

  anything about it being a bluetooth device, just a =
=E2=80=9CCommunications port=E2=80=9D or=20
  =E2=80=9CUSB to UART Bridge=E2=80=9D.</P>
  <P>I start up Putty set the baud rate to 9600, set flow control to =
none and=20
  open a putty terminal.<BR>The terminal opens, but then nothing else. I =
have=20
  tried entering =E2=80=9CAT=E2=80=9D but nothing appears in the =
terminal.<BR>With every=20
  keystroke I do, the RX light flashes on my FDTI adapter but there is =
nothing=20
  on TX or on screen.<BR>I have tried reversing RX and TX with no =
effect.</P>
  <P>I can pair a device with the bluetooth module, and I know I have=20
  successfully used this before as a connection between my phone and an=20
  Arduino.<BR>I do not recall ever changing the baud rate. (I have tried =
115200=20
  in putty just in case but it makes no difference).</P>
  <P>Is there anything special one has to do to be able to type in the =
Putty=20
  terminal? Am I missing something here?</P></DIV>
  <DIV class=3D"reply"><A class=3D"comment-reply-link" onclick=3D'return =
addComment.moveForm("comment-31", "31", "respond", "251")'=20
  =
href=3D"http://apirola.wordpress.com/2012/09/05/setup-jy-mcu-bt-board-v1-=
2/?replytocom=3D31#respond">Responder</A></DIV></DIV></DIV>
  <UL class=3D"children">
    <LI id=3D"comment-32" class=3D"comment odd alt depth-2 =
highlander-comment">
    <DIV class=3D"comment-content">
    <DIV class=3D"before-comment"></DIV>
    <DIV class=3D"comment"><IMG class=3D"avatar avatar-32" alt=3D"" =
src=3D"http://0.gravatar.com/avatar/34d7ff83168ebf223357c0298b7d5e7b?s=3D=
32&amp;d=3Didenticon&amp;r=3DG"=20
    width=3D"32" height=3D"32"><CITE>					Alex				</CITE><BR><SMALL =
class=3D"commentmetadata"><A=20
    title=3D"" =
href=3D"http://apirola.wordpress.com/2012/09/05/setup-jy-mcu-bt-board-v1-=
2/#comment-32">
    					30/10/12 at 7:00 pm</A></SMALL>
    <DIV class=3D"comment-text">
    <P>Also, I have successfully used that FDTI adapter to change the =
baudrate=20
    for a GPS module through serial. Just not using Putty.</P></DIV>
    <DIV class=3D"reply"><A class=3D"comment-reply-link" =
onclick=3D'return addComment.moveForm("comment-32", "32", "respond", =
"251")'=20
    =
href=3D"http://apirola.wordpress.com/2012/09/05/setup-jy-mcu-bt-board-v1-=
2/?replytocom=3D32#respond">Responder</A></DIV></DIV></DIV>
    </LI><!-- #comment-## --></UL><!-- .children --></LI><!-- =
#comment-## -->
  <LI id=3D"comment-35" class=3D"comment even thread-odd thread-alt =
depth-1 highlander-comment">
  <DIV class=3D"comment-content">
  <DIV class=3D"before-comment"></DIV>
  <DIV class=3D"comment"><IMG class=3D"avatar avatar-32" alt=3D"" =
src=3D"http://1.gravatar.com/avatar/169b0078e474b79681d23df571e71586?s=3D=
32&amp;d=3Didenticon&amp;r=3DG"=20
  width=3D"32" height=3D"32"><CITE><A class=3D"url" =
href=3D"http://gravatar.com/kdmcmullan"=20
  rel=3D"external nofollow">KDM</A></CITE><BR><SMALL =
class=3D"commentmetadata"><A=20
  title=3D"" =
href=3D"http://apirola.wordpress.com/2012/09/05/setup-jy-mcu-bt-board-v1-=
2/#comment-35">
  					11/11/12 at 9:49 am</A></SMALL>
  <DIV class=3D"comment-text">
  <P>I=E2=80=99ve been able to communicate with my BT adapter =
successfully with the=20
  advice given here. I issue the AT commands and get good response. If I =
change=20
  the baud rate, I must also change the baud rate of my terminal, so I =
know it=20
  works.</P>
  <P>The problem is that when I remove power the BT adapter seems to =
forget the=20
  settings I gave it, reverting back to linvor, 1234, 9600 baud, =
etc.</P>
  <P>Is there a command to tell it to retain the settings, or are they =
lost on=20
  power down?</P>
  <P>Many thanks.</P></DIV>
  <DIV class=3D"reply"><A class=3D"comment-reply-link" onclick=3D'return =
addComment.moveForm("comment-35", "35", "respond", "251")'=20
  =
href=3D"http://apirola.wordpress.com/2012/09/05/setup-jy-mcu-bt-board-v1-=
2/?replytocom=3D35#respond">Responder</A></DIV></DIV></DIV>
  <UL class=3D"children">
    <LI id=3D"comment-36" class=3D"comment byuser comment-author-alejamp =
bypostauthor odd alt depth-2 highlander-comment">
    <DIV class=3D"comment-content">
    <DIV class=3D"before-comment"></DIV>
    <DIV class=3D"comment"><IMG class=3D"avatar avatar-32" alt=3D"" =
src=3D"http://1.gravatar.com/avatar/1b00c5591200fc85743b34dbdaf792b2?s=3D=
32&amp;d=3Didenticon&amp;r=3DG"=20
    width=3D"32" height=3D"32"><CITE>					alejamp				</CITE><BR><SMALL =
class=3D"commentmetadata"><A=20
    title=3D"" =
href=3D"http://apirola.wordpress.com/2012/09/05/setup-jy-mcu-bt-board-v1-=
2/#comment-36">
    					12/11/12 at 2:24 pm</A></SMALL>
    <DIV class=3D"comment-text">
    <P>KDM, I don=E2=80=99t know why your BT module seems to forget the =
settings.=20
    Settings should be persistent. Make sure your power supply is =
5V.<BR>I have=20
    changed the settings once and them install it in my quadcopter. I =
have used=20
    it several times without need of re setup the BT module.<BR>I have =
the HCxx=20
    module manual, which is the small board attached to JY-MCU, here is =
the=20
    link:</P>
    <P><A =
href=3D"http://apirola.files.wordpress.com/2012/11/hc-serial-bluetooth-pr=
oducts-201104.pdf"=20
    =
rel=3D"nofollow">http://apirola.files.wordpress.com/2012/11/hc-serial-blu=
etooth-products-201104.pdf</A></P>
    <P>Sorry I can=E2=80=99t help you.</P></DIV>
    <DIV class=3D"reply"><A class=3D"comment-reply-link" =
onclick=3D'return addComment.moveForm("comment-36", "36", "respond", =
"251")'=20
    =
href=3D"http://apirola.wordpress.com/2012/09/05/setup-jy-mcu-bt-board-v1-=
2/?replytocom=3D36#respond">Responder</A></DIV></DIV></DIV>
    </LI><!-- #comment-## --></UL><!-- .children --></LI><!-- =
#comment-## -->
  <LI id=3D"comment-57" class=3D"comment even thread-even depth-1 =
highlander-comment">
  <DIV class=3D"comment-content">
  <DIV class=3D"before-comment"></DIV>
  <DIV class=3D"comment"><IMG class=3D"avatar avatar-32" alt=3D"" =
src=3D"http://0.gravatar.com/avatar/c9a97b1c0bde64dc2ef2b2c2cb128f48?s=3D=
32&amp;d=3Didenticon&amp;r=3DG"=20
  width=3D"32" height=3D"32"><CITE>					Gaia				</CITE><BR><SMALL =
class=3D"commentmetadata"><A=20
  title=3D"" =
href=3D"http://apirola.wordpress.com/2012/09/05/setup-jy-mcu-bt-board-v1-=
2/#comment-57">
  					12/01/13 at 10:50 pm</A></SMALL>
  <DIV class=3D"comment-text">
  <P>How many phones would you say this device can pair with at a=20
time?</P></DIV>
  <DIV class=3D"reply"><A class=3D"comment-reply-link" onclick=3D'return =
addComment.moveForm("comment-57", "57", "respond", "251")'=20
  =
href=3D"http://apirola.wordpress.com/2012/09/05/setup-jy-mcu-bt-board-v1-=
2/?replytocom=3D57#respond">Responder</A></DIV></DIV></DIV>
  <UL class=3D"children">
    <LI id=3D"comment-58" class=3D"comment byuser comment-author-alejamp =
bypostauthor odd alt depth-2 highlander-comment">
    <DIV class=3D"comment-content">
    <DIV class=3D"before-comment"></DIV>
    <DIV class=3D"comment"><IMG class=3D"avatar avatar-32" alt=3D"" =
src=3D"http://1.gravatar.com/avatar/1b00c5591200fc85743b34dbdaf792b2?s=3D=
32&amp;d=3Didenticon&amp;r=3DG"=20
    width=3D"32" height=3D"32"><CITE>					alejamp				</CITE><BR><SMALL =
class=3D"commentmetadata"><A=20
    title=3D"" =
href=3D"http://apirola.wordpress.com/2012/09/05/setup-jy-mcu-bt-board-v1-=
2/#comment-58">
    					13/01/13 at 1:29 am</A></SMALL>
    <DIV class=3D"comment-text">
    <P>1</P></DIV>
    <DIV class=3D"reply"><A class=3D"comment-reply-link" =
onclick=3D'return addComment.moveForm("comment-58", "58", "respond", =
"251")'=20
    =
href=3D"http://apirola.wordpress.com/2012/09/05/setup-jy-mcu-bt-board-v1-=
2/?replytocom=3D58#respond">Responder</A></DIV></DIV></DIV>
    </LI><!-- #comment-## --></UL><!-- .children --></LI><!-- =
#comment-## --></UL>
<DIV class=3D"navigation">
<DIV class=3D"alignleft"></DIV>
<DIV class=3D"alignright"></DIV></DIV>
<DIV class=3D"clear"></DIV>
<DIV id=3D"respond">
<H3 id=3D"reply-title">Deja un comentario <SMALL><A style=3D"display: =
none;" id=3D"cancel-comment-reply-link"=20
href=3D"http://apirola.wordpress.com/2012/09/05/setup-jy-mcu-bt-board-v1-=
2/#respond"=20
rel=3D"nofollow">Cancelar respuesta</A></SMALL></H3>
<FORM id=3D"commentform" method=3D"post" =
action=3D"http://apirola.wordpress.com/wp-comments-post.php"><INPUT=20
id=3D"hc_post_as" name=3D"hc_post_as" value=3D"guest" type=3D"hidden">
<DIV class=3D"comment-form-field comment-textarea"><LABEL =
for=3D"comment">A=C3=B1ade tu=20
comentario aqu=C3=AD...</LABEL>
<DIV=20
id=3D"comment-form-comment"><TEXTAREA id=3D"comment" =
name=3D"comment"></TEXTAREA></DIV>
</DIV>
<DIV id=3D"comment-form-identity">
<DIV id=3D"comment-form-nascar">
<P>Introduce tus datos o haz clic en un icono para iniciar =
sesi=C3=B3n:</P>
<UL>
  <LI style=3D"display: none;" class=3D"selected"><A id=3D"postas-guest" =
title=3D"Invitado"=20
  =
href=3D"http://apirola.wordpress.com/2012/09/05/setup-jy-mcu-bt-board-v1-=
2/#comment-form-guest"><SPAN></SPAN></A></LI>
  <LI><A id=3D"postas-wordpress" title=3D"WordPress.com" =
href=3D"http://apirola.wordpress.com/2012/09/05/setup-jy-mcu-bt-board-v1-=
2/#comment-form-load-service:WordPress.com"><SPAN></SPAN></A></LI>
  <LI><A id=3D"postas-twitter" title=3D"Twitter" =
href=3D"http://apirola.wordpress.com/2012/09/05/setup-jy-mcu-bt-board-v1-=
2/#comment-form-load-service:Twitter"><SPAN></SPAN></A></LI>
  <LI><A id=3D"postas-facebook" title=3D"Facebook" =
href=3D"http://apirola.wordpress.com/2012/09/05/setup-jy-mcu-bt-board-v1-=
2/#comment-form-load-service:Facebook"><SPAN></SPAN></A></LI></UL></DIV>
<DIV id=3D"comment-form-guest" class=3D"comment-form-service selected">
<DIV class=3D"comment-form-padder">
<DIV class=3D"comment-form-avatar"><A =
href=3D"https://gravatar.com/site/signup/"=20
target=3D"_blank"><IMG class=3D"no-grav" alt=3D"Gravatar" =
src=3D"http://1.gravatar.com/avatar/ad516503a11cd5ca435acc9bb6523536?s=3D=
25&amp;d=3Didenticon&amp;forcedefault=3Dy&amp;r=3DG"=20
width=3D"25"></A></DIV>
<DIV class=3D"comment-form-fields">
<DIV class=3D"comment-form-field comment-form-email"><LABEL =
for=3D"email">Correo=20
electr=C3=B3nico <SPAN class=3D"required">(requerido)</SPAN> <SPAN=20
class=3D"nopublish">(La direcci=C3=B3n no se har=C3=A1 =
p=C3=BAblica)</SPAN></LABEL>
<DIV class=3D"comment-form-input"><INPUT id=3D"email" name=3D"email"=20
type=3D"email"></DIV></DIV>
<DIV class=3D"comment-form-field comment-form-author"><LABEL =
for=3D"author">Nombre=20
<SPAN class=3D"required">(requerido)</SPAN></LABEL>
<DIV class=3D"comment-form-input"><INPUT id=3D"author" name=3D"author"=20
type=3D"text"></DIV></DIV>
<DIV class=3D"comment-form-field comment-form-url"><LABEL =
for=3D"url">Web</LABEL>
<DIV class=3D"comment-form-input"><INPUT id=3D"url" name=3D"url"=20
type=3D"text"></DIV></DIV></DIV></DIV></DIV>
<DIV id=3D"comment-form-wordpress" class=3D"comment-form-service">
<DIV class=3D"comment-form-padder">
<DIV class=3D"comment-form-avatar"><IMG class=3D"no-grav" alt=3D"Logo de =
WordPress.com"=20
src=3D"http://s2.wp.com/wp-content/mu-plugins/highlander-comments/images/=
wplogo.png?m=3D1289230950g"=20
width=3D"25"></DIV>
<DIV class=3D"comment-form-fields"><INPUT id=3D"wordpress-avatar" =
class=3D"comment-meta-wordpress"=20
name=3D"wp_avatar" type=3D"hidden"><INPUT id=3D"wordpress-user_id" =
class=3D"comment-meta-wordpress"=20
name=3D"wp_user_id" type=3D"hidden"><INPUT id=3D"wordpress-access_token" =
class=3D"comment-meta-wordpress"=20
name=3D"wp_access_token" type=3D"hidden">
<P class=3D"comment-form-posting-as pa-wordpress"><STRONG></STRONG> =
Est=C3=A1s=20
comentando usando tu cuenta de WordPress.com. <SPAN=20
class=3D"comment-form-log-out">(&nbsp;<A =
href=3D"javascript:HighlanderComments.doExternalLogout( 'wordpress' =
);">Log&nbsp;Out</A>&nbsp;/&nbsp;<A=20
onclick=3D"javascript:HighlanderComments.switchAccount();return false;" =
href=3D"http://apirola.wordpress.com/2012/09/05/setup-jy-mcu-bt-board-v1-=
2/#">Cambiar</A>&nbsp;)</SPAN></P></DIV></DIV></DIV>
<DIV id=3D"comment-form-twitter" class=3D"comment-form-service">
<DIV class=3D"comment-form-padder">
<DIV class=3D"comment-form-avatar"><IMG class=3D"no-grav" alt=3D"Twitter =
picture" =
src=3D"http://1.gravatar.com/avatar/ad516503a11cd5ca435acc9bb6523536?s=3D=
25&amp;d=3Didenticon&amp;forcedefault=3Dy&amp;r=3DG"=20
width=3D"25"></DIV>
<DIV class=3D"comment-form-fields"><INPUT id=3D"twitter-avatar" =
class=3D"comment-meta-twitter"=20
name=3D"twitter_avatar" type=3D"hidden"><INPUT id=3D"twitter-user_id" =
class=3D"comment-meta-twitter"=20
name=3D"twitter_user_id" type=3D"hidden"><INPUT =
id=3D"twitter-access_token" class=3D"comment-meta-twitter"=20
name=3D"twitter_access_token" type=3D"hidden">
<P class=3D"comment-form-posting-as pa-twitter"><STRONG></STRONG> =
Est=C3=A1s comentando=20
usando tu cuenta de Twitter. <SPAN =
class=3D"comment-form-log-out">(&nbsp;<A =
href=3D"javascript:HighlanderComments.doExternalLogout( 'twitter' =
);">Log&nbsp;Out</A>&nbsp;/&nbsp;<A=20
onclick=3D"javascript:HighlanderComments.switchAccount();return false;" =
href=3D"http://apirola.wordpress.com/2012/09/05/setup-jy-mcu-bt-board-v1-=
2/#">Cambiar</A>&nbsp;)</SPAN></P></DIV></DIV></DIV>
<DIV id=3D"comment-form-facebook" class=3D"comment-form-service">
<DIV class=3D"comment-form-padder">
<DIV class=3D"comment-form-avatar"><IMG class=3D"no-grav" =
alt=3D"Facebook photo" =
src=3D"http://1.gravatar.com/avatar/ad516503a11cd5ca435acc9bb6523536?s=3D=
25&amp;d=3Didenticon&amp;forcedefault=3Dy&amp;r=3DG"=20
width=3D"25"></DIV>
<DIV class=3D"comment-form-fields"><INPUT id=3D"facebook-avatar" =
class=3D"comment-meta-facebook"=20
name=3D"fb_avatar" type=3D"hidden"><INPUT id=3D"facebook-user_id" =
class=3D"comment-meta-facebook"=20
name=3D"fb_user_id" type=3D"hidden"><INPUT id=3D"facebook-access_token" =
class=3D"comment-meta-facebook"=20
name=3D"fb_access_token" type=3D"hidden">
<P class=3D"comment-form-posting-as pa-facebook"><STRONG></STRONG> =
Est=C3=A1s=20
comentando usando tu cuenta de Facebook. <SPAN=20
class=3D"comment-form-log-out">(&nbsp;<A =
href=3D"javascript:HighlanderComments.doExternalLogout( 'facebook' =
);">Log&nbsp;Out</A>&nbsp;/&nbsp;<A=20
onclick=3D"javascript:HighlanderComments.switchAccount();return false;" =
href=3D"http://apirola.wordpress.com/2012/09/05/setup-jy-mcu-bt-board-v1-=
2/#">Cambiar</A>&nbsp;)</SPAN></P></DIV></DIV></DIV>
<DIV id=3D"comment-form-load-service" class=3D"comment-form-service">
<DIV class=3D"comment-form-posting-as-cancel"><A =
href=3D"javascript:HighlanderComments.cancelExternalWindow();">Cancelar</=
A></DIV>
<P>Connecting to %s</P></DIV></DIV>
<SCRIPT type=3D"text/javascript">=0A=
jQuery(document).ready(function(){=0A=
	var input =3D document.createElement( 'input' ),=0A=
	    comment =3D jQuery( '#comment' );=0A=
=0A=
	if ( 'placeholder' in input ) {=0A=
		comment.attr( 'placeholder', jQuery( '.comment-textarea label' =
).remove().text() );=0A=
	}=0A=
=0A=
	// Expando Mode: start small, then auto-resize on first click + text =
length=0A=
	jQuery( '#comment-form-identity' ).hide();=0A=
	jQuery( '#comment-form-subscribe' ).hide();=0A=
	jQuery( '#commentform .form-submit' ).hide();=0A=
=0A=
	comment.css( { 'height':'10px' } ).one( 'focus', function() {=0A=
		var timer =3D setInterval( HighlanderComments.resizeCallback, 10 )=0A=
		jQuery( this ).animate( { 'height': HighlanderComments.initialHeight } =
).delay( 100 ).queue( function(n) { clearInterval( timer ); =
HighlanderComments.resizeCallback(); n(); } );=0A=
		jQuery( '#comment-form-identity' ).slideDown();=0A=
		jQuery( '#comment-form-subscribe' ).slideDown();=0A=
		jQuery( '#commentform .form-submit' ).slideDown();=0A=
	});=0A=
});=0A=
</SCRIPT>

<DIV id=3D"comment-form-subscribe">
<P class=3D"comment-subscription-form"><INPUT style=3D"width: auto;" =
id=3D"subscribe"=20
tabIndex=3D"6" name=3D"subscribe" value=3D"subscribe" type=3D"checkbox"> =
<LABEL style=3D"display: inline;"=20
id=3D"subscribe-label" class=3D"subscribe-label" =
for=3D"subscribe">Recibir siguientes=20
comentarios por correo.</LABEL></P></DIV>
<P class=3D"form-submit"><INPUT id=3D"comment-submit" name=3D"submit" =
value=3D"Publicar comentario" type=3D"submit"><INPUT=20
id=3D"comment_post_ID" name=3D"comment_post_ID" value=3D"251" =
type=3D"hidden"><INPUT id=3D"comment_parent"=20
name=3D"comment_parent" value=3D"0" type=3D"hidden"></P><INPUT =
name=3D"genseq" value=3D"1366128361"=20
type=3D"hidden">
<P style=3D"display: none;"><INPUT id=3D"akismet_comment_nonce" =
name=3D"akismet_comment_nonce"=20
value=3D"a2d48f7d11" type=3D"hidden"></P>
<SCRIPT type=3D"text/javascript" =
src=3D"http://s2.wp.com/wp-content/mu-plugins/akismet-2.5/form.js?m=3D130=
8783962g"></SCRIPT>

<P style=3D"display: none;"><INPUT id=3D"ak_js" name=3D"ak_js" =
value=3D"157" type=3D"hidden"></P></FORM></DIV><!-- #respond -->
<DIV style=3D"clear: both;"></DIV></DIV>
<DIV id=3D"sidebar" class=3D"sidebar">
<UL>
  <LI id=3D"pages-2" class=3D"widget widget_pages">
  <H2 class=3D"widgettitle">P=C3=A1ginas</H2>
  <UL>
    <LI class=3D"page_item page-item-2"><A =
href=3D"http://apirola.wordpress.com/about/">About</A></LI></UL></LI>
  <LI id=3D"meta-2" class=3D"widget widget_meta">
  <H2 class=3D"widgettitle">Tags</H2>
  <UL>
    <LI><A=20
    =
href=3D"http://apirola.wordpress.com/wp-login.php?action=3Dregister">Regi=
strarse</A></LI>
    <LI><A =
href=3D"http://apirola.wordpress.com/wp-login.php">Acceder</A></LI>
    <LI><A title=3D"Suscribirse a este sitio usando RSS 2.0" =
href=3D"http://apirola.wordpress.com/feed/"><ABBR=20
    title=3D"Really Simple Syndication">RSS</ABBR> de las =
entradas</A></LI>
    <LI><A title=3D"=C3=9Altimos comentarios a todas las entradas en =
RSS" href=3D"http://apirola.wordpress.com/comments/feed/"><ABBR=20
    title=3D"Really Simple Syndication">RSS</ABBR> de los =
comentarios</A></LI><A=20
    title=3D"Gestionado con WordPress, una avanzada plataforma =
sem=C3=A1ntica de publicaci=C3=B3n personal."=20
    href=3D"http://wordpress.com/">WordPress.com</A></UL></LI>
  <LI id=3D"categories-245447841" class=3D"widget widget_categories">
  <H2 class=3D"widgettitle">Categor=C3=ADas</H2>
  <UL>
    <LI class=3D"cat-item cat-item-5389798"><A title=3D"Ver todas las =
entradas archivadas en AppCelerator"=20
    =
href=3D"http://apirola.wordpress.com/category/appcelerator/">AppCelerator=
</A>
    </LI>
    <LI class=3D"cat-item cat-item-281988"><A title=3D"Ver todas las =
entradas archivadas en Aptana"=20
    =
href=3D"http://apirola.wordpress.com/category/aptana/">Aptana</A></LI>
    <LI class=3D"cat-item cat-item-134289"><A title=3D"Ver todas las =
entradas archivadas en Arduino"=20
    =
href=3D"http://apirola.wordpress.com/category/arduino/">Arduino</A></LI>
    <LI class=3D"cat-item cat-item-2426"><A title=3D"Ver todas las =
entradas archivadas en C#"=20
    href=3D"http://apirola.wordpress.com/category/c/">C#</A></LI>
    <LI class=3D"cat-item cat-item-324281"><A title=3D"Ver todas las =
entradas archivadas en iOS"=20
    href=3D"http://apirola.wordpress.com/category/ios/">iOS</A></LI>
    <LI class=3D"cat-item cat-item-2210435"><A title=3D"Ver todas las =
entradas archivadas en iPhone SDK"=20
    href=3D"http://apirola.wordpress.com/category/iphone-sdk/">iPhone =
SDK</A></LI>
    <LI class=3D"cat-item cat-item-457"><A title=3D"Ver todas las =
entradas archivadas en Javascript"=20
    =
href=3D"http://apirola.wordpress.com/category/javascript/">Javascript</A>=
</LI>
    <LI class=3D"cat-item cat-item-52007953"><A title=3D"Ver todas las =
entradas archivadas en Multicopter"=20
    =
href=3D"http://apirola.wordpress.com/category/multicopter/">Multicopter</=
A>
    </LI>
    <LI class=3D"cat-item cat-item-22319505"><A title=3D"Ver todas las =
entradas archivadas en NoSQL"=20
    href=3D"http://apirola.wordpress.com/category/nosql/">NoSQL</A></LI>
    <LI class=3D"cat-item cat-item-101584"><A title=3D"Ver todas las =
entradas archivadas en OCR"=20
    href=3D"http://apirola.wordpress.com/category/ocr/">OCR</A></LI>
    <LI class=3D"cat-item cat-item-832"><A title=3D"Ver todas las =
entradas archivadas en Python"=20
    =
href=3D"http://apirola.wordpress.com/category/python/">Python</A></LI>
    <LI class=3D"cat-item cat-item-10970481"><A title=3D"Ver todas las =
entradas archivadas en Quadcopter"=20
    =
href=3D"http://apirola.wordpress.com/category/quadcopter/">Quadcopter</A>=
</LI>
    <LI class=3D"cat-item cat-item-67189685"><A title=3D"Ver todas las =
entradas archivadas en RavenDB"=20
    =
href=3D"http://apirola.wordpress.com/category/nosql/ravendb-nosql/">Raven=
DB</A>
    </LI>
    <LI class=3D"cat-item cat-item-5307557"><A title=3D"Ver todas las =
entradas archivadas en Redis"=20
    =
href=3D"http://apirola.wordpress.com/category/nosql/redis/">Redis</A></LI=
>
    <LI class=3D"cat-item cat-item-398770"><A title=3D"Ver todas las =
entradas archivadas en Riak"=20
    =
href=3D"http://apirola.wordpress.com/category/nosql/riak/">Riak</A></LI>
    <LI class=3D"cat-item cat-item-178048"><A title=3D"Ver todas las =
entradas archivadas en Titanium"=20
    =
href=3D"http://apirola.wordpress.com/category/titanium/">Titanium</A></LI=
>
    <LI class=3D"cat-item cat-item-1"><A title=3D"Ver todas las entradas =
archivadas en Uncategorized"=20
    =
href=3D"http://apirola.wordpress.com/category/uncategorized/">Uncategoriz=
ed</A>
    </LI>
    <LI class=3D"cat-item cat-item-176525"><A title=3D"Ver todas las =
entradas archivadas en XCode"=20
    =
href=3D"http://apirola.wordpress.com/category/xcode/">XCode</A></LI></UL>=
</LI>
  <LI id=3D"wp_tag_cloud-2" class=3D"widget wp_widget_tag_cloud">
  <H2 class=3D"widgettitle">Etiquetas</H2>
  <DIV style=3D"overflow: hidden;"><A style=3D"font-size: 8pt;" =
class=3D"tag-link-2427"=20
  title=3D"1 tema" =
href=3D"http://apirola.wordpress.com/tag/net/">.NET</A><A =
style=3D"font-size: 8pt;"=20
  class=3D"tag-link-284407" title=3D"1 tema" =
href=3D"http://apirola.wordpress.com/tag/ankhsvn/">AnkhSVN</A>
  <A style=3D"font-size: 22pt;" class=3D"tag-link-46384266" title=3D"3 =
temas" =
href=3D"http://apirola.wordpress.com/tag/appcelerator-2/">appcelerator</A=
>
  <A style=3D"font-size: 16.4pt;" class=3D"tag-link-46384262" title=3D"2 =
temas" href=3D"http://apirola.wordpress.com/tag/aptana-2/">aptana</A>
  <A style=3D"font-size: 8pt;" class=3D"tag-link-3705" title=3D"1 tema" =
href=3D"http://apirola.wordpress.com/tag/arquitectura/">arquitectura</A>
  <A style=3D"font-size: 8pt;" class=3D"tag-link-336308" title=3D"1 =
tema" =
href=3D"http://apirola.wordpress.com/tag/autocomplete/">autocomplete</A>
  <A style=3D"font-size: 8pt;" class=3D"tag-link-2426" title=3D"1 tema" =
href=3D"http://apirola.wordpress.com/tag/c/">C#</A>
  <A style=3D"font-size: 8pt;" class=3D"tag-link-76379" title=3D"1 tema" =
href=3D"http://apirola.wordpress.com/tag/computer-vision/">Computer=20
  Vision</A><A style=3D"font-size: 8pt;" class=3D"tag-link-66426" =
title=3D"1 tema"=20
  href=3D"http://apirola.wordpress.com/tag/css3/">CSS3</A><A =
style=3D"font-size: 8pt;"=20
  class=3D"tag-link-10290979" title=3D"1 tema" =
href=3D"http://apirola.wordpress.com/tag/cultureinfo/">CultureInfo</A>
  <A style=3D"font-size: 8pt;" class=3D"tag-link-10311818" title=3D"1 =
tema" href=3D"http://apirola.wordpress.com/tag/deskew/">Deskew</A>
  <A style=3D"font-size: 8pt;" class=3D"tag-link-32974" title=3D"1 tema" =
href=3D"http://apirola.wordpress.com/tag/editor/">editor</A>
  <A style=3D"font-size: 8pt;" class=3D"tag-link-456" title=3D"1 tema" =
href=3D"http://apirola.wordpress.com/tag/flash/">Flash</A>
  <A style=3D"font-size: 8pt;" class=3D"tag-link-149" title=3D"1 tema" =
href=3D"http://apirola.wordpress.com/tag/hosting/">Hosting</A>
  <A style=3D"font-size: 8pt;" class=3D"tag-link-866510" title=3D"1 =
tema" href=3D"http://apirola.wordpress.com/tag/hough/">Hough</A>
  <A style=3D"font-size: 8pt;" class=3D"tag-link-53242" title=3D"1 tema" =
href=3D"http://apirola.wordpress.com/tag/html5/">HTML5</A>
  <A style=3D"font-size: 8pt;" class=3D"tag-link-7746" title=3D"1 tema" =
href=3D"http://apirola.wordpress.com/tag/ide/">IDE</A>
  <A style=3D"font-size: 8pt;" class=3D"tag-link-914" title=3D"1 tema" =
href=3D"http://apirola.wordpress.com/tag/images/">Images</A>
  <A style=3D"font-size: 8pt;" class=3D"tag-link-32588218" title=3D"1 =
tema" =
href=3D"http://apirola.wordpress.com/tag/intelisense/">intelisense</A>
  <A style=3D"font-size: 8pt;" class=3D"tag-link-71684" title=3D"1 tema" =
href=3D"http://apirola.wordpress.com/tag/introduccion/">introduccion</A>
  <A style=3D"font-size: 8pt;" class=3D"tag-link-324281" title=3D"1 =
tema" href=3D"http://apirola.wordpress.com/tag/ios/">iOS</A>
  <A style=3D"font-size: 8pt;" class=3D"tag-link-2210435" title=3D"1 =
tema" href=3D"http://apirola.wordpress.com/tag/iphone-sdk/">iPhone=20
  SDK</A><A style=3D"font-size: 8pt;" class=3D"tag-link-457" title=3D"1 =
tema" =
href=3D"http://apirola.wordpress.com/tag/javascript/">Javascript</A>
  <A style=3D"font-size: 8pt;" class=3D"tag-link-6253756" title=3D"1 =
tema" href=3D"http://apirola.wordpress.com/tag/lenguages/">Lenguages</A>
  <A style=3D"font-size: 8pt;" class=3D"tag-link-120" title=3D"1 tema" =
href=3D"http://apirola.wordpress.com/tag/mobile/">mobile</A>
  <A style=3D"font-size: 22pt;" class=3D"tag-link-52007953" title=3D"3 =
temas" =
href=3D"http://apirola.wordpress.com/tag/multicopter/">Multicopter</A>
  <A style=3D"font-size: 8pt;" class=3D"tag-link-123039" title=3D"1 =
tema" href=3D"http://apirola.wordpress.com/tag/multiples/">Multiples</A>
  <A style=3D"font-size: 8pt;" class=3D"tag-link-41697" title=3D"1 tema" =
href=3D"http://apirola.wordpress.com/tag/notepad/">notepad++</A>
  <A style=3D"font-size: 8pt;" class=3D"tag-link-1234361" title=3D"1 =
tema" href=3D"http://apirola.wordpress.com/tag/pydev/">PyDEV</A>
  <A style=3D"font-size: 8pt;" class=3D"tag-link-832" title=3D"1 tema" =
href=3D"http://apirola.wordpress.com/tag/python/">Python</A>
  <A style=3D"font-size: 16.4pt;" class=3D"tag-link-10970481" title=3D"2 =
temas" =
href=3D"http://apirola.wordpress.com/tag/quadcopter/">Quadcopter</A>
  <A style=3D"font-size: 8pt;" class=3D"tag-link-35914517" title=3D"1 =
tema" href=3D"http://apirola.wordpress.com/tag/ravendb-2/">ravendb</A>
  <A style=3D"font-size: 16.4pt;" class=3D"tag-link-5307557" title=3D"2 =
temas" href=3D"http://apirola.wordpress.com/tag/redis/">Redis</A>
  <A style=3D"font-size: 8pt;" class=3D"tag-link-10724" title=3D"1 tema" =
href=3D"http://apirola.wordpress.com/tag/resource/">Resource</A>
  <A style=3D"font-size: 8pt;" class=3D"tag-link-6243766" title=3D"1 =
tema" =
href=3D"http://apirola.wordpress.com/tag/resourcemanager/">ResourceManage=
r</A>
  <A style=3D"font-size: 8pt;" class=3D"tag-link-1136238" title=3D"1 =
tema" href=3D"http://apirola.wordpress.com/tag/scite/">scite</A>
  <A style=3D"font-size: 8pt;" class=3D"tag-link-984139" title=3D"1 =
tema" =
href=3D"http://apirola.wordpress.com/tag/silverlight/">Silverlight</A>
  <A style=3D"font-size: 8pt;" class=3D"tag-link-42964" title=3D"1 tema" =
href=3D"http://apirola.wordpress.com/tag/subversion/">Subversion</A>
  <A style=3D"font-size: 16.4pt;" class=3D"tag-link-164684" title=3D"2 =
temas" href=3D"http://apirola.wordpress.com/tag/svn/">SVN</A>
  <A style=3D"font-size: 22pt;" class=3D"tag-link-36367149" title=3D"3 =
temas" =
href=3D"http://apirola.wordpress.com/tag/titanium-2/">titanium</A>
  <A style=3D"font-size: 8pt;" class=3D"tag-link-255" title=3D"1 tema" =
href=3D"http://apirola.wordpress.com/tag/ubuntu/">Ubuntu</A>
  <A style=3D"font-size: 8pt;" class=3D"tag-link-237412" title=3D"1 =
tema" href=3D"http://apirola.wordpress.com/tag/uninstall/">uninstall</A>
  <A style=3D"font-size: 8pt;" class=3D"tag-link-20060" title=3D"1 tema" =
href=3D"http://apirola.wordpress.com/tag/visual-studio-2005/">Visual=20
  Studio 2005</A><A style=3D"font-size: 8pt;" class=3D"tag-link-2905990" =
title=3D"1 tema"=20
  href=3D"http://apirola.wordpress.com/tag/visualsvn/">VisualSVN</A><A =
style=3D"font-size: 8pt;"=20
  class=3D"tag-link-34987968" title=3D"1 tema" =
href=3D"http://apirola.wordpress.com/tag/xcode-2/">Xcode</A></DIV></LI>
  <LI id=3D"archives-2" class=3D"widget widget_archive">
  <H2 class=3D"widgettitle">Archivos</H2><SELECT =
onchange=3D"document.location.href=3Dthis.options[this.selectedIndex].val=
ue;"=20
  name=3D"archive-dropdown"> <OPTION value=3D"">Elegir =
mes</OPTION><OPTION value=3D"http://apirola.wordpress.com/2012/11/">=20
    noviembre 2012 &nbsp;(1)</OPTION><OPTION =
value=3D"http://apirola.wordpress.com/2012/09/">=20
    septiembre 2012 &nbsp;(3)</OPTION><OPTION =
value=3D"http://apirola.wordpress.com/2012/08/">=20
    agosto 2012 &nbsp;(3)</OPTION><OPTION =
value=3D"http://apirola.wordpress.com/2011/10/">=20
    octubre 2011 &nbsp;(2)</OPTION><OPTION =
value=3D"http://apirola.wordpress.com/2010/11/">=20
    noviembre 2010 &nbsp;(4)</OPTION><OPTION =
value=3D"http://apirola.wordpress.com/2008/10/">=20
    octubre 2008 &nbsp;(1)</OPTION><OPTION =
value=3D"http://apirola.wordpress.com/2008/09/">=20
    septiembre 2008 &nbsp;(1)</OPTION><OPTION =
value=3D"http://apirola.wordpress.com/2008/08/">=20
    agosto 2008 &nbsp;(3)</OPTION></SELECT></LI>	</UL>
</DIV><!-- #sidebar-1 --></DIV>
<DIV class=3D"clear"></DIV></DIV></DIV><!-- #content-body -->
<DIV id=3D"footer-wrap-outer">
<DIV id=3D"footer-wrap">
<DIV id=3D"footer">
<DIV id=3D"subscribe-rss"><A =
href=3D"http://apirola.wordpress.com/feed/">Suscribirse=20
por RSS</A></DIV>
<DIV class=3D"clear"></DIV>
<DIV class=3D"credit"><A href=3D"http://es.wordpress.com/?ref=3Dfooter" =
rel=3D"generator">Blog=20
de WordPress.com</A>.				Tema <A title=3D"Learn more about this theme" =
href=3D"http://theme.wordpress.com/themes/elegant-grunge/">Elegant=20
Grunge</A> por <A =
href=3D"http://atastypixel.com/blog/wordpress/themes/elegant-grunge/?from=
creditlink"=20
rel=3D"designer">Michael Tyson</A>.			</DIV></DIV></DIV></DIV><!-- =
#footer-wrap-outer -->
<SCRIPT type=3D"text/javascript">=0A=
var _qevents =3D _qevents || [], wpcomQuantcastData =3D =
{"qacct":"p-18-mFEk4J448M","labels":",language.es,type.wpcom,as"};=0A=
function wpcomQuantcastPixel( labels, options ) {=0A=
	var i, defaults =3D wpcomQuantcastData, data =3D { event: 'ajax' };=0A=
=0A=
	labels  =3D labels  || '';=0A=
	options =3D options || {};=0A=
=0A=
	if ( typeof labels !=3D 'string' )=0A=
		options =3D labels;=0A=
=0A=
	for ( i in defaults ) {=0A=
		data[i] =3D defaults[i];=0A=
	}=0A=
=0A=
	for ( i in options ) {=0A=
		data[i] =3D options[i];=0A=
	}=0A=
=0A=
	if ( data.labels ) {=0A=
		data.labels +=3D ',' + labels;=0A=
	} else {=0A=
		data.labels =3D labels;=0A=
	}=0A=
=0A=
	_qevents.push( data );=0A=
};=0A=
(function() {var elem =3D document.createElement('script');elem.src =3D =
(document.location.protocol =3D=3D "https:" ? "https://secure" : =
"http://edge") + ".quantserve.com/quant.js";elem.async =3D =
true;elem.type =3D "text/javascript";var scpt =3D =
document.getElementsByTagName('script')[0];scpt.parentNode.insertBefore(e=
lem, scpt);  })();=0A=
_qevents.push( wpcomQuantcastData );=0A=
</SCRIPT>
<NOSCRIPT>&lt;div style=3D"display: none;"&gt;&lt;img=20
src=3D"//pixel.quantserve.com/pixel/p-18-mFEk4J448M.gif?labels=3D%2Clangu=
age.es%2Ctype.wpcom%2Cas"=20
height=3D"1" width=3D"1" alt=3D"" /&gt;&lt;/div&gt;</NOSCRIPT>
<SCRIPT type=3D"text/javascript" =
src=3D"http://0.gravatar.com/js/gprofiles.js?ver=3D201316ac"></SCRIPT>

<SCRIPT type=3D"text/javascript">=0A=
/* <![CDATA[ */=0A=
var WPGroHo =3D {"my_hash":""};=0A=
/* ]]> */=0A=
</SCRIPT>

<SCRIPT type=3D"text/javascript" =
src=3D"http://s0.wp.com/wp-content/mu-plugins/gravatar-hovercards/wpgroho=
.js?m=3D1351637563g"></SCRIPT>

<SCRIPT>jQuery(document).ready(function($){ Gravatar.profile_cb =3D =
function( h, d ) { WPGroHo.syncProfileData( h, d );	}; Gravatar.my_hash =
=3D WPGroHo.my_hash; Gravatar.init( 'body', '#wp-admin-bar-my-account' =
); });</SCRIPT>
=09
<DIV style=3D"display: none;">
<DIV class=3D"grofile-hash-map-34d7ff83168ebf223357c0298b7d5e7b"></DIV>
<DIV class=3D"grofile-hash-map-169b0078e474b79681d23df571e71586"></DIV>
<DIV class=3D"grofile-hash-map-1b00c5591200fc85743b34dbdaf792b2"></DIV>
<DIV =
class=3D"grofile-hash-map-c9a97b1c0bde64dc2ef2b2c2cb128f48"></DIV></DIV>
<SCRIPT type=3D"text/javascript">=0A=
/* <![CDATA[ */=0A=
var HighlanderComments =3D {"loggingInText":"Logging =
In\u2026","submittingText":"Posting =
Comment\u2026","postCommentText":"Publicar =
comentario","connectingToText":"Connecting to =
%s","commentingAsText":"%1$s: Est\u00e1s comentando usando tu cuenta de =
%2$s.","logoutText":"Cerrar =
sesi\u00f3n","loginText":"Acceder","connectURL":"http:\/\/apirola.wordpre=
ss.com\/public.api\/connect\/?action=3Drequest","logoutURL":"http:\/\/api=
rola.wordpress.com\/wp-login.php?action=3Dlogout&_wpnonce=3D9e6528172b","=
homeURL":"http:\/\/apirola.wordpress.com\/","postID":"251","gravDefault":=
"identicon","enterACommentError":"Please enter a =
comment","enterEmailError":"Por favor introduce tu direcci\u00f3n de =
correo electr\u00f3nico aqu\u00ed","invalidEmailError":"Direcci\u00f3n =
de correo electr\u00f3nico inv\u00e1lida","enterAuthorError":"Please =
enter your name here","gravatarFromEmail":"Esta imagen se mostrar\u00e1 =
cuando dejes un comentario. Haz clic para =
cambiarla.","logInToExternalAccount":"Inicia sesi\u00f3n para usar los =
datos de una de estas =
cuentas.","change":"Cambiar","changeAccount":"Change =
Account","comment_registration":"","userIsLoggedIn":"","isJetpack":"0"};=0A=
/* ]]> */=0A=
</SCRIPT>

<SCRIPT type=3D"text/javascript" =
src=3D"http://s1.wp.com/wp-content/mu-plugins/highlander-comments/script.=
js?m=3D1364417154g"></SCRIPT>

<DIV id=3D"bit" class=3D"loggedout-follow-normal"><A class=3D"bsub" =
href=3D"javascript:void(0)"><SPAN=20
id=3D"bsub-text">Seguir</SPAN></A>
<DIV id=3D"bitsubscribe">
<H3><LABEL for=3D"loggedout-follow-field">Follow =E2=80=9CAlejandro =
Pirola=E2=80=9D</LABEL></H3>
<FORM id=3D"loggedout-follow" accept-charset=3D"utf-8" method=3D"post" =
action=3D"https://subscribe.wordpress.com">
<P>Recibe cada nueva publicaci=C3=B3n en tu buz=C3=B3n de correo =
electr=C3=B3nico.</P>
<P style=3D"display: none;" id=3D"loggedout-follow-error"></P>
<P><INPUT onblur=3D'this.value=3D(this.value=3D=3D"") ? "Enter email =
address" : this.value;'=20
style=3D"padding: 1px 2px; width: 95%;" id=3D"loggedout-follow-field" =
onfocus=3D'this.value=3D(this.value=3D=3D"Introduce tu direcci=C3=B3n de =
correo electr=C3=B3nico") ? "" : this.value;'=20
name=3D"email" value=3D"Introduce tu direcci=C3=B3n de correo =
electr=C3=B3nico"=20
type=3D"email"></P><INPUT name=3D"action" value=3D"subscribe" =
type=3D"hidden"><INPUT=20
name=3D"blog_id" value=3D"4535158" type=3D"hidden"><INPUT =
name=3D"source" =
value=3D"http://apirola.wordpress.com/2012/09/05/setup-jy-mcu-bt-board-v1=
-2/"=20
type=3D"hidden"><INPUT name=3D"sub-type" value=3D"loggedout-follow"=20
type=3D"hidden"><INPUT id=3D"_wpnonce" name=3D"_wpnonce" =
value=3D"88702327a6" type=3D"hidden"><INPUT=20
name=3D"_wp_http_referer" =
value=3D"/2012/09/05/setup-jy-mcu-bt-board-v1-2/" type=3D"hidden">
<P=20
id=3D"bsub-subscribe-button"><INPUT value=3D"Sign me up" =
type=3D"submit"></P></FORM>
<DIV id=3D"bsub-credit"><A =
href=3D"http://wordpress.com/signup/?ref=3Dlof">Ofrecido=20
por=20
WordPress.com</A></DIV></DIV><!-- #bitsubscribe --></DIV><!-- #bit =
--><IFRAME=20
style=3D"display: none;" id=3D"likes-master" =
src=3D"http://ib.adnxs.com/tt?id=3D627923&amp;pext=3Dwp-4535158&amp;ploc=3D=
http%3A%2F%2Fapirola.wordpress.com%2F2012%2F09%2F05%2Fsetup-jy-mcu-bt-boa=
rd-v1-2%2F&amp;pref=3D"=20
name=3D"likes-master"></IFRAME>
<DIV id=3D"likes-other-gravatars">
<DIV class=3D"likes-text"><SPAN>%d</SPAN> bloggers like this:</DIV>
<UL class=3D"wpl-avatars sd-like-gravatars"></UL></DIV>
<SCRIPT type=3D"text/javascript">=0A=
		//<![CDATA[=0A=
			var jetpackLikesWidgetQueue =3D [];=0A=
			var jetpackLikesMasterReady =3D false;=0A=
=0A=
			function JetpackLikespostMessage( message, target ) {=0A=
				if ( "string" =3D=3D=3D typeof message ){=0A=
					try{=0A=
						message =3D JSON.parse( message );=0A=
					}=0A=
					catch(e) {=0A=
						return;=0A=
					}=0A=
				}=0A=
=0A=
				pm( {=0A=
					target: target,=0A=
					type: 'likesMessage',=0A=
					data: message,=0A=
					origin: '*'					=0A=
				} );=0A=
			}=0A=
=0A=
			function JetpackLikesMessageListener( event ) {=0A=
				if ( "undefined" =3D=3D typeof event.event )=0A=
					return;=0A=
=0A=
				if ( 'masterReady' =3D=3D event.event ) {=0A=
					jQuery( document ).ready( function() {=0A=
						jetpackLikesMasterReady =3D true;=0A=
=0A=
						var stylesData =3D {=0A=
								event: 'injectStyles'=0A=
						};=0A=
=0A=
						if ( jQuery( 'iframe.admin-bar-likes-widget' ).length > 0 ) {=0A=
							JetpackLikespostMessage( { event: 'adminBarEnabled' }, =
window.frames[ 'likes-master' ] );=0A=
=0A=
							stylesData.adminBarStyles =3D {=0A=
								background: jQuery( '#wpadminbar .quicklinks =
li#wp-admin-bar-wpl-like > a' ).css( 'background' )=0A=
							};=0A=
						}=0A=
=0A=
						if ( !window.addEventListener )=0A=
							jQuery( '#wp-admin-bar-admin-bar-likes-widget' ).hide();=0A=
=0A=
						stylesData.textStyles =3D {=0A=
							color: jQuery( '.sd-text-color').css( 'color' ),=0A=
							fontFamily: jQuery( '.sd-text-color' ).css( 'font-family' ),=0A=
							fontSize: jQuery( '.sd-text-color' ).css( 'font-size' ),=0A=
							direction: jQuery( '.sd-text-color' ).css( 'direction' ),=0A=
							fontWeight: jQuery( '.sd-text-color' ).css( 'font-weight' ),=0A=
							fontStyle: jQuery( '.sd-text-color' ).css( 'font-style' ),=0A=
							textDecoration: jQuery( '.sd-text-color' ).css('text-decoration')=0A=
						};=0A=
=0A=
						stylesData.linkStyles =3D {=0A=
							color: jQuery( '.sd-link-color' ).css('color'),=0A=
							fontFamily: jQuery( '.sd-link-color' ).css('font-family'),=0A=
							fontSize: jQuery( '.sd-link-color' ).css('font-size'),=0A=
							textDecoration: jQuery( '.sd-link-color' ).css('text-decoration'),=0A=
							fontWeight: jQuery( '.sd-link-color' ).css( 'font-weight' ),=0A=
							fontStyle: jQuery( '.sd-link-color' ).css( 'font-style' )=0A=
						};=0A=
=0A=
						JetpackLikespostMessage( stylesData, window.frames[ 'likes-master' =
] );=0A=
=0A=
						var requests =3D [];=0A=
						jQuery( '.jetpack-likes-widget-wrapper' ).each( function( i ) {=0A=
							var regex =3D /like-(post|comment)-wrapper-(\d+)-(\d+)-(\w+)/;=0A=
							var match =3D regex.exec( this.id );=0A=
							if ( ! match || match.length !=3D 5 )=0A=
								return;=0A=
=0A=
							var info =3D {=0A=
								blog_id: match[2],=0A=
								width:   this.width=0A=
							};=0A=
=0A=
							if ( 'post' =3D=3D match[1] ) {=0A=
								info.post_id =3D match[3];=0A=
							} else if ( 'comment' =3D=3D match[1] ) {=0A=
								info.comment_id =3D match[3];=0A=
							}=0A=
=0A=
							info.obj_id =3D match[4];=0A=
=0A=
							requests.push( info );=0A=
						});=0A=
=0A=
						JetpackLikespostMessage( { event: 'initialBatch', requests: =
requests }, window.frames['likes-master'] );=0A=
=0A=
						jQuery( document ).on( 'inview', =
'div.jetpack-likes-widget-unloaded', function() {=0A=
							jetpackLikesWidgetQueue.push( this.id );=0A=
						});=0A=
					});=0A=
				}=0A=
=0A=
				if ( 'showLikeWidget' =3D=3D event.event ) {=0A=
					setTimeout( JetpackLikesWidgetQueueHandler, 10 );=0A=
					jQuery( '#' + event.id + ' .post-likes-widget-placeholder'  =
).fadeOut( 'fast', function() {=0A=
						jQuery( '#' + event.id + ' .post-likes-widget' ).fadeIn( 'fast', =
function() {=0A=
							JetpackLikespostMessage( { event: 'likeWidgetDisplayed', blog_id: =
event.blog_id, post_id: event.post_id, obj_id: event.obj_id }, =
window.frames['likes-master'] );=0A=
						});=0A=
					});=0A=
				}=0A=
=0A=
				if ( 'showOtherGravatars' =3D=3D event.event ) {=0A=
					var $container =3D jQuery( '#likes-other-gravatars' );=0A=
					var $list =3D $container.find( 'ul' );=0A=
=0A=
					$container.hide();=0A=
					$list.html( '' );=0A=
=0A=
					$container.find( '.likes-text span' ).text( event.total );=0A=
=0A=
					jQuery.each( event.likers, function( i, liker ) {=0A=
						$list.append( '<li class=3D"' + liker.css_class + '"><a href=3D"' =
+ liker.profile_URL + '" class=3D"wpl-liker" rel=3D"nofollow" =
target=3D"_parent"><img src=3D"' + liker.avatar_URL + '" alt=3D"' + =
liker.name + '" width=3D"30" height=3D"30" style=3D"padding-right: 3px;" =
/></a></li>');=0A=
					} );=0A=
=0A=
					var offset =3D jQuery( "[name=3D'" + event.parent + "']" ).offset();=0A=
=0A=
					$container.css( 'left', offset.left + event.position.left - 10 + =
'px' );=0A=
					$container.css( 'top', offset.top + event.position.top - 33 + 'px' =
);=0A=
=0A=
					var rowLength =3D Math.floor( event.width / 37 );=0A=
					var height =3D ( Math.ceil( event.likers.length / rowLength ) * 37 =
) + 13;=0A=
					if ( height > 204 ) {=0A=
						height =3D 204;=0A=
					}=0A=
=0A=
					$container.css( 'height', height + 'px' );=0A=
					$container.css( 'width', rowLength * 37 - 7 + 'px' );=0A=
=0A=
					$list.css( 'width', rowLength * 37 + 'px' );=0A=
=0A=
					$container.fadeIn( 'slow' );=0A=
=0A=
					var scrollbarWidth =3D $list[0].offsetWidth - $list[0].clientWidth;=0A=
					if ( scrollbarWidth > 0 ) {=0A=
						$container.width( $container.width() + scrollbarWidth );=0A=
						$list.width( $list.width() + scrollbarWidth );=0A=
					}=0A=
				}=0A=
			}=0A=
=0A=
			pm.bind( 'likesMessage', function(e) { =
JetpackLikesMessageListener(e); } );=0A=
=0A=
			jQuery( document ).click( function( e ) {=0A=
				var $container =3D jQuery( '#likes-other-gravatars' );=0A=
=0A=
				if ( $container.has( e.target ).length =3D=3D=3D 0 ) {=0A=
					$container.fadeOut( 'slow' );=0A=
				}=0A=
			});=0A=
=0A=
			function JetpackLikesWidgetQueueHandler() {=0A=
				var wrapperID;=0A=
				if ( ! jetpackLikesMasterReady ) {=0A=
					setTimeout( JetpackLikesWidgetQueueHandler, 500 );=0A=
					return;=0A=
				}=0A=
=0A=
				if ( jetpackLikesWidgetQueue.length > 0 ) {=0A=
					// We may have a widget that needs creating now=0A=
					var found =3D false;=0A=
					while( jetpackLikesWidgetQueue.length > 0 ) {=0A=
						// Grab the first member of the queue that isn't already loading.=0A=
						wrapperID =3D jetpackLikesWidgetQueue.splice( 0, 1 )[0];=0A=
						if ( jQuery( '#' + wrapperID ).hasClass( =
'jetpack-likes-widget-unloaded' ) ) {=0A=
							found =3D true;=0A=
							break;=0A=
						}=0A=
					}=0A=
					if ( ! found ) {=0A=
						setTimeout( JetpackLikesWidgetQueueHandler, 500 );=0A=
						return;=0A=
					}=0A=
				} else if ( jQuery( 'div.jetpack-likes-widget-unloaded' ).length > 0 =
) {=0A=
					// Get the next unloaded widget=0A=
					wrapperID =3D jQuery( 'div.jetpack-likes-widget-unloaded' =
).first()[0].id;=0A=
					if ( ! wrapperID ) {=0A=
						// Everything is currently loaded=0A=
						setTimeout( JetpackLikesWidgetQueueHandler, 500 );=0A=
						return;=0A=
					}=0A=
				}=0A=
=0A=
				var $wrapper =3D jQuery( '#' + wrapperID );=0A=
				$wrapper.find( 'iframe' ).remove();=0A=
=0A=
				if ( $wrapper.hasClass( 'slim-likes-widget' ) ) {=0A=
					$wrapper.find( '.post-likes-widget-placeholder' ).after( "<iframe =
class=3D'post-likes-widget jetpack-likes-widget' name=3D'" + =
$wrapper.data( 'name' ) + "' height=3D'22px' width=3D'68px' =
frameBorder=3D'0' scrolling=3D'no' src=3D'" + $wrapper.data( 'src' ) + =
"'></iframe>" );=0A=
				} else {=0A=
					$wrapper.find( '.post-likes-widget-placeholder' ).after( "<iframe =
class=3D'post-likes-widget jetpack-likes-widget' name=3D'" + =
$wrapper.data( 'name' ) + "' height=3D'55px' width=3D'100%' =
frameBorder=3D'0' src=3D'" + $wrapper.data( 'src' ) + "'></iframe>" );=0A=
				}=0A=
=0A=
				$wrapper.removeClass( 'jetpack-likes-widget-unloaded' ).addClass( =
'jetpack-likes-widget-loading' );=0A=
=0A=
				$wrapper.find( 'iframe' ).load( function( e ) {=0A=
					var $iframe =3D jQuery( e.target );=0A=
					$wrapper.removeClass( 'jetpack-likes-widget-loading' ).addClass( =
'jetpack-likes-widget-loaded' );=0A=
=0A=
					JetpackLikespostMessage( { event: 'loadLikeWidget', name: =
$iframe.attr( 'name' ), width: $iframe.width() }, window.frames[ =
'likes-master' ] );=0A=
=0A=
					if ( $wrapper.hasClass( 'slim-likes-widget' ) ) {=0A=
						$wrapper.find( 'iframe' ).Jetpack( 'resizeable' );=0A=
					}=0A=
				});=0A=
			}=0A=
			setInterval( JetpackLikesWidgetQueueHandler, 250 );=0A=
		//]]>=0A=
		</SCRIPT>

<SCRIPT type=3D"text/javascript" =
src=3D"http://s0.wp.com/wp-content/js/devicepx.js?m=3D1354656609g"></SCRI=
PT>

<SCRIPT type=3D"text/javascript">=0A=
// <![CDATA[=0A=
(function() {=0A=
try{=0A=
  if ( window.external &&'msIsSiteMode' in window.external) {=0A=
    if (window.external.msIsSiteMode()) {=0A=
      var jl =3D document.createElement('script');=0A=
      jl.type=3D'text/javascript';=0A=
      jl.async=3Dtrue;=0A=
      jl.src=3D'/wp-content/plugins/ie-sitemode/custom-jumplist.php';=0A=
      var s =3D document.getElementsByTagName('script')[0];=0A=
      s.parentNode.insertBefore(jl, s);=0A=
    }=0A=
  }=0A=
}catch(e){}=0A=
})();=0A=
// ]]>=0A=
</SCRIPT>

<SCRIPT type=3D"text/javascript" =
src=3D"http://s.stats.wordpress.com/w.js?21"></SCRIPT>

<SCRIPT type=3D"text/javascript">=0A=
st_go({'blog':'4535158','v':'wpcom','tz':'0','user_id':'0','post':'251','=
subd':'apirola'});=0A=
ex_go({'crypt':'UE5XaGUuOTlwaD85flAmcm1mcmZsaDhkV11YdWFnNncxc1tjZG9XVXhRV=
z1bVXJlWWRQcV1qUD9hPTZ3SVpQVDNxblNxU19hNGFmYlNpQlgvL2pQRXxRWDk0Y0JtYWs2Ky=
xCfGpGNzIwd01MU0RrUzB3aWhFbGpkT0NxT2F0RlkyYS9LfnNTUHhwNDdYalYzNTJTQWNxK1F=
fJV8wRjklRmxZLl1lJjAwSnFsLVZiP3JkQXklXzlORjlxdmNubjNta1dSZU89MEM4eDR8aj1K=
ci1VfmZXd0RtT1l+fH5pSjA5TGFudUxoZ35HcGtub3ovUkt2LWhtWl9VX2RqX2Y3d3FvM2VtW=
mlnUEJKVEtXNW55L3ZuNXVBQy1XbUQ0RVlDYUluN2s5NnIvX0ZxOUdT'});=0A=
addLoadEvent(function(){linktracker_init('4535158',251);});=0A=
	</SCRIPT>
<NOSCRIPT>&lt;img src=3D"http://stats.wordpress.com/b.gif?v=3Dnoscript"=20
style=3D"height:0px;width:0px;overflow:hidden" alt=3D""=20
/&gt;</NOSCRIPT></BODY></HTML>

------=_NextPart_001_002D_01CE3A81.CAB11C40
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://ib.adnxs.com/tt?id=627923&pext=wp-4535158&ploc=http%3A%2F%2Fapirola.wordpress.com%2F2012%2F09%2F05%2Fsetup-jy-mcu-bt-board-v1-2%2F&pref=

=EF=BB=BF<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD>
<META content=3D"text/html; charset=3Dutf-8" http-equiv=3DContent-Type>
<STYLE>BODY {
	MARGIN: 0px
}
</STYLE>

<META name=3DGENERATOR content=3D"MSHTML 9.00.8112.16476"></HEAD>
<BODY>
<DIV id=3Dad_unit_container></DIV>
<SCRIPT>
      var insertStrIframe =3D function() {
        var srcUrl =3D =
"//content.sharethrough.com/ad_units/17336.html?ad_server_click=3Dhttp://=
lax1.ib.adnxs.com/click?ObNdoQ_GFUA5s12hD8YVQN0kBoGVIzRAObNdoQ_GFUA5s12hD=
8YVQCR827Aq4w0ohJoy-2cYoyAyd21RAAAAANOUCQBNAQAATQEAAAIAAAAsalwA5V4CAAAAAQ=
BVU0QAVVNEAJABCwEpfQAA-WwAAQMCAQIAAAAANSBkVwAAAAA./cnd=3D%21-wWRMwiimE4Qr=
NTxAhjlvQkgBA../clickenc=3D&placement_url=3D" + =
encodeURIComponent(document.location.href);
        var iframeTag =3D '<iframe src=3D"' + srcUrl + '" =
FRAMEBORDER=3D"0" SCROLLING=3D"no" MARGINHEIGHT=3D"0" MARGINWIDTH=3D"0" =
TOPMARGIN=3D"0" LEFTMARGIN=3D"0" ALLOWTRANSPARENCY=3D"true" =
WIDTH=3D"400px" HEIGHT=3D"267px"> </iframe>';
        document.getElementById('ad_unit_container').innerHTML =3D =
iframeTag;
        =
window.parent.postMessage('{"adUnitKey":"d6e0bb24","placementKey":"12b0c1=
22"}', '*');
      };
      window.onload =3D insertStrIframe;
    </SCRIPT>

<SCRIPT type=3Dtext/javascript>
__ADXPOSE_PREFS__ =3D {
	uid: "GMdH6Kvc4PdWVJPk_6056492",
	cid: encodeURIComponent("1281058"),
	vchannel: encodeURIComponent("0"),
	pageurl: "",
	publisher: "",
	version: 2,
	override: true
}
</SCRIPT>

<SCRIPT type=3Dtext/javascript>
document.write('<scr'+'ipt =
src=3D"http://ads.adxpose.com/ads/ads.js?uid=3D'+encodeURIComponent('GMdH=
6Kvc4PdWVJPk_6056492')+'" type=3D"text/javascript" =
charset=3D"utf-8"></scr'+'ipt>')
</SCRIPT>

<SCRIPT type=3Dtext/javascript charset=3Dutf-8=20
src=3D"http://servedby.adxpose.com/adxpose/find_ad.js"></SCRIPT>
<IMG style=3D"DISPLAY: none"=20
src=3D"http://tap.rubiconproject.com/oz/feeds/appnexus/tokens?token=3D235=
1750265292626564&amp;expires=3D30"=20
width=3D1 height=3D1></BODY></HTML>

------=_NextPart_001_002D_01CE3A81.CAB11C40--

------=_NextPart_000_0000_01CE3A81.CA9C5BC0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://s1.wp.com/_static/??-eJyFj+EKwjAMhF/Irorb/CU+y+xiSW2buqQr8+mtoD/EoRDIwX25I7okhdH4PAJrV+eWYVpeq3G80b8AFdBOg8AbNBQFojy5RCwBmAe75n7WYJwRyl/MgaTBXNUEjPev1LMnq5LPFiPrqi2MlEVdyHsquuBoQdYeMhRCva+pyS9NwFihUzju9n3Xt9uuPbgHb95tEg==

/*!=0A=
 * jQuery JavaScript Library v1.9.1=0A=
 * http://jquery.com/=0A=
 *=0A=
 * Includes Sizzle.js=0A=
 * http://sizzlejs.com/=0A=
 *=0A=
 * Copyright 2005, 2012 jQuery Foundation, Inc. and other contributors=0A=
 * Released under the MIT license=0A=
 * http://jquery.org/license=0A=
 *=0A=
 * Date: 2013-2-4=0A=
 */=0A=
(function( window, undefined ) {=0A=
=0A=
// Can't do this because several apps including ASP.NET trace=0A=
// the stack via arguments.caller.callee and Firefox dies if=0A=
// you try to trace through "use strict" call chains. (#13335)=0A=
// Support: Firefox 18+=0A=
//"use strict";=0A=
var=0A=
	// The deferred used on DOM ready=0A=
	readyList,=0A=
=0A=
	// A central reference to the root jQuery(document)=0A=
	rootjQuery,=0A=
=0A=
	// Support: IE<9=0A=
	// For `typeof node.method` instead of `node.method !=3D=3D undefined`=0A=
	core_strundefined =3D typeof undefined,=0A=
=0A=
	// Use the correct document accordingly with window argument (sandbox)=0A=
	document =3D window.document,=0A=
	location =3D window.location,=0A=
=0A=
	// Map over jQuery in case of overwrite=0A=
	_jQuery =3D window.jQuery,=0A=
=0A=
	// Map over the $ in case of overwrite=0A=
	_$ =3D window.$,=0A=
=0A=
	// [[Class]] -> type pairs=0A=
	class2type =3D {},=0A=
=0A=
	// List of deleted data cache ids, so we can reuse them=0A=
	core_deletedIds =3D [],=0A=
=0A=
	core_version =3D "1.9.1",=0A=
=0A=
	// Save a reference to some core methods=0A=
	core_concat =3D core_deletedIds.concat,=0A=
	core_push =3D core_deletedIds.push,=0A=
	core_slice =3D core_deletedIds.slice,=0A=
	core_indexOf =3D core_deletedIds.indexOf,=0A=
	core_toString =3D class2type.toString,=0A=
	core_hasOwn =3D class2type.hasOwnProperty,=0A=
	core_trim =3D core_version.trim,=0A=
=0A=
	// Define a local copy of jQuery=0A=
	jQuery =3D function( selector, context ) {=0A=
		// The jQuery object is actually just the init constructor 'enhanced'=0A=
		return new jQuery.fn.init( selector, context, rootjQuery );=0A=
	},=0A=
=0A=
	// Used for matching numbers=0A=
	core_pnum =3D /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,=0A=
=0A=
	// Used for splitting on whitespace=0A=
	core_rnotwhite =3D /\S+/g,=0A=
=0A=
	// Make sure we trim BOM and NBSP (here's looking at you, Safari 5.0 =
and IE)=0A=
	rtrim =3D /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,=0A=
=0A=
	// A simple way to check for HTML strings=0A=
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)=0A=
	// Strict HTML recognition (#11290: must start with <)=0A=
	rquickExpr =3D /^(?:(<[\w\W]+>)[^>]*|#([\w-]*))$/,=0A=
=0A=
	// Match a standalone tag=0A=
	rsingleTag =3D /^<(\w+)\s*\/?>(?:<\/\1>|)$/,=0A=
=0A=
	// JSON RegExp=0A=
	rvalidchars =3D /^[\],:{}\s]*$/,=0A=
	rvalidbraces =3D /(?:^|:|,)(?:\s*\[)+/g,=0A=
	rvalidescape =3D /\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,=0A=
	rvalidtokens =3D =
/"[^"\\\r\n]*"|true|false|null|-?(?:\d+\.|)\d+(?:[eE][+-]?\d+|)/g,=0A=
=0A=
	// Matches dashed string for camelizing=0A=
	rmsPrefix =3D /^-ms-/,=0A=
	rdashAlpha =3D /-([\da-z])/gi,=0A=
=0A=
	// Used by jQuery.camelCase as callback to replace()=0A=
	fcamelCase =3D function( all, letter ) {=0A=
		return letter.toUpperCase();=0A=
	},=0A=
=0A=
	// The ready event handler=0A=
	completed =3D function( event ) {=0A=
=0A=
		// readyState =3D=3D=3D "complete" is good enough for us to call the =
dom ready in oldIE=0A=
		if ( document.addEventListener || event.type =3D=3D=3D "load" || =
document.readyState =3D=3D=3D "complete" ) {=0A=
			detach();=0A=
			jQuery.ready();=0A=
		}=0A=
	},=0A=
	// Clean-up method for dom ready events=0A=
	detach =3D function() {=0A=
		if ( document.addEventListener ) {=0A=
			document.removeEventListener( "DOMContentLoaded", completed, false );=0A=
			window.removeEventListener( "load", completed, false );=0A=
=0A=
		} else {=0A=
			document.detachEvent( "onreadystatechange", completed );=0A=
			window.detachEvent( "onload", completed );=0A=
		}=0A=
	};=0A=
=0A=
jQuery.fn =3D jQuery.prototype =3D {=0A=
	// The current version of jQuery being used=0A=
	jquery: core_version,=0A=
=0A=
	constructor: jQuery,=0A=
	init: function( selector, context, rootjQuery ) {=0A=
		var match, elem;=0A=
=0A=
		// HANDLE: $(""), $(null), $(undefined), $(false)=0A=
		if ( !selector ) {=0A=
			return this;=0A=
		}=0A=
=0A=
		// Handle HTML strings=0A=
		if ( typeof selector =3D=3D=3D "string" ) {=0A=
			if ( selector.charAt(0) =3D=3D=3D "<" && selector.charAt( =
selector.length - 1 ) =3D=3D=3D ">" && selector.length >=3D 3 ) {=0A=
				// Assume that strings that start and end with <> are HTML and skip =
the regex check=0A=
				match =3D [ null, selector, null ];=0A=
=0A=
			} else {=0A=
				match =3D rquickExpr.exec( selector );=0A=
			}=0A=
=0A=
			// Match html or make sure no context is specified for #id=0A=
			if ( match && (match[1] || !context) ) {=0A=
=0A=
				// HANDLE: $(html) -> $(array)=0A=
				if ( match[1] ) {=0A=
					context =3D context instanceof jQuery ? context[0] : context;=0A=
=0A=
					// scripts is true for back-compat=0A=
					jQuery.merge( this, jQuery.parseHTML(=0A=
						match[1],=0A=
						context && context.nodeType ? context.ownerDocument || context : =
document,=0A=
						true=0A=
					) );=0A=
=0A=
					// HANDLE: $(html, props)=0A=
					if ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) =
) {=0A=
						for ( match in context ) {=0A=
							// Properties of context are called as methods if possible=0A=
							if ( jQuery.isFunction( this[ match ] ) ) {=0A=
								this[ match ]( context[ match ] );=0A=
=0A=
							// ...and otherwise set as attributes=0A=
							} else {=0A=
								this.attr( match, context[ match ] );=0A=
							}=0A=
						}=0A=
					}=0A=
=0A=
					return this;=0A=
=0A=
				// HANDLE: $(#id)=0A=
				} else {=0A=
					elem =3D document.getElementById( match[2] );=0A=
=0A=
					// Check parentNode to catch when Blackberry 4.6 returns=0A=
					// nodes that are no longer in the document #6963=0A=
					if ( elem && elem.parentNode ) {=0A=
						// Handle the case where IE and Opera return items=0A=
						// by name instead of ID=0A=
						if ( elem.id !=3D=3D match[2] ) {=0A=
							return rootjQuery.find( selector );=0A=
						}=0A=
=0A=
						// Otherwise, we inject the element directly into the jQuery object=0A=
						this.length =3D 1;=0A=
						this[0] =3D elem;=0A=
					}=0A=
=0A=
					this.context =3D document;=0A=
					this.selector =3D selector;=0A=
					return this;=0A=
				}=0A=
=0A=
			// HANDLE: $(expr, $(...))=0A=
			} else if ( !context || context.jquery ) {=0A=
				return ( context || rootjQuery ).find( selector );=0A=
=0A=
			// HANDLE: $(expr, context)=0A=
			// (which is just equivalent to: $(context).find(expr)=0A=
			} else {=0A=
				return this.constructor( context ).find( selector );=0A=
			}=0A=
=0A=
		// HANDLE: $(DOMElement)=0A=
		} else if ( selector.nodeType ) {=0A=
			this.context =3D this[0] =3D selector;=0A=
			this.length =3D 1;=0A=
			return this;=0A=
=0A=
		// HANDLE: $(function)=0A=
		// Shortcut for document ready=0A=
		} else if ( jQuery.isFunction( selector ) ) {=0A=
			return rootjQuery.ready( selector );=0A=
		}=0A=
=0A=
		if ( selector.selector !=3D=3D undefined ) {=0A=
			this.selector =3D selector.selector;=0A=
			this.context =3D selector.context;=0A=
		}=0A=
=0A=
		return jQuery.makeArray( selector, this );=0A=
	},=0A=
=0A=
	// Start with an empty selector=0A=
	selector: "",=0A=
=0A=
	// The default length of a jQuery object is 0=0A=
	length: 0,=0A=
=0A=
	// The number of elements contained in the matched element set=0A=
	size: function() {=0A=
		return this.length;=0A=
	},=0A=
=0A=
	toArray: function() {=0A=
		return core_slice.call( this );=0A=
	},=0A=
=0A=
	// Get the Nth element in the matched element set OR=0A=
	// Get the whole matched element set as a clean array=0A=
	get: function( num ) {=0A=
		return num =3D=3D null ?=0A=
=0A=
			// Return a 'clean' array=0A=
			this.toArray() :=0A=
=0A=
			// Return just the object=0A=
			( num < 0 ? this[ this.length + num ] : this[ num ] );=0A=
	},=0A=
=0A=
	// Take an array of elements and push it onto the stack=0A=
	// (returning the new matched element set)=0A=
	pushStack: function( elems ) {=0A=
=0A=
		// Build a new jQuery matched element set=0A=
		var ret =3D jQuery.merge( this.constructor(), elems );=0A=
=0A=
		// Add the old object onto the stack (as a reference)=0A=
		ret.prevObject =3D this;=0A=
		ret.context =3D this.context;=0A=
=0A=
		// Return the newly-formed element set=0A=
		return ret;=0A=
	},=0A=
=0A=
	// Execute a callback for every element in the matched set.=0A=
	// (You can seed the arguments with an array of args, but this is=0A=
	// only used internally.)=0A=
	each: function( callback, args ) {=0A=
		return jQuery.each( this, callback, args );=0A=
	},=0A=
=0A=
	ready: function( fn ) {=0A=
		// Add the callback=0A=
		jQuery.ready.promise().done( fn );=0A=
=0A=
		return this;=0A=
	},=0A=
=0A=
	slice: function() {=0A=
		return this.pushStack( core_slice.apply( this, arguments ) );=0A=
	},=0A=
=0A=
	first: function() {=0A=
		return this.eq( 0 );=0A=
	},=0A=
=0A=
	last: function() {=0A=
		return this.eq( -1 );=0A=
	},=0A=
=0A=
	eq: function( i ) {=0A=
		var len =3D this.length,=0A=
			j =3D +i + ( i < 0 ? len : 0 );=0A=
		return this.pushStack( j >=3D 0 && j < len ? [ this[j] ] : [] );=0A=
	},=0A=
=0A=
	map: function( callback ) {=0A=
		return this.pushStack( jQuery.map(this, function( elem, i ) {=0A=
			return callback.call( elem, i, elem );=0A=
		}));=0A=
	},=0A=
=0A=
	end: function() {=0A=
		return this.prevObject || this.constructor(null);=0A=
	},=0A=
=0A=
	// For internal use only.=0A=
	// Behaves like an Array's method, not like a jQuery method.=0A=
	push: core_push,=0A=
	sort: [].sort,=0A=
	splice: [].splice=0A=
};=0A=
=0A=
// Give the init function the jQuery prototype for later instantiation=0A=
jQuery.fn.init.prototype =3D jQuery.fn;=0A=
=0A=
jQuery.extend =3D jQuery.fn.extend =3D function() {=0A=
	var src, copyIsArray, copy, name, options, clone,=0A=
		target =3D arguments[0] || {},=0A=
		i =3D 1,=0A=
		length =3D arguments.length,=0A=
		deep =3D false;=0A=
=0A=
	// Handle a deep copy situation=0A=
	if ( typeof target =3D=3D=3D "boolean" ) {=0A=
		deep =3D target;=0A=
		target =3D arguments[1] || {};=0A=
		// skip the boolean and the target=0A=
		i =3D 2;=0A=
	}=0A=
=0A=
	// Handle case when target is a string or something (possible in deep =
copy)=0A=
	if ( typeof target !=3D=3D "object" && !jQuery.isFunction(target) ) {=0A=
		target =3D {};=0A=
	}=0A=
=0A=
	// extend jQuery itself if only one argument is passed=0A=
	if ( length =3D=3D=3D i ) {=0A=
		target =3D this;=0A=
		--i;=0A=
	}=0A=
=0A=
	for ( ; i < length; i++ ) {=0A=
		// Only deal with non-null/undefined values=0A=
		if ( (options =3D arguments[ i ]) !=3D null ) {=0A=
			// Extend the base object=0A=
			for ( name in options ) {=0A=
				src =3D target[ name ];=0A=
				copy =3D options[ name ];=0A=
=0A=
				// Prevent never-ending loop=0A=
				if ( target =3D=3D=3D copy ) {=0A=
					continue;=0A=
				}=0A=
=0A=
				// Recurse if we're merging plain objects or arrays=0A=
				if ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray =
=3D jQuery.isArray(copy)) ) ) {=0A=
					if ( copyIsArray ) {=0A=
						copyIsArray =3D false;=0A=
						clone =3D src && jQuery.isArray(src) ? src : [];=0A=
=0A=
					} else {=0A=
						clone =3D src && jQuery.isPlainObject(src) ? src : {};=0A=
					}=0A=
=0A=
					// Never move original objects, clone them=0A=
					target[ name ] =3D jQuery.extend( deep, clone, copy );=0A=
=0A=
				// Don't bring in undefined values=0A=
				} else if ( copy !=3D=3D undefined ) {=0A=
					target[ name ] =3D copy;=0A=
				}=0A=
			}=0A=
		}=0A=
	}=0A=
=0A=
	// Return the modified object=0A=
	return target;=0A=
};=0A=
=0A=
jQuery.extend({=0A=
	noConflict: function( deep ) {=0A=
		if ( window.$ =3D=3D=3D jQuery ) {=0A=
			window.$ =3D _$;=0A=
		}=0A=
=0A=
		if ( deep && window.jQuery =3D=3D=3D jQuery ) {=0A=
			window.jQuery =3D _jQuery;=0A=
		}=0A=
=0A=
		return jQuery;=0A=
	},=0A=
=0A=
	// Is the DOM ready to be used? Set to true once it occurs.=0A=
	isReady: false,=0A=
=0A=
	// A counter to track how many items to wait for before=0A=
	// the ready event fires. See #6781=0A=
	readyWait: 1,=0A=
=0A=
	// Hold (or release) the ready event=0A=
	holdReady: function( hold ) {=0A=
		if ( hold ) {=0A=
			jQuery.readyWait++;=0A=
		} else {=0A=
			jQuery.ready( true );=0A=
		}=0A=
	},=0A=
=0A=
	// Handle when the DOM is ready=0A=
	ready: function( wait ) {=0A=
=0A=
		// Abort if there are pending holds or we're already ready=0A=
		if ( wait =3D=3D=3D true ? --jQuery.readyWait : jQuery.isReady ) {=0A=
			return;=0A=
		}=0A=
=0A=
		// Make sure body exists, at least, in case IE gets a little =
overzealous (ticket #5443).=0A=
		if ( !document.body ) {=0A=
			return setTimeout( jQuery.ready );=0A=
		}=0A=
=0A=
		// Remember that the DOM is ready=0A=
		jQuery.isReady =3D true;=0A=
=0A=
		// If a normal DOM Ready event fired, decrement, and wait if need be=0A=
		if ( wait !=3D=3D true && --jQuery.readyWait > 0 ) {=0A=
			return;=0A=
		}=0A=
=0A=
		// If there are functions bound, to execute=0A=
		readyList.resolveWith( document, [ jQuery ] );=0A=
=0A=
		// Trigger any bound ready events=0A=
		if ( jQuery.fn.trigger ) {=0A=
			jQuery( document ).trigger("ready").off("ready");=0A=
		}=0A=
	},=0A=
=0A=
	// See test/unit/core.js for details concerning isFunction.=0A=
	// Since version 1.3, DOM methods and functions like alert=0A=
	// aren't supported. They return false on IE (#2968).=0A=
	isFunction: function( obj ) {=0A=
		return jQuery.type(obj) =3D=3D=3D "function";=0A=
	},=0A=
=0A=
	isArray: Array.isArray || function( obj ) {=0A=
		return jQuery.type(obj) =3D=3D=3D "array";=0A=
	},=0A=
=0A=
	isWindow: function( obj ) {=0A=
		return obj !=3D null && obj =3D=3D obj.window;=0A=
	},=0A=
=0A=
	isNumeric: function( obj ) {=0A=
		return !isNaN( parseFloat(obj) ) && isFinite( obj );=0A=
	},=0A=
=0A=
	type: function( obj ) {=0A=
		if ( obj =3D=3D null ) {=0A=
			return String( obj );=0A=
		}=0A=
		return typeof obj =3D=3D=3D "object" || typeof obj =3D=3D=3D =
"function" ?=0A=
			class2type[ core_toString.call(obj) ] || "object" :=0A=
			typeof obj;=0A=
	},=0A=
=0A=
	isPlainObject: function( obj ) {=0A=
		// Must be an Object.=0A=
		// Because of IE, we also have to check the presence of the =
constructor property.=0A=
		// Make sure that DOM nodes and window objects don't pass through, as =
well=0A=
		if ( !obj || jQuery.type(obj) !=3D=3D "object" || obj.nodeType || =
jQuery.isWindow( obj ) ) {=0A=
			return false;=0A=
		}=0A=
=0A=
		try {=0A=
			// Not own constructor property must be Object=0A=
			if ( obj.constructor &&=0A=
				!core_hasOwn.call(obj, "constructor") &&=0A=
				!core_hasOwn.call(obj.constructor.prototype, "isPrototypeOf") ) {=0A=
				return false;=0A=
			}=0A=
		} catch ( e ) {=0A=
			// IE8,9 Will throw exceptions on certain host objects #9897=0A=
			return false;=0A=
		}=0A=
=0A=
		// Own properties are enumerated firstly, so to speed up,=0A=
		// if last one is own, then all properties are own.=0A=
=0A=
		var key;=0A=
		for ( key in obj ) {}=0A=
=0A=
		return key =3D=3D=3D undefined || core_hasOwn.call( obj, key );=0A=
	},=0A=
=0A=
	isEmptyObject: function( obj ) {=0A=
		var name;=0A=
		for ( name in obj ) {=0A=
			return false;=0A=
		}=0A=
		return true;=0A=
	},=0A=
=0A=
	error: function( msg ) {=0A=
		throw new Error( msg );=0A=
	},=0A=
=0A=
	// data: string of html=0A=
	// context (optional): If specified, the fragment will be created in =
this context, defaults to document=0A=
	// keepScripts (optional): If true, will include scripts passed in the =
html string=0A=
	parseHTML: function( data, context, keepScripts ) {=0A=
		if ( !data || typeof data !=3D=3D "string" ) {=0A=
			return null;=0A=
		}=0A=
		if ( typeof context =3D=3D=3D "boolean" ) {=0A=
			keepScripts =3D context;=0A=
			context =3D false;=0A=
		}=0A=
		context =3D context || document;=0A=
=0A=
		var parsed =3D rsingleTag.exec( data ),=0A=
			scripts =3D !keepScripts && [];=0A=
=0A=
		// Single tag=0A=
		if ( parsed ) {=0A=
			return [ context.createElement( parsed[1] ) ];=0A=
		}=0A=
=0A=
		parsed =3D jQuery.buildFragment( [ data ], context, scripts );=0A=
		if ( scripts ) {=0A=
			jQuery( scripts ).remove();=0A=
		}=0A=
		return jQuery.merge( [], parsed.childNodes );=0A=
	},=0A=
=0A=
	parseJSON: function( data ) {=0A=
		// Attempt to parse using the native JSON parser first=0A=
		if ( window.JSON && window.JSON.parse ) {=0A=
			return window.JSON.parse( data );=0A=
		}=0A=
=0A=
		if ( data =3D=3D=3D null ) {=0A=
			return data;=0A=
		}=0A=
=0A=
		if ( typeof data =3D=3D=3D "string" ) {=0A=
=0A=
			// Make sure leading/trailing whitespace is removed (IE can't handle =
it)=0A=
			data =3D jQuery.trim( data );=0A=
=0A=
			if ( data ) {=0A=
				// Make sure the incoming data is actual JSON=0A=
				// Logic borrowed from http://json.org/json2.js=0A=
				if ( rvalidchars.test( data.replace( rvalidescape, "@" )=0A=
					.replace( rvalidtokens, "]" )=0A=
					.replace( rvalidbraces, "")) ) {=0A=
=0A=
					return ( new Function( "return " + data ) )();=0A=
				}=0A=
			}=0A=
		}=0A=
=0A=
		jQuery.error( "Invalid JSON: " + data );=0A=
	},=0A=
=0A=
	// Cross-browser xml parsing=0A=
	parseXML: function( data ) {=0A=
		var xml, tmp;=0A=
		if ( !data || typeof data !=3D=3D "string" ) {=0A=
			return null;=0A=
		}=0A=
		try {=0A=
			if ( window.DOMParser ) { // Standard=0A=
				tmp =3D new DOMParser();=0A=
				xml =3D tmp.parseFromString( data , "text/xml" );=0A=
			} else { // IE=0A=
				xml =3D new ActiveXObject( "Microsoft.XMLDOM" );=0A=
				xml.async =3D "false";=0A=
				xml.loadXML( data );=0A=
			}=0A=
		} catch( e ) {=0A=
			xml =3D undefined;=0A=
		}=0A=
		if ( !xml || !xml.documentElement || xml.getElementsByTagName( =
"parsererror" ).length ) {=0A=
			jQuery.error( "Invalid XML: " + data );=0A=
		}=0A=
		return xml;=0A=
	},=0A=
=0A=
	noop: function() {},=0A=
=0A=
	// Evaluates a script in a global context=0A=
	// Workarounds based on findings by Jim Driscoll=0A=
	// =
http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-=
global-context=0A=
	globalEval: function( data ) {=0A=
		if ( data && jQuery.trim( data ) ) {=0A=
			// We use execScript on Internet Explorer=0A=
			// We use an anonymous function so that context is window=0A=
			// rather than jQuery in Firefox=0A=
			( window.execScript || function( data ) {=0A=
				window[ "eval" ].call( window, data );=0A=
			} )( data );=0A=
		}=0A=
	},=0A=
=0A=
	// Convert dashed to camelCase; used by the css and data modules=0A=
	// Microsoft forgot to hump their vendor prefix (#9572)=0A=
	camelCase: function( string ) {=0A=
		return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, =
fcamelCase );=0A=
	},=0A=
=0A=
	nodeName: function( elem, name ) {=0A=
		return elem.nodeName && elem.nodeName.toLowerCase() =3D=3D=3D =
name.toLowerCase();=0A=
	},=0A=
=0A=
	// args is for internal usage only=0A=
	each: function( obj, callback, args ) {=0A=
		var value,=0A=
			i =3D 0,=0A=
			length =3D obj.length,=0A=
			isArray =3D isArraylike( obj );=0A=
=0A=
		if ( args ) {=0A=
			if ( isArray ) {=0A=
				for ( ; i < length; i++ ) {=0A=
					value =3D callback.apply( obj[ i ], args );=0A=
=0A=
					if ( value =3D=3D=3D false ) {=0A=
						break;=0A=
					}=0A=
				}=0A=
			} else {=0A=
				for ( i in obj ) {=0A=
					value =3D callback.apply( obj[ i ], args );=0A=
=0A=
					if ( value =3D=3D=3D false ) {=0A=
						break;=0A=
					}=0A=
				}=0A=
			}=0A=
=0A=
		// A special, fast, case for the most common use of each=0A=
		} else {=0A=
			if ( isArray ) {=0A=
				for ( ; i < length; i++ ) {=0A=
					value =3D callback.call( obj[ i ], i, obj[ i ] );=0A=
=0A=
					if ( value =3D=3D=3D false ) {=0A=
						break;=0A=
					}=0A=
				}=0A=
			} else {=0A=
				for ( i in obj ) {=0A=
					value =3D callback.call( obj[ i ], i, obj[ i ] );=0A=
=0A=
					if ( value =3D=3D=3D false ) {=0A=
						break;=0A=
					}=0A=
				}=0A=
			}=0A=
		}=0A=
=0A=
		return obj;=0A=
	},=0A=
=0A=
	// Use native String.trim function wherever possible=0A=
	trim: core_trim && !core_trim.call("\uFEFF\xA0") ?=0A=
		function( text ) {=0A=
			return text =3D=3D null ?=0A=
				"" :=0A=
				core_trim.call( text );=0A=
		} :=0A=
=0A=
		// Otherwise use our own trimming functionality=0A=
		function( text ) {=0A=
			return text =3D=3D null ?=0A=
				"" :=0A=
				( text + "" ).replace( rtrim, "" );=0A=
		},=0A=
=0A=
	// results is for internal usage only=0A=
	makeArray: function( arr, results ) {=0A=
		var ret =3D results || [];=0A=
=0A=
		if ( arr !=3D null ) {=0A=
			if ( isArraylike( Object(arr) ) ) {=0A=
				jQuery.merge( ret,=0A=
					typeof arr =3D=3D=3D "string" ?=0A=
					[ arr ] : arr=0A=
				);=0A=
			} else {=0A=
				core_push.call( ret, arr );=0A=
			}=0A=
		}=0A=
=0A=
		return ret;=0A=
	},=0A=
=0A=
	inArray: function( elem, arr, i ) {=0A=
		var len;=0A=
=0A=
		if ( arr ) {=0A=
			if ( core_indexOf ) {=0A=
				return core_indexOf.call( arr, elem, i );=0A=
			}=0A=
=0A=
			len =3D arr.length;=0A=
			i =3D i ? i < 0 ? Math.max( 0, len + i ) : i : 0;=0A=
=0A=
			for ( ; i < len; i++ ) {=0A=
				// Skip accessing in sparse arrays=0A=
				if ( i in arr && arr[ i ] =3D=3D=3D elem ) {=0A=
					return i;=0A=
				}=0A=
			}=0A=
		}=0A=
=0A=
		return -1;=0A=
	},=0A=
=0A=
	merge: function( first, second ) {=0A=
		var l =3D second.length,=0A=
			i =3D first.length,=0A=
			j =3D 0;=0A=
=0A=
		if ( typeof l =3D=3D=3D "number" ) {=0A=
			for ( ; j < l; j++ ) {=0A=
				first[ i++ ] =3D second[ j ];=0A=
			}=0A=
		} else {=0A=
			while ( second[j] !=3D=3D undefined ) {=0A=
				first[ i++ ] =3D second[ j++ ];=0A=
			}=0A=
		}=0A=
=0A=
		first.length =3D i;=0A=
=0A=
		return first;=0A=
	},=0A=
=0A=
	grep: function( elems, callback, inv ) {=0A=
		var retVal,=0A=
			ret =3D [],=0A=
			i =3D 0,=0A=
			length =3D elems.length;=0A=
		inv =3D !!inv;=0A=
=0A=
		// Go through the array, only saving the items=0A=
		// that pass the validator function=0A=
		for ( ; i < length; i++ ) {=0A=
			retVal =3D !!callback( elems[ i ], i );=0A=
			if ( inv !=3D=3D retVal ) {=0A=
				ret.push( elems[ i ] );=0A=
			}=0A=
		}=0A=
=0A=
		return ret;=0A=
	},=0A=
=0A=
	// arg is for internal usage only=0A=
	map: function( elems, callback, arg ) {=0A=
		var value,=0A=
			i =3D 0,=0A=
			length =3D elems.length,=0A=
			isArray =3D isArraylike( elems ),=0A=
			ret =3D [];=0A=
=0A=
		// Go through the array, translating each of the items to their=0A=
		if ( isArray ) {=0A=
			for ( ; i < length; i++ ) {=0A=
				value =3D callback( elems[ i ], i, arg );=0A=
=0A=
				if ( value !=3D null ) {=0A=
					ret[ ret.length ] =3D value;=0A=
				}=0A=
			}=0A=
=0A=
		// Go through every key on the object,=0A=
		} else {=0A=
			for ( i in elems ) {=0A=
				value =3D callback( elems[ i ], i, arg );=0A=
=0A=
				if ( value !=3D null ) {=0A=
					ret[ ret.length ] =3D value;=0A=
				}=0A=
			}=0A=
		}=0A=
=0A=
		// Flatten any nested arrays=0A=
		return core_concat.apply( [], ret );=0A=
	},=0A=
=0A=
	// A global GUID counter for objects=0A=
	guid: 1,=0A=
=0A=
	// Bind a function to a context, optionally partially applying any=0A=
	// arguments.=0A=
	proxy: function( fn, context ) {=0A=
		var args, proxy, tmp;=0A=
=0A=
		if ( typeof context =3D=3D=3D "string" ) {=0A=
			tmp =3D fn[ context ];=0A=
			context =3D fn;=0A=
			fn =3D tmp;=0A=
		}=0A=
=0A=
		// Quick check to determine if target is callable, in the spec=0A=
		// this throws a TypeError, but we will just return undefined.=0A=
		if ( !jQuery.isFunction( fn ) ) {=0A=
			return undefined;=0A=
		}=0A=
=0A=
		// Simulated bind=0A=
		args =3D core_slice.call( arguments, 2 );=0A=
		proxy =3D function() {=0A=
			return fn.apply( context || this, args.concat( core_slice.call( =
arguments ) ) );=0A=
		};=0A=
=0A=
		// Set the guid of unique handler to the same of original handler, so =
it can be removed=0A=
		proxy.guid =3D fn.guid =3D fn.guid || jQuery.guid++;=0A=
=0A=
		return proxy;=0A=
	},=0A=
=0A=
	// Multifunctional method to get and set values of a collection=0A=
	// The value/s can optionally be executed if it's a function=0A=
	access: function( elems, fn, key, value, chainable, emptyGet, raw ) {=0A=
		var i =3D 0,=0A=
			length =3D elems.length,=0A=
			bulk =3D key =3D=3D null;=0A=
=0A=
		// Sets many values=0A=
		if ( jQuery.type( key ) =3D=3D=3D "object" ) {=0A=
			chainable =3D true;=0A=
			for ( i in key ) {=0A=
				jQuery.access( elems, fn, i, key[i], true, emptyGet, raw );=0A=
			}=0A=
=0A=
		// Sets one value=0A=
		} else if ( value !=3D=3D undefined ) {=0A=
			chainable =3D true;=0A=
=0A=
			if ( !jQuery.isFunction( value ) ) {=0A=
				raw =3D true;=0A=
			}=0A=
=0A=
			if ( bulk ) {=0A=
				// Bulk operations run against the entire set=0A=
				if ( raw ) {=0A=
					fn.call( elems, value );=0A=
					fn =3D null;=0A=
=0A=
				// ...except when executing function values=0A=
				} else {=0A=
					bulk =3D fn;=0A=
					fn =3D function( elem, key, value ) {=0A=
						return bulk.call( jQuery( elem ), value );=0A=
					};=0A=
				}=0A=
			}=0A=
=0A=
			if ( fn ) {=0A=
				for ( ; i < length; i++ ) {=0A=
					fn( elems[i], key, raw ? value : value.call( elems[i], i, fn( =
elems[i], key ) ) );=0A=
				}=0A=
			}=0A=
		}=0A=
=0A=
		return chainable ?=0A=
			elems :=0A=
=0A=
			// Gets=0A=
			bulk ?=0A=
				fn.call( elems ) :=0A=
				length ? fn( elems[0], key ) : emptyGet;=0A=
	},=0A=
=0A=
	now: function() {=0A=
		return ( new Date() ).getTime();=0A=
	}=0A=
});=0A=
=0A=
jQuery.ready.promise =3D function( obj ) {=0A=
	if ( !readyList ) {=0A=
=0A=
		readyList =3D jQuery.Deferred();=0A=
=0A=
		// Catch cases where $(document).ready() is called after the browser =
event has already occurred.=0A=
		// we once tried to use readyState "interactive" here, but it caused =
issues like the one=0A=
		// discovered by ChrisS here: =
http://bugs.jquery.com/ticket/12282#comment:15=0A=
		if ( document.readyState =3D=3D=3D "complete" ) {=0A=
			// Handle it asynchronously to allow scripts the opportunity to delay =
ready=0A=
			setTimeout( jQuery.ready );=0A=
=0A=
		// Standards-based browsers support DOMContentLoaded=0A=
		} else if ( document.addEventListener ) {=0A=
			// Use the handy event callback=0A=
			document.addEventListener( "DOMContentLoaded", completed, false );=0A=
=0A=
			// A fallback to window.onload, that will always work=0A=
			window.addEventListener( "load", completed, false );=0A=
=0A=
		// If IE event model is used=0A=
		} else {=0A=
			// Ensure firing before onload, maybe late but safe also for iframes=0A=
			document.attachEvent( "onreadystatechange", completed );=0A=
=0A=
			// A fallback to window.onload, that will always work=0A=
			window.attachEvent( "onload", completed );=0A=
=0A=
			// If IE and not a frame=0A=
			// continually check to see if the document is ready=0A=
			var top =3D false;=0A=
=0A=
			try {=0A=
				top =3D window.frameElement =3D=3D null && document.documentElement;=0A=
			} catch(e) {}=0A=
=0A=
			if ( top && top.doScroll ) {=0A=
				(function doScrollCheck() {=0A=
					if ( !jQuery.isReady ) {=0A=
=0A=
						try {=0A=
							// Use the trick by Diego Perini=0A=
							// http://javascript.nwbox.com/IEContentLoaded/=0A=
							top.doScroll("left");=0A=
						} catch(e) {=0A=
							return setTimeout( doScrollCheck, 50 );=0A=
						}=0A=
=0A=
						// detach all dom ready events=0A=
						detach();=0A=
=0A=
						// and execute any waiting functions=0A=
						jQuery.ready();=0A=
					}=0A=
				})();=0A=
			}=0A=
		}=0A=
	}=0A=
	return readyList.promise( obj );=0A=
};=0A=
=0A=
// Populate the class2type map=0A=
jQuery.each("Boolean Number String Function Array Date RegExp Object =
Error".split(" "), function(i, name) {=0A=
	class2type[ "[object " + name + "]" ] =3D name.toLowerCase();=0A=
});=0A=
=0A=
function isArraylike( obj ) {=0A=
	var length =3D obj.length,=0A=
		type =3D jQuery.type( obj );=0A=
=0A=
	if ( jQuery.isWindow( obj ) ) {=0A=
		return false;=0A=
	}=0A=
=0A=
	if ( obj.nodeType =3D=3D=3D 1 && length ) {=0A=
		return true;=0A=
	}=0A=
=0A=
	return type =3D=3D=3D "array" || type !=3D=3D "function" &&=0A=
		( length =3D=3D=3D 0 ||=0A=
		typeof length =3D=3D=3D "number" && length > 0 && ( length - 1 ) in =
obj );=0A=
}=0A=
=0A=
// All jQuery objects should point back to these=0A=
rootjQuery =3D jQuery(document);=0A=
// String to Object options format cache=0A=
var optionsCache =3D {};=0A=
=0A=
// Convert String-formatted options into Object-formatted ones and store =
in cache=0A=
function createOptions( options ) {=0A=
	var object =3D optionsCache[ options ] =3D {};=0A=
	jQuery.each( options.match( core_rnotwhite ) || [], function( _, flag ) =
{=0A=
		object[ flag ] =3D true;=0A=
	});=0A=
	return object;=0A=
}=0A=
=0A=
/*=0A=
 * Create a callback list using the following parameters:=0A=
 *=0A=
 *	options: an optional list of space-separated options that will change =
how=0A=
 *			the callback list behaves or a more traditional option object=0A=
 *=0A=
 * By default a callback list will act like an event callback list and =
can be=0A=
 * "fired" multiple times.=0A=
 *=0A=
 * Possible options:=0A=
 *=0A=
 *	once:			will ensure the callback list can only be fired once (like a =
Deferred)=0A=
 *=0A=
 *	memory:			will keep track of previous values and will call any =
callback added=0A=
 *					after the list has been fired right away with the latest =
"memorized"=0A=
 *					values (like a Deferred)=0A=
 *=0A=
 *	unique:			will ensure a callback can only be added once (no duplicate =
in the list)=0A=
 *=0A=
 *	stopOnFalse:	interrupt callings when a callback returns false=0A=
 *=0A=
 */=0A=
jQuery.Callbacks =3D function( options ) {=0A=
=0A=
	// Convert options from String-formatted to Object-formatted if needed=0A=
	// (we check in cache first)=0A=
	options =3D typeof options =3D=3D=3D "string" ?=0A=
		( optionsCache[ options ] || createOptions( options ) ) :=0A=
		jQuery.extend( {}, options );=0A=
=0A=
	var // Flag to know if list is currently firing=0A=
		firing,=0A=
		// Last fire value (for non-forgettable lists)=0A=
		memory,=0A=
		// Flag to know if list was already fired=0A=
		fired,=0A=
		// End of the loop when firing=0A=
		firingLength,=0A=
		// Index of currently firing callback (modified by remove if needed)=0A=
		firingIndex,=0A=
		// First callback to fire (used internally by add and fireWith)=0A=
		firingStart,=0A=
		// Actual callback list=0A=
		list =3D [],=0A=
		// Stack of fire calls for repeatable lists=0A=
		stack =3D !options.once && [],=0A=
		// Fire callbacks=0A=
		fire =3D function( data ) {=0A=
			memory =3D options.memory && data;=0A=
			fired =3D true;=0A=
			firingIndex =3D firingStart || 0;=0A=
			firingStart =3D 0;=0A=
			firingLength =3D list.length;=0A=
			firing =3D true;=0A=
			for ( ; list && firingIndex < firingLength; firingIndex++ ) {=0A=
				if ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) =3D=3D=3D =
false && options.stopOnFalse ) {=0A=
					memory =3D false; // To prevent further calls using add=0A=
					break;=0A=
				}=0A=
			}=0A=
			firing =3D false;=0A=
			if ( list ) {=0A=
				if ( stack ) {=0A=
					if ( stack.length ) {=0A=
						fire( stack.shift() );=0A=
					}=0A=
				} else if ( memory ) {=0A=
					list =3D [];=0A=
				} else {=0A=
					self.disable();=0A=
				}=0A=
			}=0A=
		},=0A=
		// Actual Callbacks object=0A=
		self =3D {=0A=
			// Add a callback or a collection of callbacks to the list=0A=
			add: function() {=0A=
				if ( list ) {=0A=
					// First, we save the current length=0A=
					var start =3D list.length;=0A=
					(function add( args ) {=0A=
						jQuery.each( args, function( _, arg ) {=0A=
							var type =3D jQuery.type( arg );=0A=
							if ( type =3D=3D=3D "function" ) {=0A=
								if ( !options.unique || !self.has( arg ) ) {=0A=
									list.push( arg );=0A=
								}=0A=
							} else if ( arg && arg.length && type !=3D=3D "string" ) {=0A=
								// Inspect recursively=0A=
								add( arg );=0A=
							}=0A=
						});=0A=
					})( arguments );=0A=
					// Do we need to add the callbacks to the=0A=
					// current firing batch?=0A=
					if ( firing ) {=0A=
						firingLength =3D list.length;=0A=
					// With memory, if we're not firing then=0A=
					// we should call right away=0A=
					} else if ( memory ) {=0A=
						firingStart =3D start;=0A=
						fire( memory );=0A=
					}=0A=
				}=0A=
				return this;=0A=
			},=0A=
			// Remove a callback from the list=0A=
			remove: function() {=0A=
				if ( list ) {=0A=
					jQuery.each( arguments, function( _, arg ) {=0A=
						var index;=0A=
						while( ( index =3D jQuery.inArray( arg, list, index ) ) > -1 ) {=0A=
							list.splice( index, 1 );=0A=
							// Handle firing indexes=0A=
							if ( firing ) {=0A=
								if ( index <=3D firingLength ) {=0A=
									firingLength--;=0A=
								}=0A=
								if ( index <=3D firingIndex ) {=0A=
									firingIndex--;=0A=
								}=0A=
							}=0A=
						}=0A=
					});=0A=
				}=0A=
				return this;=0A=
			},=0A=
			// Check if a given callback is in the list.=0A=
			// If no argument is given, return whether or not list has callbacks =
attached.=0A=
			has: function( fn ) {=0A=
				return fn ? jQuery.inArray( fn, list ) > -1 : !!( list && =
list.length );=0A=
			},=0A=
			// Remove all callbacks from the list=0A=
			empty: function() {=0A=
				list =3D [];=0A=
				return this;=0A=
			},=0A=
			// Have the list do nothing anymore=0A=
			disable: function() {=0A=
				list =3D stack =3D memory =3D undefined;=0A=
				return this;=0A=
			},=0A=
			// Is it disabled?=0A=
			disabled: function() {=0A=
				return !list;=0A=
			},=0A=
			// Lock the list in its current state=0A=
			lock: function() {=0A=
				stack =3D undefined;=0A=
				if ( !memory ) {=0A=
					self.disable();=0A=
				}=0A=
				return this;=0A=
			},=0A=
			// Is it locked?=0A=
			locked: function() {=0A=
				return !stack;=0A=
			},=0A=
			// Call all callbacks with the given context and arguments=0A=
			fireWith: function( context, args ) {=0A=
				args =3D args || [];=0A=
				args =3D [ context, args.slice ? args.slice() : args ];=0A=
				if ( list && ( !fired || stack ) ) {=0A=
					if ( firing ) {=0A=
						stack.push( args );=0A=
					} else {=0A=
						fire( args );=0A=
					}=0A=
				}=0A=
				return this;=0A=
			},=0A=
			// Call all the callbacks with the given arguments=0A=
			fire: function() {=0A=
				self.fireWith( this, arguments );=0A=
				return this;=0A=
			},=0A=
			// To know if the callbacks have already been called at least once=0A=
			fired: function() {=0A=
				return !!fired;=0A=
			}=0A=
		};=0A=
=0A=
	return self;=0A=
};=0A=
jQuery.extend({=0A=
=0A=
	Deferred: function( func ) {=0A=
		var tuples =3D [=0A=
				// action, add listener, listener list, final state=0A=
				[ "resolve", "done", jQuery.Callbacks("once memory"), "resolved" ],=0A=
				[ "reject", "fail", jQuery.Callbacks("once memory"), "rejected" ],=0A=
				[ "notify", "progress", jQuery.Callbacks("memory") ]=0A=
			],=0A=
			state =3D "pending",=0A=
			promise =3D {=0A=
				state: function() {=0A=
					return state;=0A=
				},=0A=
				always: function() {=0A=
					deferred.done( arguments ).fail( arguments );=0A=
					return this;=0A=
				},=0A=
				then: function( /* fnDone, fnFail, fnProgress */ ) {=0A=
					var fns =3D arguments;=0A=
					return jQuery.Deferred(function( newDefer ) {=0A=
						jQuery.each( tuples, function( i, tuple ) {=0A=
							var action =3D tuple[ 0 ],=0A=
								fn =3D jQuery.isFunction( fns[ i ] ) && fns[ i ];=0A=
							// deferred[ done | fail | progress ] for forwarding actions to =
newDefer=0A=
							deferred[ tuple[1] ](function() {=0A=
								var returned =3D fn && fn.apply( this, arguments );=0A=
								if ( returned && jQuery.isFunction( returned.promise ) ) {=0A=
									returned.promise()=0A=
										.done( newDefer.resolve )=0A=
										.fail( newDefer.reject )=0A=
										.progress( newDefer.notify );=0A=
								} else {=0A=
									newDefer[ action + "With" ]( this =3D=3D=3D promise ? =
newDefer.promise() : this, fn ? [ returned ] : arguments );=0A=
								}=0A=
							});=0A=
						});=0A=
						fns =3D null;=0A=
					}).promise();=0A=
				},=0A=
				// Get a promise for this deferred=0A=
				// If obj is provided, the promise aspect is added to the object=0A=
				promise: function( obj ) {=0A=
					return obj !=3D null ? jQuery.extend( obj, promise ) : promise;=0A=
				}=0A=
			},=0A=
			deferred =3D {};=0A=
=0A=
		// Keep pipe for back-compat=0A=
		promise.pipe =3D promise.then;=0A=
=0A=
		// Add list-specific methods=0A=
		jQuery.each( tuples, function( i, tuple ) {=0A=
			var list =3D tuple[ 2 ],=0A=
				stateString =3D tuple[ 3 ];=0A=
=0A=
			// promise[ done | fail | progress ] =3D list.add=0A=
			promise[ tuple[1] ] =3D list.add;=0A=
=0A=
			// Handle state=0A=
			if ( stateString ) {=0A=
				list.add(function() {=0A=
					// state =3D [ resolved | rejected ]=0A=
					state =3D stateString;=0A=
=0A=
				// [ reject_list | resolve_list ].disable; progress_list.lock=0A=
				}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );=0A=
			}=0A=
=0A=
			// deferred[ resolve | reject | notify ]=0A=
			deferred[ tuple[0] ] =3D function() {=0A=
				deferred[ tuple[0] + "With" ]( this =3D=3D=3D deferred ? promise : =
this, arguments );=0A=
				return this;=0A=
			};=0A=
			deferred[ tuple[0] + "With" ] =3D list.fireWith;=0A=
		});=0A=
=0A=
		// Make the deferred a promise=0A=
		promise.promise( deferred );=0A=
=0A=
		// Call given func if any=0A=
		if ( func ) {=0A=
			func.call( deferred, deferred );=0A=
		}=0A=
=0A=
		// All done!=0A=
		return deferred;=0A=
	},=0A=
=0A=
	// Deferred helper=0A=
	when: function( subordinate /* , ..., subordinateN */ ) {=0A=
		var i =3D 0,=0A=
			resolveValues =3D core_slice.call( arguments ),=0A=
			length =3D resolveValues.length,=0A=
=0A=
			// the count of uncompleted subordinates=0A=
			remaining =3D length !=3D=3D 1 || ( subordinate && jQuery.isFunction( =
subordinate.promise ) ) ? length : 0,=0A=
=0A=
			// the master Deferred. If resolveValues consist of only a single =
Deferred, just use that.=0A=
			deferred =3D remaining =3D=3D=3D 1 ? subordinate : jQuery.Deferred(),=0A=
=0A=
			// Update function for both resolve and progress values=0A=
			updateFunc =3D function( i, contexts, values ) {=0A=
				return function( value ) {=0A=
					contexts[ i ] =3D this;=0A=
					values[ i ] =3D arguments.length > 1 ? core_slice.call( arguments ) =
: value;=0A=
					if( values =3D=3D=3D progressValues ) {=0A=
						deferred.notifyWith( contexts, values );=0A=
					} else if ( !( --remaining ) ) {=0A=
						deferred.resolveWith( contexts, values );=0A=
					}=0A=
				};=0A=
			},=0A=
=0A=
			progressValues, progressContexts, resolveContexts;=0A=
=0A=
		// add listeners to Deferred subordinates; treat others as resolved=0A=
		if ( length > 1 ) {=0A=
			progressValues =3D new Array( length );=0A=
			progressContexts =3D new Array( length );=0A=
			resolveContexts =3D new Array( length );=0A=
			for ( ; i < length; i++ ) {=0A=
				if ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i =
].promise ) ) {=0A=
					resolveValues[ i ].promise()=0A=
						.done( updateFunc( i, resolveContexts, resolveValues ) )=0A=
						.fail( deferred.reject )=0A=
						.progress( updateFunc( i, progressContexts, progressValues ) );=0A=
				} else {=0A=
					--remaining;=0A=
				}=0A=
			}=0A=
		}=0A=
=0A=
		// if we're not waiting on anything, resolve the master=0A=
		if ( !remaining ) {=0A=
			deferred.resolveWith( resolveContexts, resolveValues );=0A=
		}=0A=
=0A=
		return deferred.promise();=0A=
	}=0A=
});=0A=
jQuery.support =3D (function() {=0A=
=0A=
	var support, all, a,=0A=
		input, select, fragment,=0A=
		opt, eventName, isSupported, i,=0A=
		div =3D document.createElement("div");=0A=
=0A=
	// Setup=0A=
	div.setAttribute( "className", "t" );=0A=
	div.innerHTML =3D "  <link/><table></table><a href=3D'/a'>a</a><input =
type=3D'checkbox'/>";=0A=
=0A=
	// Support tests won't run in some limited or non-browser environments=0A=
	all =3D div.getElementsByTagName("*");=0A=
	a =3D div.getElementsByTagName("a")[ 0 ];=0A=
	if ( !all || !a || !all.length ) {=0A=
		return {};=0A=
	}=0A=
=0A=
	// First batch of tests=0A=
	select =3D document.createElement("select");=0A=
	opt =3D select.appendChild( document.createElement("option") );=0A=
	input =3D div.getElementsByTagName("input")[ 0 ];=0A=
=0A=
	a.style.cssText =3D "top:1px;float:left;opacity:.5";=0A=
	support =3D {=0A=
		// Test setAttribute on camelCase class. If it works, we need =
attrFixes when doing get/setAttribute (ie6/7)=0A=
		getSetAttribute: div.className !=3D=3D "t",=0A=
=0A=
		// IE strips leading whitespace when .innerHTML is used=0A=
		leadingWhitespace: div.firstChild.nodeType =3D=3D=3D 3,=0A=
=0A=
		// Make sure that tbody elements aren't automatically inserted=0A=
		// IE will insert them into empty tables=0A=
		tbody: !div.getElementsByTagName("tbody").length,=0A=
=0A=
		// Make sure that link elements get serialized correctly by innerHTML=0A=
		// This requires a wrapper element in IE=0A=
		htmlSerialize: !!div.getElementsByTagName("link").length,=0A=
=0A=
		// Get the style information from getAttribute=0A=
		// (IE uses .cssText instead)=0A=
		style: /top/.test( a.getAttribute("style") ),=0A=
=0A=
		// Make sure that URLs aren't manipulated=0A=
		// (IE normalizes it by default)=0A=
		hrefNormalized: a.getAttribute("href") =3D=3D=3D "/a",=0A=
=0A=
		// Make sure that element opacity exists=0A=
		// (IE uses filter instead)=0A=
		// Use a regex to work around a WebKit issue. See #5145=0A=
		opacity: /^0.5/.test( a.style.opacity ),=0A=
=0A=
		// Verify style float existence=0A=
		// (IE uses styleFloat instead of cssFloat)=0A=
		cssFloat: !!a.style.cssFloat,=0A=
=0A=
		// Check the default checkbox/radio value ("" on WebKit; "on" =
elsewhere)=0A=
		checkOn: !!input.value,=0A=
=0A=
		// Make sure that a selected-by-default option has a working selected =
property.=0A=
		// (WebKit defaults to false instead of true, IE too, if it's in an =
optgroup)=0A=
		optSelected: opt.selected,=0A=
=0A=
		// Tests for enctype support on a form (#6743)=0A=
		enctype: !!document.createElement("form").enctype,=0A=
=0A=
		// Makes sure cloning an html5 element does not cause problems=0A=
		// Where outerHTML is undefined, this still works=0A=
		html5Clone: document.createElement("nav").cloneNode( true ).outerHTML =
!=3D=3D "<:nav></:nav>",=0A=
=0A=
		// jQuery.support.boxModel DEPRECATED in 1.8 since we don't support =
Quirks Mode=0A=
		boxModel: document.compatMode =3D=3D=3D "CSS1Compat",=0A=
=0A=
		// Will be defined later=0A=
		deleteExpando: true,=0A=
		noCloneEvent: true,=0A=
		inlineBlockNeedsLayout: false,=0A=
		shrinkWrapBlocks: false,=0A=
		reliableMarginRight: true,=0A=
		boxSizingReliable: true,=0A=
		pixelPosition: false=0A=
	};=0A=
=0A=
	// Make sure checked status is properly cloned=0A=
	input.checked =3D true;=0A=
	support.noCloneChecked =3D input.cloneNode( true ).checked;=0A=
=0A=
	// Make sure that the options inside disabled selects aren't marked as =
disabled=0A=
	// (WebKit marks them as disabled)=0A=
	select.disabled =3D true;=0A=
	support.optDisabled =3D !opt.disabled;=0A=
=0A=
	// Support: IE<9=0A=
	try {=0A=
		delete div.test;=0A=
	} catch( e ) {=0A=
		support.deleteExpando =3D false;=0A=
	}=0A=
=0A=
	// Check if we can trust getAttribute("value")=0A=
	input =3D document.createElement("input");=0A=
	input.setAttribute( "value", "" );=0A=
	support.input =3D input.getAttribute( "value" ) =3D=3D=3D "";=0A=
=0A=
	// Check if an input maintains its value after becoming a radio=0A=
	input.value =3D "t";=0A=
	input.setAttribute( "type", "radio" );=0A=
	support.radioValue =3D input.value =3D=3D=3D "t";=0A=
=0A=
	// #11217 - WebKit loses check when the name is after the checked =
attribute=0A=
	input.setAttribute( "checked", "t" );=0A=
	input.setAttribute( "name", "t" );=0A=
=0A=
	fragment =3D document.createDocumentFragment();=0A=
	fragment.appendChild( input );=0A=
=0A=
	// Check if a disconnected checkbox will retain its checked=0A=
	// value of true after appended to the DOM (IE6/7)=0A=
	support.appendChecked =3D input.checked;=0A=
=0A=
	// WebKit doesn't clone checked state correctly in fragments=0A=
	support.checkClone =3D fragment.cloneNode( true ).cloneNode( true =
).lastChild.checked;=0A=
=0A=
	// Support: IE<9=0A=
	// Opera does not clone events (and typeof div.attachEvent =3D=3D=3D =
undefined).=0A=
	// IE9-10 clones events bound via attachEvent, but they don't trigger =
with .click()=0A=
	if ( div.attachEvent ) {=0A=
		div.attachEvent( "onclick", function() {=0A=
			support.noCloneEvent =3D false;=0A=
		});=0A=
=0A=
		div.cloneNode( true ).click();=0A=
	}=0A=
=0A=
	// Support: IE<9 (lack submit/change bubble), Firefox 17+ (lack focusin =
event)=0A=
	// Beware of CSP restrictions =
(https://developer.mozilla.org/en/Security/CSP), test/csp.php=0A=
	for ( i in { submit: true, change: true, focusin: true }) {=0A=
		div.setAttribute( eventName =3D "on" + i, "t" );=0A=
=0A=
		support[ i + "Bubbles" ] =3D eventName in window || div.attributes[ =
eventName ].expando =3D=3D=3D false;=0A=
	}=0A=
=0A=
	div.style.backgroundClip =3D "content-box";=0A=
	div.cloneNode( true ).style.backgroundClip =3D "";=0A=
	support.clearCloneStyle =3D div.style.backgroundClip =3D=3D=3D =
"content-box";=0A=
=0A=
	// Run tests that need a body at doc ready=0A=
	jQuery(function() {=0A=
		var container, marginDiv, tds,=0A=
			divReset =3D =
"padding:0;margin:0;border:0;display:block;box-sizing:content-box;-moz-bo=
x-sizing:content-box;-webkit-box-sizing:content-box;",=0A=
			body =3D document.getElementsByTagName("body")[0];=0A=
=0A=
		if ( !body ) {=0A=
			// Return for frameset docs that don't have a body=0A=
			return;=0A=
		}=0A=
=0A=
		container =3D document.createElement("div");=0A=
		container.style.cssText =3D =
"border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-to=
p:1px";=0A=
=0A=
		body.appendChild( container ).appendChild( div );=0A=
=0A=
		// Support: IE8=0A=
		// Check if table cells still have offsetWidth/Height when they are set=0A=
		// to display:none and there are still other visible table cells in a=0A=
		// table row; if so, offsetWidth/Height are not reliable for use when=0A=
		// determining if an element has been hidden directly using=0A=
		// display:none (it is still safe to use offsets if a parent element is=0A=
		// hidden; don safety goggles and see bug #4512 for more information).=0A=
		div.innerHTML =3D "<table><tr><td></td><td>t</td></tr></table>";=0A=
		tds =3D div.getElementsByTagName("td");=0A=
		tds[ 0 ].style.cssText =3D "padding:0;margin:0;border:0;display:none";=0A=
		isSupported =3D ( tds[ 0 ].offsetHeight =3D=3D=3D 0 );=0A=
=0A=
		tds[ 0 ].style.display =3D "";=0A=
		tds[ 1 ].style.display =3D "none";=0A=
=0A=
		// Support: IE8=0A=
		// Check if empty table cells still have offsetWidth/Height=0A=
		support.reliableHiddenOffsets =3D isSupported && ( tds[ 0 =
].offsetHeight =3D=3D=3D 0 );=0A=
=0A=
		// Check box-sizing and margin behavior=0A=
		div.innerHTML =3D "";=0A=
		div.style.cssText =3D =
"box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:bord=
er-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;posit=
ion:absolute;top:1%;";=0A=
		support.boxSizing =3D ( div.offsetWidth =3D=3D=3D 4 );=0A=
		support.doesNotIncludeMarginInBodyOffset =3D ( body.offsetTop !=3D=3D =
1 );=0A=
=0A=
		// Use window.getComputedStyle because jsdom on node.js will break =
without it.=0A=
		if ( window.getComputedStyle ) {=0A=
			support.pixelPosition =3D ( window.getComputedStyle( div, null ) || =
{} ).top !=3D=3D "1%";=0A=
			support.boxSizingReliable =3D ( window.getComputedStyle( div, null ) =
|| { width: "4px" } ).width =3D=3D=3D "4px";=0A=
=0A=
			// Check if div with explicit width and no margin-right incorrectly=0A=
			// gets computed margin-right based on width of container. (#3333)=0A=
			// Fails in WebKit before Feb 2011 nightlies=0A=
			// WebKit Bug 13343 - getComputedStyle returns wrong value for =
margin-right=0A=
			marginDiv =3D div.appendChild( document.createElement("div") );=0A=
			marginDiv.style.cssText =3D div.style.cssText =3D divReset;=0A=
			marginDiv.style.marginRight =3D marginDiv.style.width =3D "0";=0A=
			div.style.width =3D "1px";=0A=
=0A=
			support.reliableMarginRight =3D=0A=
				!parseFloat( ( window.getComputedStyle( marginDiv, null ) || {} =
).marginRight );=0A=
		}=0A=
=0A=
		if ( typeof div.style.zoom !=3D=3D core_strundefined ) {=0A=
			// Support: IE<8=0A=
			// Check if natively block-level elements act like inline-block=0A=
			// elements when setting their display to 'inline' and giving=0A=
			// them layout=0A=
			div.innerHTML =3D "";=0A=
			div.style.cssText =3D divReset + =
"width:1px;padding:1px;display:inline;zoom:1";=0A=
			support.inlineBlockNeedsLayout =3D ( div.offsetWidth =3D=3D=3D 3 );=0A=
=0A=
			// Support: IE6=0A=
			// Check if elements with layout shrink-wrap their children=0A=
			div.style.display =3D "block";=0A=
			div.innerHTML =3D "<div></div>";=0A=
			div.firstChild.style.width =3D "5px";=0A=
			support.shrinkWrapBlocks =3D ( div.offsetWidth !=3D=3D 3 );=0A=
=0A=
			if ( support.inlineBlockNeedsLayout ) {=0A=
				// Prevent IE 6 from affecting layout for positioned elements #11048=0A=
				// Prevent IE from shrinking the body in IE 7 mode #12869=0A=
				// Support: IE<8=0A=
				body.style.zoom =3D 1;=0A=
			}=0A=
		}=0A=
=0A=
		body.removeChild( container );=0A=
=0A=
		// Null elements to avoid leaks in IE=0A=
		container =3D div =3D tds =3D marginDiv =3D null;=0A=
	});=0A=
=0A=
	// Null elements to avoid leaks in IE=0A=
	all =3D select =3D fragment =3D opt =3D a =3D input =3D null;=0A=
=0A=
	return support;=0A=
})();=0A=
=0A=
var rbrace =3D /(?:\{[\s\S]*\}|\[[\s\S]*\])$/,=0A=
	rmultiDash =3D /([A-Z])/g;=0A=
=0A=
function internalData( elem, name, data, pvt /* Internal Use Only */ ){=0A=
	if ( !jQuery.acceptData( elem ) ) {=0A=
		return;=0A=
	}=0A=
=0A=
	var thisCache, ret,=0A=
		internalKey =3D jQuery.expando,=0A=
		getByName =3D typeof name =3D=3D=3D "string",=0A=
=0A=
		// We have to handle DOM nodes and JS objects differently because IE6-7=0A=
		// can't GC object references properly across the DOM-JS boundary=0A=
		isNode =3D elem.nodeType,=0A=
=0A=
		// Only DOM nodes need the global jQuery cache; JS object data is=0A=
		// attached directly to the object so GC can occur automatically=0A=
		cache =3D isNode ? jQuery.cache : elem,=0A=
=0A=
		// Only defining an ID for JS objects if its cache already exists =
allows=0A=
		// the code to shortcut on the same path as a DOM node with no cache=0A=
		id =3D isNode ? elem[ internalKey ] : elem[ internalKey ] && =
internalKey;=0A=
=0A=
	// Avoid doing any more work than we need to when trying to get data on =
an=0A=
	// object that has no data at all=0A=
	if ( (!id || !cache[id] || (!pvt && !cache[id].data)) && getByName && =
data =3D=3D=3D undefined ) {=0A=
		return;=0A=
	}=0A=
=0A=
	if ( !id ) {=0A=
		// Only DOM nodes need a new unique ID for each element since their =
data=0A=
		// ends up in the global cache=0A=
		if ( isNode ) {=0A=
			elem[ internalKey ] =3D id =3D core_deletedIds.pop() || jQuery.guid++;=0A=
		} else {=0A=
			id =3D internalKey;=0A=
		}=0A=
	}=0A=
=0A=
	if ( !cache[ id ] ) {=0A=
		cache[ id ] =3D {};=0A=
=0A=
		// Avoids exposing jQuery metadata on plain JS objects when the object=0A=
		// is serialized using JSON.stringify=0A=
		if ( !isNode ) {=0A=
			cache[ id ].toJSON =3D jQuery.noop;=0A=
		}=0A=
	}=0A=
=0A=
	// An object can be passed to jQuery.data instead of a key/value pair; =
this gets=0A=
	// shallow copied over onto the existing cache=0A=
	if ( typeof name =3D=3D=3D "object" || typeof name =3D=3D=3D "function" =
) {=0A=
		if ( pvt ) {=0A=
			cache[ id ] =3D jQuery.extend( cache[ id ], name );=0A=
		} else {=0A=
			cache[ id ].data =3D jQuery.extend( cache[ id ].data, name );=0A=
		}=0A=
	}=0A=
=0A=
	thisCache =3D cache[ id ];=0A=
=0A=
	// jQuery data() is stored in a separate object inside the object's =
internal data=0A=
	// cache in order to avoid key collisions between internal data and =
user-defined=0A=
	// data.=0A=
	if ( !pvt ) {=0A=
		if ( !thisCache.data ) {=0A=
			thisCache.data =3D {};=0A=
		}=0A=
=0A=
		thisCache =3D thisCache.data;=0A=
	}=0A=
=0A=
	if ( data !=3D=3D undefined ) {=0A=
		thisCache[ jQuery.camelCase( name ) ] =3D data;=0A=
	}=0A=
=0A=
	// Check for both converted-to-camel and non-converted data property =
names=0A=
	// If a data property was specified=0A=
	if ( getByName ) {=0A=
=0A=
		// First Try to find as-is property data=0A=
		ret =3D thisCache[ name ];=0A=
=0A=
		// Test for null|undefined property data=0A=
		if ( ret =3D=3D null ) {=0A=
=0A=
			// Try to find the camelCased property=0A=
			ret =3D thisCache[ jQuery.camelCase( name ) ];=0A=
		}=0A=
	} else {=0A=
		ret =3D thisCache;=0A=
	}=0A=
=0A=
	return ret;=0A=
}=0A=
=0A=
function internalRemoveData( elem, name, pvt ) {=0A=
	if ( !jQuery.acceptData( elem ) ) {=0A=
		return;=0A=
	}=0A=
=0A=
	var i, l, thisCache,=0A=
		isNode =3D elem.nodeType,=0A=
=0A=
		// See jQuery.data for more information=0A=
		cache =3D isNode ? jQuery.cache : elem,=0A=
		id =3D isNode ? elem[ jQuery.expando ] : jQuery.expando;=0A=
=0A=
	// If there is already no cache entry for this object, there is no=0A=
	// purpose in continuing=0A=
	if ( !cache[ id ] ) {=0A=
		return;=0A=
	}=0A=
=0A=
	if ( name ) {=0A=
=0A=
		thisCache =3D pvt ? cache[ id ] : cache[ id ].data;=0A=
=0A=
		if ( thisCache ) {=0A=
=0A=
			// Support array or space separated string names for data keys=0A=
			if ( !jQuery.isArray( name ) ) {=0A=
=0A=
				// try the string as a key before any manipulation=0A=
				if ( name in thisCache ) {=0A=
					name =3D [ name ];=0A=
				} else {=0A=
=0A=
					// split the camel cased version by spaces unless a key with the =
spaces exists=0A=
					name =3D jQuery.camelCase( name );=0A=
					if ( name in thisCache ) {=0A=
						name =3D [ name ];=0A=
					} else {=0A=
						name =3D name.split(" ");=0A=
					}=0A=
				}=0A=
			} else {=0A=
				// If "name" is an array of keys...=0A=
				// When data is initially created, via ("key", "val") signature,=0A=
				// keys will be converted to camelCase.=0A=
				// Since there is no way to tell _how_ a key was added, remove=0A=
				// both plain key and camelCase key. #12786=0A=
				// This will only penalize the array argument path.=0A=
				name =3D name.concat( jQuery.map( name, jQuery.camelCase ) );=0A=
			}=0A=
=0A=
			for ( i =3D 0, l =3D name.length; i < l; i++ ) {=0A=
				delete thisCache[ name[i] ];=0A=
			}=0A=
=0A=
			// If there is no data left in the cache, we want to continue=0A=
			// and let the cache object itself get destroyed=0A=
			if ( !( pvt ? isEmptyDataObject : jQuery.isEmptyObject )( thisCache ) =
) {=0A=
				return;=0A=
			}=0A=
		}=0A=
	}=0A=
=0A=
	// See jQuery.data for more information=0A=
	if ( !pvt ) {=0A=
		delete cache[ id ].data;=0A=
=0A=
		// Don't destroy the parent cache unless the internal data object=0A=
		// had been the only thing left in it=0A=
		if ( !isEmptyDataObject( cache[ id ] ) ) {=0A=
			return;=0A=
		}=0A=
	}=0A=
=0A=
	// Destroy the cache=0A=
	if ( isNode ) {=0A=
		jQuery.cleanData( [ elem ], true );=0A=
=0A=
	// Use delete when supported for expandos or `cache` is not a window =
per isWindow (#10080)=0A=
	} else if ( jQuery.support.deleteExpando || cache !=3D cache.window ) {=0A=
		delete cache[ id ];=0A=
=0A=
	// When all else fails, null=0A=
	} else {=0A=
		cache[ id ] =3D null;=0A=
	}=0A=
}=0A=
=0A=
jQuery.extend({=0A=
	cache: {},=0A=
=0A=
	// Unique for each copy of jQuery on the page=0A=
	// Non-digits removed to match rinlinejQuery=0A=
	expando: "jQuery" + ( core_version + Math.random() ).replace( /\D/g, "" =
),=0A=
=0A=
	// The following elements throw uncatchable exceptions if you=0A=
	// attempt to add expando properties to them.=0A=
	noData: {=0A=
		"embed": true,=0A=
		// Ban all objects except for Flash (which handle expandos)=0A=
		"object": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",=0A=
		"applet": true=0A=
	},=0A=
=0A=
	hasData: function( elem ) {=0A=
		elem =3D elem.nodeType ? jQuery.cache[ elem[jQuery.expando] ] : elem[ =
jQuery.expando ];=0A=
		return !!elem && !isEmptyDataObject( elem );=0A=
	},=0A=
=0A=
	data: function( elem, name, data ) {=0A=
		return internalData( elem, name, data );=0A=
	},=0A=
=0A=
	removeData: function( elem, name ) {=0A=
		return internalRemoveData( elem, name );=0A=
	},=0A=
=0A=
	// For internal use only.=0A=
	_data: function( elem, name, data ) {=0A=
		return internalData( elem, name, data, true );=0A=
	},=0A=
=0A=
	_removeData: function( elem, name ) {=0A=
		return internalRemoveData( elem, name, true );=0A=
	},=0A=
=0A=
	// A method for determining if a DOM node can handle the data expando=0A=
	acceptData: function( elem ) {=0A=
		// Do not set data on non-element because it will not be cleared =
(#8335).=0A=
		if ( elem.nodeType && elem.nodeType !=3D=3D 1 && elem.nodeType !=3D=3D =
9 ) {=0A=
			return false;=0A=
		}=0A=
=0A=
		var noData =3D elem.nodeName && jQuery.noData[ =
elem.nodeName.toLowerCase() ];=0A=
=0A=
		// nodes accept data unless otherwise specified; rejection can be =
conditional=0A=
		return !noData || noData !=3D=3D true && elem.getAttribute("classid") =
=3D=3D=3D noData;=0A=
	}=0A=
});=0A=
=0A=
jQuery.fn.extend({=0A=
	data: function( key, value ) {=0A=
		var attrs, name,=0A=
			elem =3D this[0],=0A=
			i =3D 0,=0A=
			data =3D null;=0A=
=0A=
		// Gets all values=0A=
		if ( key =3D=3D=3D undefined ) {=0A=
			if ( this.length ) {=0A=
				data =3D jQuery.data( elem );=0A=
=0A=
				if ( elem.nodeType =3D=3D=3D 1 && !jQuery._data( elem, "parsedAttrs" =
) ) {=0A=
					attrs =3D elem.attributes;=0A=
					for ( ; i < attrs.length; i++ ) {=0A=
						name =3D attrs[i].name;=0A=
=0A=
						if ( !name.indexOf( "data-" ) ) {=0A=
							name =3D jQuery.camelCase( name.slice(5) );=0A=
=0A=
							dataAttr( elem, name, data[ name ] );=0A=
						}=0A=
					}=0A=
					jQuery._data( elem, "parsedAttrs", true );=0A=
				}=0A=
			}=0A=
=0A=
			return data;=0A=
		}=0A=
=0A=
		// Sets multiple values=0A=
		if ( typeof key =3D=3D=3D "object" ) {=0A=
			return this.each(function() {=0A=
				jQuery.data( this, key );=0A=
			});=0A=
		}=0A=
=0A=
		return jQuery.access( this, function( value ) {=0A=
=0A=
			if ( value =3D=3D=3D undefined ) {=0A=
				// Try to fetch any internally stored data first=0A=
				return elem ? dataAttr( elem, key, jQuery.data( elem, key ) ) : null;=0A=
			}=0A=
=0A=
			this.each(function() {=0A=
				jQuery.data( this, key, value );=0A=
			});=0A=
		}, null, value, arguments.length > 1, null, true );=0A=
	},=0A=
=0A=
	removeData: function( key ) {=0A=
		return this.each(function() {=0A=
			jQuery.removeData( this, key );=0A=
		});=0A=
	}=0A=
});=0A=
=0A=
function dataAttr( elem, key, data ) {=0A=
	// If nothing was found internally, try to fetch any=0A=
	// data from the HTML5 data-* attribute=0A=
	if ( data =3D=3D=3D undefined && elem.nodeType =3D=3D=3D 1 ) {=0A=
=0A=
		var name =3D "data-" + key.replace( rmultiDash, "-$1" ).toLowerCase();=0A=
=0A=
		data =3D elem.getAttribute( name );=0A=
=0A=
		if ( typeof data =3D=3D=3D "string" ) {=0A=
			try {=0A=
				data =3D data =3D=3D=3D "true" ? true :=0A=
					data =3D=3D=3D "false" ? false :=0A=
					data =3D=3D=3D "null" ? null :=0A=
					// Only convert to a number if it doesn't change the string=0A=
					+data + "" =3D=3D=3D data ? +data :=0A=
					rbrace.test( data ) ? jQuery.parseJSON( data ) :=0A=
						data;=0A=
			} catch( e ) {}=0A=
=0A=
			// Make sure we set the data so it isn't changed later=0A=
			jQuery.data( elem, key, data );=0A=
=0A=
		} else {=0A=
			data =3D undefined;=0A=
		}=0A=
	}=0A=
=0A=
	return data;=0A=
}=0A=
=0A=
// checks a cache object for emptiness=0A=
function isEmptyDataObject( obj ) {=0A=
	var name;=0A=
	for ( name in obj ) {=0A=
=0A=
		// if the public data object is empty, the private is still empty=0A=
		if ( name =3D=3D=3D "data" && jQuery.isEmptyObject( obj[name] ) ) {=0A=
			continue;=0A=
		}=0A=
		if ( name !=3D=3D "toJSON" ) {=0A=
			return false;=0A=
		}=0A=
	}=0A=
=0A=
	return true;=0A=
}=0A=
jQuery.extend({=0A=
	queue: function( elem, type, data ) {=0A=
		var queue;=0A=
=0A=
		if ( elem ) {=0A=
			type =3D ( type || "fx" ) + "queue";=0A=
			queue =3D jQuery._data( elem, type );=0A=
=0A=
			// Speed up dequeue by getting out quickly if this is just a lookup=0A=
			if ( data ) {=0A=
				if ( !queue || jQuery.isArray(data) ) {=0A=
					queue =3D jQuery._data( elem, type, jQuery.makeArray(data) );=0A=
				} else {=0A=
					queue.push( data );=0A=
				}=0A=
			}=0A=
			return queue || [];=0A=
		}=0A=
	},=0A=
=0A=
	dequeue: function( elem, type ) {=0A=
		type =3D type || "fx";=0A=
=0A=
		var queue =3D jQuery.queue( elem, type ),=0A=
			startLength =3D queue.length,=0A=
			fn =3D queue.shift(),=0A=
			hooks =3D jQuery._queueHooks( elem, type ),=0A=
			next =3D function() {=0A=
				jQuery.dequeue( elem, type );=0A=
			};=0A=
=0A=
		// If the fx queue is dequeued, always remove the progress sentinel=0A=
		if ( fn =3D=3D=3D "inprogress" ) {=0A=
			fn =3D queue.shift();=0A=
			startLength--;=0A=
		}=0A=
=0A=
		hooks.cur =3D fn;=0A=
		if ( fn ) {=0A=
=0A=
			// Add a progress sentinel to prevent the fx queue from being=0A=
			// automatically dequeued=0A=
			if ( type =3D=3D=3D "fx" ) {=0A=
				queue.unshift( "inprogress" );=0A=
			}=0A=
=0A=
			// clear up the last queue stop function=0A=
			delete hooks.stop;=0A=
			fn.call( elem, next, hooks );=0A=
		}=0A=
=0A=
		if ( !startLength && hooks ) {=0A=
			hooks.empty.fire();=0A=
		}=0A=
	},=0A=
=0A=
	// not intended for public consumption - generates a queueHooks object, =
or returns the current one=0A=
	_queueHooks: function( elem, type ) {=0A=
		var key =3D type + "queueHooks";=0A=
		return jQuery._data( elem, key ) || jQuery._data( elem, key, {=0A=
			empty: jQuery.Callbacks("once memory").add(function() {=0A=
				jQuery._removeData( elem, type + "queue" );=0A=
				jQuery._removeData( elem, key );=0A=
			})=0A=
		});=0A=
	}=0A=
});=0A=
=0A=
jQuery.fn.extend({=0A=
	queue: function( type, data ) {=0A=
		var setter =3D 2;=0A=
=0A=
		if ( typeof type !=3D=3D "string" ) {=0A=
			data =3D type;=0A=
			type =3D "fx";=0A=
			setter--;=0A=
		}=0A=
=0A=
		if ( arguments.length < setter ) {=0A=
			return jQuery.queue( this[0], type );=0A=
		}=0A=
=0A=
		return data =3D=3D=3D undefined ?=0A=
			this :=0A=
			this.each(function() {=0A=
				var queue =3D jQuery.queue( this, type, data );=0A=
=0A=
				// ensure a hooks for this queue=0A=
				jQuery._queueHooks( this, type );=0A=
=0A=
				if ( type =3D=3D=3D "fx" && queue[0] !=3D=3D "inprogress" ) {=0A=
					jQuery.dequeue( this, type );=0A=
				}=0A=
			});=0A=
	},=0A=
	dequeue: function( type ) {=0A=
		return this.each(function() {=0A=
			jQuery.dequeue( this, type );=0A=
		});=0A=
	},=0A=
	// Based off of the plugin by Clint Helfers, with permission.=0A=
	// http://blindsignals.com/index.php/2009/07/jquery-delay/=0A=
	delay: function( time, type ) {=0A=
		time =3D jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;=0A=
		type =3D type || "fx";=0A=
=0A=
		return this.queue( type, function( next, hooks ) {=0A=
			var timeout =3D setTimeout( next, time );=0A=
			hooks.stop =3D function() {=0A=
				clearTimeout( timeout );=0A=
			};=0A=
		});=0A=
	},=0A=
	clearQueue: function( type ) {=0A=
		return this.queue( type || "fx", [] );=0A=
	},=0A=
	// Get a promise resolved when queues of a certain type=0A=
	// are emptied (fx is the type by default)=0A=
	promise: function( type, obj ) {=0A=
		var tmp,=0A=
			count =3D 1,=0A=
			defer =3D jQuery.Deferred(),=0A=
			elements =3D this,=0A=
			i =3D this.length,=0A=
			resolve =3D function() {=0A=
				if ( !( --count ) ) {=0A=
					defer.resolveWith( elements, [ elements ] );=0A=
				}=0A=
			};=0A=
=0A=
		if ( typeof type !=3D=3D "string" ) {=0A=
			obj =3D type;=0A=
			type =3D undefined;=0A=
		}=0A=
		type =3D type || "fx";=0A=
=0A=
		while( i-- ) {=0A=
			tmp =3D jQuery._data( elements[ i ], type + "queueHooks" );=0A=
			if ( tmp && tmp.empty ) {=0A=
				count++;=0A=
				tmp.empty.add( resolve );=0A=
			}=0A=
		}=0A=
		resolve();=0A=
		return defer.promise( obj );=0A=
	}=0A=
});=0A=
var nodeHook, boolHook,=0A=
	rclass =3D /[\t\r\n]/g,=0A=
	rreturn =3D /\r/g,=0A=
	rfocusable =3D /^(?:input|select|textarea|button|object)$/i,=0A=
	rclickable =3D /^(?:a|area)$/i,=0A=
	rboolean =3D =
/^(?:checked|selected|autofocus|autoplay|async|controls|defer|disabled|hi=
dden|loop|multiple|open|readonly|required|scoped)$/i,=0A=
	ruseDefault =3D /^(?:checked|selected)$/i,=0A=
	getSetAttribute =3D jQuery.support.getSetAttribute,=0A=
	getSetInput =3D jQuery.support.input;=0A=
=0A=
jQuery.fn.extend({=0A=
	attr: function( name, value ) {=0A=
		return jQuery.access( this, jQuery.attr, name, value, arguments.length =
> 1 );=0A=
	},=0A=
=0A=
	removeAttr: function( name ) {=0A=
		return this.each(function() {=0A=
			jQuery.removeAttr( this, name );=0A=
		});=0A=
	},=0A=
=0A=
	prop: function( name, value ) {=0A=
		return jQuery.access( this, jQuery.prop, name, value, arguments.length =
> 1 );=0A=
	},=0A=
=0A=
	removeProp: function( name ) {=0A=
		name =3D jQuery.propFix[ name ] || name;=0A=
		return this.each(function() {=0A=
			// try/catch handles cases where IE balks (such as removing a =
property on window)=0A=
			try {=0A=
				this[ name ] =3D undefined;=0A=
				delete this[ name ];=0A=
			} catch( e ) {}=0A=
		});=0A=
	},=0A=
=0A=
	addClass: function( value ) {=0A=
		var classes, elem, cur, clazz, j,=0A=
			i =3D 0,=0A=
			len =3D this.length,=0A=
			proceed =3D typeof value =3D=3D=3D "string" && value;=0A=
=0A=
		if ( jQuery.isFunction( value ) ) {=0A=
			return this.each(function( j ) {=0A=
				jQuery( this ).addClass( value.call( this, j, this.className ) );=0A=
			});=0A=
		}=0A=
=0A=
		if ( proceed ) {=0A=
			// The disjunction here is for better compressibility (see =
removeClass)=0A=
			classes =3D ( value || "" ).match( core_rnotwhite ) || [];=0A=
=0A=
			for ( ; i < len; i++ ) {=0A=
				elem =3D this[ i ];=0A=
				cur =3D elem.nodeType =3D=3D=3D 1 && ( elem.className ?=0A=
					( " " + elem.className + " " ).replace( rclass, " " ) :=0A=
					" "=0A=
				);=0A=
=0A=
				if ( cur ) {=0A=
					j =3D 0;=0A=
					while ( (clazz =3D classes[j++]) ) {=0A=
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {=0A=
							cur +=3D clazz + " ";=0A=
						}=0A=
					}=0A=
					elem.className =3D jQuery.trim( cur );=0A=
=0A=
				}=0A=
			}=0A=
		}=0A=
=0A=
		return this;=0A=
	},=0A=
=0A=
	removeClass: function( value ) {=0A=
		var classes, elem, cur, clazz, j,=0A=
			i =3D 0,=0A=
			len =3D this.length,=0A=
			proceed =3D arguments.length =3D=3D=3D 0 || typeof value =3D=3D=3D =
"string" && value;=0A=
=0A=
		if ( jQuery.isFunction( value ) ) {=0A=
			return this.each(function( j ) {=0A=
				jQuery( this ).removeClass( value.call( this, j, this.className ) );=0A=
			});=0A=
		}=0A=
		if ( proceed ) {=0A=
			classes =3D ( value || "" ).match( core_rnotwhite ) || [];=0A=
=0A=
			for ( ; i < len; i++ ) {=0A=
				elem =3D this[ i ];=0A=
				// This expression is here for better compressibility (see addClass)=0A=
				cur =3D elem.nodeType =3D=3D=3D 1 && ( elem.className ?=0A=
					( " " + elem.className + " " ).replace( rclass, " " ) :=0A=
					""=0A=
				);=0A=
=0A=
				if ( cur ) {=0A=
					j =3D 0;=0A=
					while ( (clazz =3D classes[j++]) ) {=0A=
						// Remove *all* instances=0A=
						while ( cur.indexOf( " " + clazz + " " ) >=3D 0 ) {=0A=
							cur =3D cur.replace( " " + clazz + " ", " " );=0A=
						}=0A=
					}=0A=
					elem.className =3D value ? jQuery.trim( cur ) : "";=0A=
				}=0A=
			}=0A=
		}=0A=
=0A=
		return this;=0A=
	},=0A=
=0A=
	toggleClass: function( value, stateVal ) {=0A=
		var type =3D typeof value,=0A=
			isBool =3D typeof stateVal =3D=3D=3D "boolean";=0A=
=0A=
		if ( jQuery.isFunction( value ) ) {=0A=
			return this.each(function( i ) {=0A=
				jQuery( this ).toggleClass( value.call(this, i, this.className, =
stateVal), stateVal );=0A=
			});=0A=
		}=0A=
=0A=
		return this.each(function() {=0A=
			if ( type =3D=3D=3D "string" ) {=0A=
				// toggle individual class names=0A=
				var className,=0A=
					i =3D 0,=0A=
					self =3D jQuery( this ),=0A=
					state =3D stateVal,=0A=
					classNames =3D value.match( core_rnotwhite ) || [];=0A=
=0A=
				while ( (className =3D classNames[ i++ ]) ) {=0A=
					// check each className given, space separated list=0A=
					state =3D isBool ? state : !self.hasClass( className );=0A=
					self[ state ? "addClass" : "removeClass" ]( className );=0A=
				}=0A=
=0A=
			// Toggle whole class name=0A=
			} else if ( type =3D=3D=3D core_strundefined || type =3D=3D=3D =
"boolean" ) {=0A=
				if ( this.className ) {=0A=
					// store className if set=0A=
					jQuery._data( this, "__className__", this.className );=0A=
				}=0A=
=0A=
				// If the element has a class name or if we're passed "false",=0A=
				// then remove the whole classname (if there was one, the above =
saved it).=0A=
				// Otherwise bring back whatever was previously saved (if anything),=0A=
				// falling back to the empty string if nothing was stored.=0A=
				this.className =3D this.className || value =3D=3D=3D false ? "" : =
jQuery._data( this, "__className__" ) || "";=0A=
			}=0A=
		});=0A=
	},=0A=
=0A=
	hasClass: function( selector ) {=0A=
		var className =3D " " + selector + " ",=0A=
			i =3D 0,=0A=
			l =3D this.length;=0A=
		for ( ; i < l; i++ ) {=0A=
			if ( this[i].nodeType =3D=3D=3D 1 && (" " + this[i].className + " =
").replace(rclass, " ").indexOf( className ) >=3D 0 ) {=0A=
				return true;=0A=
			}=0A=
		}=0A=
=0A=
		return false;=0A=
	},=0A=
=0A=
	val: function( value ) {=0A=
		var ret, hooks, isFunction,=0A=
			elem =3D this[0];=0A=
=0A=
		if ( !arguments.length ) {=0A=
			if ( elem ) {=0A=
				hooks =3D jQuery.valHooks[ elem.type ] || jQuery.valHooks[ =
elem.nodeName.toLowerCase() ];=0A=
=0A=
				if ( hooks && "get" in hooks && (ret =3D hooks.get( elem, "value" )) =
!=3D=3D undefined ) {=0A=
					return ret;=0A=
				}=0A=
=0A=
				ret =3D elem.value;=0A=
=0A=
				return typeof ret =3D=3D=3D "string" ?=0A=
					// handle most common string cases=0A=
					ret.replace(rreturn, "") :=0A=
					// handle cases where value is null/undef or number=0A=
					ret =3D=3D null ? "" : ret;=0A=
			}=0A=
=0A=
			return;=0A=
		}=0A=
=0A=
		isFunction =3D jQuery.isFunction( value );=0A=
=0A=
		return this.each(function( i ) {=0A=
			var val,=0A=
				self =3D jQuery(this);=0A=
=0A=
			if ( this.nodeType !=3D=3D 1 ) {=0A=
				return;=0A=
			}=0A=
=0A=
			if ( isFunction ) {=0A=
				val =3D value.call( this, i, self.val() );=0A=
			} else {=0A=
				val =3D value;=0A=
			}=0A=
=0A=
			// Treat null/undefined as ""; convert numbers to string=0A=
			if ( val =3D=3D null ) {=0A=
				val =3D "";=0A=
			} else if ( typeof val =3D=3D=3D "number" ) {=0A=
				val +=3D "";=0A=
			} else if ( jQuery.isArray( val ) ) {=0A=
				val =3D jQuery.map(val, function ( value ) {=0A=
					return value =3D=3D null ? "" : value + "";=0A=
				});=0A=
			}=0A=
=0A=
			hooks =3D jQuery.valHooks[ this.type ] || jQuery.valHooks[ =
this.nodeName.toLowerCase() ];=0A=
=0A=
			// If set returns undefined, fall back to normal setting=0A=
			if ( !hooks || !("set" in hooks) || hooks.set( this, val, "value" ) =
=3D=3D=3D undefined ) {=0A=
				this.value =3D val;=0A=
			}=0A=
		});=0A=
	}=0A=
});=0A=
=0A=
jQuery.extend({=0A=
	valHooks: {=0A=
		option: {=0A=
			get: function( elem ) {=0A=
				// attributes.value is undefined in Blackberry 4.7 but=0A=
				// uses .value. See #6932=0A=
				var val =3D elem.attributes.value;=0A=
				return !val || val.specified ? elem.value : elem.text;=0A=
			}=0A=
		},=0A=
		select: {=0A=
			get: function( elem ) {=0A=
				var value, option,=0A=
					options =3D elem.options,=0A=
					index =3D elem.selectedIndex,=0A=
					one =3D elem.type =3D=3D=3D "select-one" || index < 0,=0A=
					values =3D one ? null : [],=0A=
					max =3D one ? index + 1 : options.length,=0A=
					i =3D index < 0 ?=0A=
						max :=0A=
						one ? index : 0;=0A=
=0A=
				// Loop through all the selected options=0A=
				for ( ; i < max; i++ ) {=0A=
					option =3D options[ i ];=0A=
=0A=
					// oldIE doesn't update selected after form reset (#2551)=0A=
					if ( ( option.selected || i =3D=3D=3D index ) &&=0A=
							// Don't return options that are disabled or in a disabled =
optgroup=0A=
							( jQuery.support.optDisabled ? !option.disabled : =
option.getAttribute("disabled") =3D=3D=3D null ) &&=0A=
							( !option.parentNode.disabled || !jQuery.nodeName( =
option.parentNode, "optgroup" ) ) ) {=0A=
=0A=
						// Get the specific value for the option=0A=
						value =3D jQuery( option ).val();=0A=
=0A=
						// We don't need an array for one selects=0A=
						if ( one ) {=0A=
							return value;=0A=
						}=0A=
=0A=
						// Multi-Selects return an array=0A=
						values.push( value );=0A=
					}=0A=
				}=0A=
=0A=
				return values;=0A=
			},=0A=
=0A=
			set: function( elem, value ) {=0A=
				var values =3D jQuery.makeArray( value );=0A=
=0A=
				jQuery(elem).find("option").each(function() {=0A=
					this.selected =3D jQuery.inArray( jQuery(this).val(), values ) >=3D =
0;=0A=
				});=0A=
=0A=
				if ( !values.length ) {=0A=
					elem.selectedIndex =3D -1;=0A=
				}=0A=
				return values;=0A=
			}=0A=
		}=0A=
	},=0A=
=0A=
	attr: function( elem, name, value ) {=0A=
		var hooks, notxml, ret,=0A=
			nType =3D elem.nodeType;=0A=
=0A=
		// don't get/set attributes on text, comment and attribute nodes=0A=
		if ( !elem || nType =3D=3D=3D 3 || nType =3D=3D=3D 8 || nType =
=3D=3D=3D 2 ) {=0A=
			return;=0A=
		}=0A=
=0A=
		// Fallback to prop when attributes are not supported=0A=
		if ( typeof elem.getAttribute =3D=3D=3D core_strundefined ) {=0A=
			return jQuery.prop( elem, name, value );=0A=
		}=0A=
=0A=
		notxml =3D nType !=3D=3D 1 || !jQuery.isXMLDoc( elem );=0A=
=0A=
		// All attributes are lowercase=0A=
		// Grab necessary hook if one is defined=0A=
		if ( notxml ) {=0A=
			name =3D name.toLowerCase();=0A=
			hooks =3D jQuery.attrHooks[ name ] || ( rboolean.test( name ) ? =
boolHook : nodeHook );=0A=
		}=0A=
=0A=
		if ( value !=3D=3D undefined ) {=0A=
=0A=
			if ( value =3D=3D=3D null ) {=0A=
				jQuery.removeAttr( elem, name );=0A=
=0A=
			} else if ( hooks && notxml && "set" in hooks && (ret =3D hooks.set( =
elem, value, name )) !=3D=3D undefined ) {=0A=
				return ret;=0A=
=0A=
			} else {=0A=
				elem.setAttribute( name, value + "" );=0A=
				return value;=0A=
			}=0A=
=0A=
		} else if ( hooks && notxml && "get" in hooks && (ret =3D hooks.get( =
elem, name )) !=3D=3D null ) {=0A=
			return ret;=0A=
=0A=
		} else {=0A=
=0A=
			// In IE9+, Flash objects don't have .getAttribute (#12945)=0A=
			// Support: IE9+=0A=
			if ( typeof elem.getAttribute !=3D=3D core_strundefined ) {=0A=
				ret =3D  elem.getAttribute( name );=0A=
			}=0A=
=0A=
			// Non-existent attributes return null, we normalize to undefined=0A=
			return ret =3D=3D null ?=0A=
				undefined :=0A=
				ret;=0A=
		}=0A=
	},=0A=
=0A=
	removeAttr: function( elem, value ) {=0A=
		var name, propName,=0A=
			i =3D 0,=0A=
			attrNames =3D value && value.match( core_rnotwhite );=0A=
=0A=
		if ( attrNames && elem.nodeType =3D=3D=3D 1 ) {=0A=
			while ( (name =3D attrNames[i++]) ) {=0A=
				propName =3D jQuery.propFix[ name ] || name;=0A=
=0A=
				// Boolean attributes get special treatment (#10870)=0A=
				if ( rboolean.test( name ) ) {=0A=
					// Set corresponding property to false for boolean attributes=0A=
					// Also clear defaultChecked/defaultSelected (if appropriate) for =
IE<8=0A=
					if ( !getSetAttribute && ruseDefault.test( name ) ) {=0A=
						elem[ jQuery.camelCase( "default-" + name ) ] =3D=0A=
							elem[ propName ] =3D false;=0A=
					} else {=0A=
						elem[ propName ] =3D false;=0A=
					}=0A=
=0A=
				// See #9699 for explanation of this approach (setting first, then =
removal)=0A=
				} else {=0A=
					jQuery.attr( elem, name, "" );=0A=
				}=0A=
=0A=
				elem.removeAttribute( getSetAttribute ? name : propName );=0A=
			}=0A=
		}=0A=
	},=0A=
=0A=
	attrHooks: {=0A=
		type: {=0A=
			set: function( elem, value ) {=0A=
				if ( !jQuery.support.radioValue && value =3D=3D=3D "radio" && =
jQuery.nodeName(elem, "input") ) {=0A=
					// Setting the type on a radio button after the value resets the =
value in IE6-9=0A=
					// Reset value to default in case type is set after value during =
creation=0A=
					var val =3D elem.value;=0A=
					elem.setAttribute( "type", value );=0A=
					if ( val ) {=0A=
						elem.value =3D val;=0A=
					}=0A=
					return value;=0A=
				}=0A=
			}=0A=
		}=0A=
	},=0A=
=0A=
	propFix: {=0A=
		tabindex: "tabIndex",=0A=
		readonly: "readOnly",=0A=
		"for": "htmlFor",=0A=
		"class": "className",=0A=
		maxlength: "maxLength",=0A=
		cellspacing: "cellSpacing",=0A=
		cellpadding: "cellPadding",=0A=
		rowspan: "rowSpan",=0A=
		colspan: "colSpan",=0A=
		usemap: "useMap",=0A=
		frameborder: "frameBorder",=0A=
		contenteditable: "contentEditable"=0A=
	},=0A=
=0A=
	prop: function( elem, name, value ) {=0A=
		var ret, hooks, notxml,=0A=
			nType =3D elem.nodeType;=0A=
=0A=
		// don't get/set properties on text, comment and attribute nodes=0A=
		if ( !elem || nType =3D=3D=3D 3 || nType =3D=3D=3D 8 || nType =
=3D=3D=3D 2 ) {=0A=
			return;=0A=
		}=0A=
=0A=
		notxml =3D nType !=3D=3D 1 || !jQuery.isXMLDoc( elem );=0A=
=0A=
		if ( notxml ) {=0A=
			// Fix name and attach hooks=0A=
			name =3D jQuery.propFix[ name ] || name;=0A=
			hooks =3D jQuery.propHooks[ name ];=0A=
		}=0A=
=0A=
		if ( value !=3D=3D undefined ) {=0A=
			if ( hooks && "set" in hooks && (ret =3D hooks.set( elem, value, name =
)) !=3D=3D undefined ) {=0A=
				return ret;=0A=
=0A=
			} else {=0A=
				return ( elem[ name ] =3D value );=0A=
			}=0A=
=0A=
		} else {=0A=
			if ( hooks && "get" in hooks && (ret =3D hooks.get( elem, name )) =
!=3D=3D null ) {=0A=
				return ret;=0A=
=0A=
			} else {=0A=
				return elem[ name ];=0A=
			}=0A=
		}=0A=
	},=0A=
=0A=
	propHooks: {=0A=
		tabIndex: {=0A=
			get: function( elem ) {=0A=
				// elem.tabIndex doesn't always return the correct value when it =
hasn't been explicitly set=0A=
				// =
http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabi=
ndex-values-with-javascript/=0A=
				var attributeNode =3D elem.getAttributeNode("tabindex");=0A=
=0A=
				return attributeNode && attributeNode.specified ?=0A=
					parseInt( attributeNode.value, 10 ) :=0A=
					rfocusable.test( elem.nodeName ) || rclickable.test( elem.nodeName =
) && elem.href ?=0A=
						0 :=0A=
						undefined;=0A=
			}=0A=
		}=0A=
	}=0A=
});=0A=
=0A=
// Hook for boolean attributes=0A=
boolHook =3D {=0A=
	get: function( elem, name ) {=0A=
		var=0A=
			// Use .prop to determine if this attribute is understood as boolean=0A=
			prop =3D jQuery.prop( elem, name ),=0A=
=0A=
			// Fetch it accordingly=0A=
			attr =3D typeof prop =3D=3D=3D "boolean" && elem.getAttribute( name ),=0A=
			detail =3D typeof prop =3D=3D=3D "boolean" ?=0A=
=0A=
				getSetInput && getSetAttribute ?=0A=
					attr !=3D null :=0A=
					// oldIE fabricates an empty string for missing boolean attributes=0A=
					// and conflates checked/selected into attroperties=0A=
					ruseDefault.test( name ) ?=0A=
						elem[ jQuery.camelCase( "default-" + name ) ] :=0A=
						!!attr :=0A=
=0A=
				// fetch an attribute node for properties not recognized as boolean=0A=
				elem.getAttributeNode( name );=0A=
=0A=
		return detail && detail.value !=3D=3D false ?=0A=
			name.toLowerCase() :=0A=
			undefined;=0A=
	},=0A=
	set: function( elem, value, name ) {=0A=
		if ( value =3D=3D=3D false ) {=0A=
			// Remove boolean attributes when set to false=0A=
			jQuery.removeAttr( elem, name );=0A=
		} else if ( getSetInput && getSetAttribute || !ruseDefault.test( name =
) ) {=0A=
			// IE<8 needs the *property* name=0A=
			elem.setAttribute( !getSetAttribute && jQuery.propFix[ name ] || =
name, name );=0A=
=0A=
		// Use defaultChecked and defaultSelected for oldIE=0A=
		} else {=0A=
			elem[ jQuery.camelCase( "default-" + name ) ] =3D elem[ name ] =3D =
true;=0A=
		}=0A=
=0A=
		return name;=0A=
	}=0A=
};=0A=
=0A=
// fix oldIE value attroperty=0A=
if ( !getSetInput || !getSetAttribute ) {=0A=
	jQuery.attrHooks.value =3D {=0A=
		get: function( elem, name ) {=0A=
			var ret =3D elem.getAttributeNode( name );=0A=
			return jQuery.nodeName( elem, "input" ) ?=0A=
=0A=
				// Ignore the value *property* by using defaultValue=0A=
				elem.defaultValue :=0A=
=0A=
				ret && ret.specified ? ret.value : undefined;=0A=
		},=0A=
		set: function( elem, value, name ) {=0A=
			if ( jQuery.nodeName( elem, "input" ) ) {=0A=
				// Does not return so that setAttribute is also used=0A=
				elem.defaultValue =3D value;=0A=
			} else {=0A=
				// Use nodeHook if defined (#1954); otherwise setAttribute is fine=0A=
				return nodeHook && nodeHook.set( elem, value, name );=0A=
			}=0A=
		}=0A=
	};=0A=
}=0A=
=0A=
// IE6/7 do not support getting/setting some attributes with =
get/setAttribute=0A=
if ( !getSetAttribute ) {=0A=
=0A=
	// Use this for any attribute in IE6/7=0A=
	// This fixes almost every IE6/7 issue=0A=
	nodeHook =3D jQuery.valHooks.button =3D {=0A=
		get: function( elem, name ) {=0A=
			var ret =3D elem.getAttributeNode( name );=0A=
			return ret && ( name =3D=3D=3D "id" || name =3D=3D=3D "name" || name =
=3D=3D=3D "coords" ? ret.value !=3D=3D "" : ret.specified ) ?=0A=
				ret.value :=0A=
				undefined;=0A=
		},=0A=
		set: function( elem, value, name ) {=0A=
			// Set the existing or create a new attribute node=0A=
			var ret =3D elem.getAttributeNode( name );=0A=
			if ( !ret ) {=0A=
				elem.setAttributeNode(=0A=
					(ret =3D elem.ownerDocument.createAttribute( name ))=0A=
				);=0A=
			}=0A=
=0A=
			ret.value =3D value +=3D "";=0A=
=0A=
			// Break association with cloned elements by also using setAttribute =
(#9646)=0A=
			return name =3D=3D=3D "value" || value =3D=3D=3D elem.getAttribute( =
name ) ?=0A=
				value :=0A=
				undefined;=0A=
		}=0A=
	};=0A=
=0A=
	// Set contenteditable to false on removals(#10429)=0A=
	// Setting to empty string throws an error as an invalid value=0A=
	jQuery.attrHooks.contenteditable =3D {=0A=
		get: nodeHook.get,=0A=
		set: function( elem, value, name ) {=0A=
			nodeHook.set( elem, value =3D=3D=3D "" ? false : value, name );=0A=
		}=0A=
	};=0A=
=0A=
	// Set width and height to auto instead of 0 on empty string( Bug #8150 =
)=0A=
	// This is for removals=0A=
	jQuery.each([ "width", "height" ], function( i, name ) {=0A=
		jQuery.attrHooks[ name ] =3D jQuery.extend( jQuery.attrHooks[ name ], {=0A=
			set: function( elem, value ) {=0A=
				if ( value =3D=3D=3D "" ) {=0A=
					elem.setAttribute( name, "auto" );=0A=
					return value;=0A=
				}=0A=
			}=0A=
		});=0A=
	});=0A=
}=0A=
=0A=
=0A=
// Some attributes require a special call on IE=0A=
// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx=0A=
if ( !jQuery.support.hrefNormalized ) {=0A=
	jQuery.each([ "href", "src", "width", "height" ], function( i, name ) {=0A=
		jQuery.attrHooks[ name ] =3D jQuery.extend( jQuery.attrHooks[ name ], {=0A=
			get: function( elem ) {=0A=
				var ret =3D elem.getAttribute( name, 2 );=0A=
				return ret =3D=3D null ? undefined : ret;=0A=
			}=0A=
		});=0A=
	});=0A=
=0A=
	// href/src property should get the full normalized URL (#10299/#12915)=0A=
	jQuery.each([ "href", "src" ], function( i, name ) {=0A=
		jQuery.propHooks[ name ] =3D {=0A=
			get: function( elem ) {=0A=
				return elem.getAttribute( name, 4 );=0A=
			}=0A=
		};=0A=
	});=0A=
}=0A=
=0A=
if ( !jQuery.support.style ) {=0A=
	jQuery.attrHooks.style =3D {=0A=
		get: function( elem ) {=0A=
			// Return undefined in the case of empty string=0A=
			// Note: IE uppercases css property names, but if we were to =
.toLowerCase()=0A=
			// .cssText, that would destroy case senstitivity in URL's, like in =
"background"=0A=
			return elem.style.cssText || undefined;=0A=
		},=0A=
		set: function( elem, value ) {=0A=
			return ( elem.style.cssText =3D value + "" );=0A=
		}=0A=
	};=0A=
}=0A=
=0A=
// Safari mis-reports the default selected property of an option=0A=
// Accessing the parent's selectedIndex property fixes it=0A=
if ( !jQuery.support.optSelected ) {=0A=
	jQuery.propHooks.selected =3D jQuery.extend( jQuery.propHooks.selected, =
{=0A=
		get: function( elem ) {=0A=
			var parent =3D elem.parentNode;=0A=
=0A=
			if ( parent ) {=0A=
				parent.selectedIndex;=0A=
=0A=
				// Make sure that it also works with optgroups, see #5701=0A=
				if ( parent.parentNode ) {=0A=
					parent.parentNode.selectedIndex;=0A=
				}=0A=
			}=0A=
			return null;=0A=
		}=0A=
	});=0A=
}=0A=
=0A=
// IE6/7 call enctype encoding=0A=
if ( !jQuery.support.enctype ) {=0A=
	jQuery.propFix.enctype =3D "encoding";=0A=
}=0A=
=0A=
// Radios and checkboxes getter/setter=0A=
if ( !jQuery.support.checkOn ) {=0A=
	jQuery.each([ "radio", "checkbox" ], function() {=0A=
		jQuery.valHooks[ this ] =3D {=0A=
			get: function( elem ) {=0A=
				// Handle the case where in Webkit "" is returned instead of "on" if =
a value isn't specified=0A=
				return elem.getAttribute("value") =3D=3D=3D null ? "on" : elem.value;=0A=
			}=0A=
		};=0A=
	});=0A=
}=0A=
jQuery.each([ "radio", "checkbox" ], function() {=0A=
	jQuery.valHooks[ this ] =3D jQuery.extend( jQuery.valHooks[ this ], {=0A=
		set: function( elem, value ) {=0A=
			if ( jQuery.isArray( value ) ) {=0A=
				return ( elem.checked =3D jQuery.inArray( jQuery(elem).val(), value =
) >=3D 0 );=0A=
			}=0A=
		}=0A=
	});=0A=
});=0A=
var rformElems =3D /^(?:input|select|textarea)$/i,=0A=
	rkeyEvent =3D /^key/,=0A=
	rmouseEvent =3D /^(?:mouse|contextmenu)|click/,=0A=
	rfocusMorph =3D /^(?:focusinfocus|focusoutblur)$/,=0A=
	rtypenamespace =3D /^([^.]*)(?:\.(.+)|)$/;=0A=
=0A=
function returnTrue() {=0A=
	return true;=0A=
}=0A=
=0A=
function returnFalse() {=0A=
	return false;=0A=
}=0A=
=0A=
/*=0A=
 * Helper functions for managing events -- not part of the public =
interface.=0A=
 * Props to Dean Edwards' addEvent library for many of the ideas.=0A=
 */=0A=
jQuery.event =3D {=0A=
=0A=
	global: {},=0A=
=0A=
	add: function( elem, types, handler, data, selector ) {=0A=
		var tmp, events, t, handleObjIn,=0A=
			special, eventHandle, handleObj,=0A=
			handlers, type, namespaces, origType,=0A=
			elemData =3D jQuery._data( elem );=0A=
=0A=
		// Don't attach events to noData or text/comment nodes (but allow =
plain objects)=0A=
		if ( !elemData ) {=0A=
			return;=0A=
		}=0A=
=0A=
		// Caller can pass in an object of custom data in lieu of the handler=0A=
		if ( handler.handler ) {=0A=
			handleObjIn =3D handler;=0A=
			handler =3D handleObjIn.handler;=0A=
			selector =3D handleObjIn.selector;=0A=
		}=0A=
=0A=
		// Make sure that the handler has a unique ID, used to find/remove it =
later=0A=
		if ( !handler.guid ) {=0A=
			handler.guid =3D jQuery.guid++;=0A=
		}=0A=
=0A=
		// Init the element's event structure and main handler, if this is the =
first=0A=
		if ( !(events =3D elemData.events) ) {=0A=
			events =3D elemData.events =3D {};=0A=
		}=0A=
		if ( !(eventHandle =3D elemData.handle) ) {=0A=
			eventHandle =3D elemData.handle =3D function( e ) {=0A=
				// Discard the second event of a jQuery.event.trigger() and=0A=
				// when an event is called after a page has unloaded=0A=
				return typeof jQuery !=3D=3D core_strundefined && (!e || =
jQuery.event.triggered !=3D=3D e.type) ?=0A=
					jQuery.event.dispatch.apply( eventHandle.elem, arguments ) :=0A=
					undefined;=0A=
			};=0A=
			// Add elem as a property of the handle fn to prevent a memory leak =
with IE non-native events=0A=
			eventHandle.elem =3D elem;=0A=
		}=0A=
=0A=
		// Handle multiple events separated by a space=0A=
		// jQuery(...).bind("mouseover mouseout", fn);=0A=
		types =3D ( types || "" ).match( core_rnotwhite ) || [""];=0A=
		t =3D types.length;=0A=
		while ( t-- ) {=0A=
			tmp =3D rtypenamespace.exec( types[t] ) || [];=0A=
			type =3D origType =3D tmp[1];=0A=
			namespaces =3D ( tmp[2] || "" ).split( "." ).sort();=0A=
=0A=
			// If event changes its type, use the special event handlers for the =
changed type=0A=
			special =3D jQuery.event.special[ type ] || {};=0A=
=0A=
			// If selector defined, determine special event api type, otherwise =
given type=0A=
			type =3D ( selector ? special.delegateType : special.bindType ) || =
type;=0A=
=0A=
			// Update special based on newly reset type=0A=
			special =3D jQuery.event.special[ type ] || {};=0A=
=0A=
			// handleObj is passed to all event handlers=0A=
			handleObj =3D jQuery.extend({=0A=
				type: type,=0A=
				origType: origType,=0A=
				data: data,=0A=
				handler: handler,=0A=
				guid: handler.guid,=0A=
				selector: selector,=0A=
				needsContext: selector && jQuery.expr.match.needsContext.test( =
selector ),=0A=
				namespace: namespaces.join(".")=0A=
			}, handleObjIn );=0A=
=0A=
			// Init the event handler queue if we're the first=0A=
			if ( !(handlers =3D events[ type ]) ) {=0A=
				handlers =3D events[ type ] =3D [];=0A=
				handlers.delegateCount =3D 0;=0A=
=0A=
				// Only use addEventListener/attachEvent if the special events =
handler returns false=0A=
				if ( !special.setup || special.setup.call( elem, data, namespaces, =
eventHandle ) =3D=3D=3D false ) {=0A=
					// Bind the global event handler to the element=0A=
					if ( elem.addEventListener ) {=0A=
						elem.addEventListener( type, eventHandle, false );=0A=
=0A=
					} else if ( elem.attachEvent ) {=0A=
						elem.attachEvent( "on" + type, eventHandle );=0A=
					}=0A=
				}=0A=
			}=0A=
=0A=
			if ( special.add ) {=0A=
				special.add.call( elem, handleObj );=0A=
=0A=
				if ( !handleObj.handler.guid ) {=0A=
					handleObj.handler.guid =3D handler.guid;=0A=
				}=0A=
			}=0A=
=0A=
			// Add to the element's handler list, delegates in front=0A=
			if ( selector ) {=0A=
				handlers.splice( handlers.delegateCount++, 0, handleObj );=0A=
			} else {=0A=
				handlers.push( handleObj );=0A=
			}=0A=
=0A=
			// Keep track of which events have ever been used, for event =
optimization=0A=
			jQuery.event.global[ type ] =3D true;=0A=
		}=0A=
=0A=
		// Nullify elem to prevent memory leaks in IE=0A=
		elem =3D null;=0A=
	},=0A=
=0A=
	// Detach an event or set of events from an element=0A=
	remove: function( elem, types, handler, selector, mappedTypes ) {=0A=
		var j, handleObj, tmp,=0A=
			origCount, t, events,=0A=
			special, handlers, type,=0A=
			namespaces, origType,=0A=
			elemData =3D jQuery.hasData( elem ) && jQuery._data( elem );=0A=
=0A=
		if ( !elemData || !(events =3D elemData.events) ) {=0A=
			return;=0A=
		}=0A=
=0A=
		// Once for each type.namespace in types; type may be omitted=0A=
		types =3D ( types || "" ).match( core_rnotwhite ) || [""];=0A=
		t =3D types.length;=0A=
		while ( t-- ) {=0A=
			tmp =3D rtypenamespace.exec( types[t] ) || [];=0A=
			type =3D origType =3D tmp[1];=0A=
			namespaces =3D ( tmp[2] || "" ).split( "." ).sort();=0A=
=0A=
			// Unbind all events (on this namespace, if provided) for the element=0A=
			if ( !type ) {=0A=
				for ( type in events ) {=0A=
					jQuery.event.remove( elem, type + types[ t ], handler, selector, =
true );=0A=
				}=0A=
				continue;=0A=
			}=0A=
=0A=
			special =3D jQuery.event.special[ type ] || {};=0A=
			type =3D ( selector ? special.delegateType : special.bindType ) || =
type;=0A=
			handlers =3D events[ type ] || [];=0A=
			tmp =3D tmp[2] && new RegExp( "(^|\\.)" + =
namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)" );=0A=
=0A=
			// Remove matching events=0A=
			origCount =3D j =3D handlers.length;=0A=
			while ( j-- ) {=0A=
				handleObj =3D handlers[ j ];=0A=
=0A=
				if ( ( mappedTypes || origType =3D=3D=3D handleObj.origType ) &&=0A=
					( !handler || handler.guid =3D=3D=3D handleObj.guid ) &&=0A=
					( !tmp || tmp.test( handleObj.namespace ) ) &&=0A=
					( !selector || selector =3D=3D=3D handleObj.selector || selector =
=3D=3D=3D "**" && handleObj.selector ) ) {=0A=
					handlers.splice( j, 1 );=0A=
=0A=
					if ( handleObj.selector ) {=0A=
						handlers.delegateCount--;=0A=
					}=0A=
					if ( special.remove ) {=0A=
						special.remove.call( elem, handleObj );=0A=
					}=0A=
				}=0A=
			}=0A=
=0A=
			// Remove generic event handler if we removed something and no more =
handlers exist=0A=
			// (avoids potential for endless recursion during removal of special =
event handlers)=0A=
			if ( origCount && !handlers.length ) {=0A=
				if ( !special.teardown || special.teardown.call( elem, namespaces, =
elemData.handle ) =3D=3D=3D false ) {=0A=
					jQuery.removeEvent( elem, type, elemData.handle );=0A=
				}=0A=
=0A=
				delete events[ type ];=0A=
			}=0A=
		}=0A=
=0A=
		// Remove the expando if it's no longer used=0A=
		if ( jQuery.isEmptyObject( events ) ) {=0A=
			delete elemData.handle;=0A=
=0A=
			// removeData also checks for emptiness and clears the expando if =
empty=0A=
			// so use it instead of delete=0A=
			jQuery._removeData( elem, "events" );=0A=
		}=0A=
	},=0A=
=0A=
	trigger: function( event, data, elem, onlyHandlers ) {=0A=
		var handle, ontype, cur,=0A=
			bubbleType, special, tmp, i,=0A=
			eventPath =3D [ elem || document ],=0A=
			type =3D core_hasOwn.call( event, "type" ) ? event.type : event,=0A=
			namespaces =3D core_hasOwn.call( event, "namespace" ) ? =
event.namespace.split(".") : [];=0A=
=0A=
		cur =3D tmp =3D elem =3D elem || document;=0A=
=0A=
		// Don't do events on text and comment nodes=0A=
		if ( elem.nodeType =3D=3D=3D 3 || elem.nodeType =3D=3D=3D 8 ) {=0A=
			return;=0A=
		}=0A=
=0A=
		// focus/blur morphs to focusin/out; ensure we're not firing them =
right now=0A=
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {=0A=
			return;=0A=
		}=0A=
=0A=
		if ( type.indexOf(".") >=3D 0 ) {=0A=
			// Namespaced trigger; create a regexp to match event type in handle()=0A=
			namespaces =3D type.split(".");=0A=
			type =3D namespaces.shift();=0A=
			namespaces.sort();=0A=
		}=0A=
		ontype =3D type.indexOf(":") < 0 && "on" + type;=0A=
=0A=
		// Caller can pass in a jQuery.Event object, Object, or just an event =
type string=0A=
		event =3D event[ jQuery.expando ] ?=0A=
			event :=0A=
			new jQuery.Event( type, typeof event =3D=3D=3D "object" && event );=0A=
=0A=
		event.isTrigger =3D true;=0A=
		event.namespace =3D namespaces.join(".");=0A=
		event.namespace_re =3D event.namespace ?=0A=
			new RegExp( "(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)" =
) :=0A=
			null;=0A=
=0A=
		// Clean up the event in case it is being reused=0A=
		event.result =3D undefined;=0A=
		if ( !event.target ) {=0A=
			event.target =3D elem;=0A=
		}=0A=
=0A=
		// Clone any incoming data and prepend the event, creating the handler =
arg list=0A=
		data =3D data =3D=3D null ?=0A=
			[ event ] :=0A=
			jQuery.makeArray( data, [ event ] );=0A=
=0A=
		// Allow special events to draw outside the lines=0A=
		special =3D jQuery.event.special[ type ] || {};=0A=
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, =
data ) =3D=3D=3D false ) {=0A=
			return;=0A=
		}=0A=
=0A=
		// Determine event propagation path in advance, per W3C events spec =
(#9951)=0A=
		// Bubble up to document, then to window; watch for a global =
ownerDocument var (#9724)=0A=
		if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {=0A=
=0A=
			bubbleType =3D special.delegateType || type;=0A=
			if ( !rfocusMorph.test( bubbleType + type ) ) {=0A=
				cur =3D cur.parentNode;=0A=
			}=0A=
			for ( ; cur; cur =3D cur.parentNode ) {=0A=
				eventPath.push( cur );=0A=
				tmp =3D cur;=0A=
			}=0A=
=0A=
			// Only add window if we got to document (e.g., not plain obj or =
detached DOM)=0A=
			if ( tmp =3D=3D=3D (elem.ownerDocument || document) ) {=0A=
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );=0A=
			}=0A=
		}=0A=
=0A=
		// Fire handlers on the event path=0A=
		i =3D 0;=0A=
		while ( (cur =3D eventPath[i++]) && !event.isPropagationStopped() ) {=0A=
=0A=
			event.type =3D i > 1 ?=0A=
				bubbleType :=0A=
				special.bindType || type;=0A=
=0A=
			// jQuery handler=0A=
			handle =3D ( jQuery._data( cur, "events" ) || {} )[ event.type ] && =
jQuery._data( cur, "handle" );=0A=
			if ( handle ) {=0A=
				handle.apply( cur, data );=0A=
			}=0A=
=0A=
			// Native handler=0A=
			handle =3D ontype && cur[ ontype ];=0A=
			if ( handle && jQuery.acceptData( cur ) && handle.apply && =
handle.apply( cur, data ) =3D=3D=3D false ) {=0A=
				event.preventDefault();=0A=
			}=0A=
		}=0A=
		event.type =3D type;=0A=
=0A=
		// If nobody prevented the default action, do it now=0A=
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {=0A=
=0A=
			if ( (!special._default || special._default.apply( =
elem.ownerDocument, data ) =3D=3D=3D false) &&=0A=
				!(type =3D=3D=3D "click" && jQuery.nodeName( elem, "a" )) && =
jQuery.acceptData( elem ) ) {=0A=
=0A=
				// Call a native DOM method on the target with the same name name as =
the event.=0A=
				// Can't use an .isFunction() check here because IE6/7 fails that =
test.=0A=
				// Don't do default actions on window, that's where global variables =
be (#6170)=0A=
				if ( ontype && elem[ type ] && !jQuery.isWindow( elem ) ) {=0A=
=0A=
					// Don't re-trigger an onFOO event when we call its FOO() method=0A=
					tmp =3D elem[ ontype ];=0A=
=0A=
					if ( tmp ) {=0A=
						elem[ ontype ] =3D null;=0A=
					}=0A=
=0A=
					// Prevent re-triggering of the same event, since we already =
bubbled it above=0A=
					jQuery.event.triggered =3D type;=0A=
					try {=0A=
						elem[ type ]();=0A=
					} catch ( e ) {=0A=
						// IE<9 dies on focus/blur to hidden element (#1486,#12518)=0A=
						// only reproducible on winXP IE8 native, not IE9 in IE8 mode=0A=
					}=0A=
					jQuery.event.triggered =3D undefined;=0A=
=0A=
					if ( tmp ) {=0A=
						elem[ ontype ] =3D tmp;=0A=
					}=0A=
				}=0A=
			}=0A=
		}=0A=
=0A=
		return event.result;=0A=
	},=0A=
=0A=
	dispatch: function( event ) {=0A=
=0A=
		// Make a writable jQuery.Event from the native event object=0A=
		event =3D jQuery.event.fix( event );=0A=
=0A=
		var i, ret, handleObj, matched, j,=0A=
			handlerQueue =3D [],=0A=
			args =3D core_slice.call( arguments ),=0A=
			handlers =3D ( jQuery._data( this, "events" ) || {} )[ event.type ] =
|| [],=0A=
			special =3D jQuery.event.special[ event.type ] || {};=0A=
=0A=
		// Use the fix-ed jQuery.Event rather than the (read-only) native event=0A=
		args[0] =3D event;=0A=
		event.delegateTarget =3D this;=0A=
=0A=
		// Call the preDispatch hook for the mapped type, and let it bail if =
desired=0A=
		if ( special.preDispatch && special.preDispatch.call( this, event ) =
=3D=3D=3D false ) {=0A=
			return;=0A=
		}=0A=
=0A=
		// Determine handlers=0A=
		handlerQueue =3D jQuery.event.handlers.call( this, event, handlers );=0A=
=0A=
		// Run delegates first; they may want to stop propagation beneath us=0A=
		i =3D 0;=0A=
		while ( (matched =3D handlerQueue[ i++ ]) && =
!event.isPropagationStopped() ) {=0A=
			event.currentTarget =3D matched.elem;=0A=
=0A=
			j =3D 0;=0A=
			while ( (handleObj =3D matched.handlers[ j++ ]) && =
!event.isImmediatePropagationStopped() ) {=0A=
=0A=
				// Triggered event must either 1) have no namespace, or=0A=
				// 2) have namespace(s) a subset or equal to those in the bound =
event (both can have no namespace).=0A=
				if ( !event.namespace_re || event.namespace_re.test( =
handleObj.namespace ) ) {=0A=
=0A=
					event.handleObj =3D handleObj;=0A=
					event.data =3D handleObj.data;=0A=
=0A=
					ret =3D ( (jQuery.event.special[ handleObj.origType ] || {}).handle =
|| handleObj.handler )=0A=
							.apply( matched.elem, args );=0A=
=0A=
					if ( ret !=3D=3D undefined ) {=0A=
						if ( (event.result =3D ret) =3D=3D=3D false ) {=0A=
							event.preventDefault();=0A=
							event.stopPropagation();=0A=
						}=0A=
					}=0A=
				}=0A=
			}=0A=
		}=0A=
=0A=
		// Call the postDispatch hook for the mapped type=0A=
		if ( special.postDispatch ) {=0A=
			special.postDispatch.call( this, event );=0A=
		}=0A=
=0A=
		return event.result;=0A=
	},=0A=
=0A=
	handlers: function( event, handlers ) {=0A=
		var sel, handleObj, matches, i,=0A=
			handlerQueue =3D [],=0A=
			delegateCount =3D handlers.delegateCount,=0A=
			cur =3D event.target;=0A=
=0A=
		// Find delegate handlers=0A=
		// Black-hole SVG <use> instance trees (#13180)=0A=
		// Avoid non-left-click bubbling in Firefox (#3861)=0A=
		if ( delegateCount && cur.nodeType && (!event.button || event.type =
!=3D=3D "click") ) {=0A=
=0A=
			for ( ; cur !=3D this; cur =3D cur.parentNode || this ) {=0A=
=0A=
				// Don't check non-elements (#13208)=0A=
				// Don't process clicks on disabled elements (#6911, #8165, #11382, =
#11764)=0A=
				if ( cur.nodeType =3D=3D=3D 1 && (cur.disabled !=3D=3D true || =
event.type !=3D=3D "click") ) {=0A=
					matches =3D [];=0A=
					for ( i =3D 0; i < delegateCount; i++ ) {=0A=
						handleObj =3D handlers[ i ];=0A=
=0A=
						// Don't conflict with Object.prototype properties (#13203)=0A=
						sel =3D handleObj.selector + " ";=0A=
=0A=
						if ( matches[ sel ] =3D=3D=3D undefined ) {=0A=
							matches[ sel ] =3D handleObj.needsContext ?=0A=
								jQuery( sel, this ).index( cur ) >=3D 0 :=0A=
								jQuery.find( sel, this, null, [ cur ] ).length;=0A=
						}=0A=
						if ( matches[ sel ] ) {=0A=
							matches.push( handleObj );=0A=
						}=0A=
					}=0A=
					if ( matches.length ) {=0A=
						handlerQueue.push({ elem: cur, handlers: matches });=0A=
					}=0A=
				}=0A=
			}=0A=
		}=0A=
=0A=
		// Add the remaining (directly-bound) handlers=0A=
		if ( delegateCount < handlers.length ) {=0A=
			handlerQueue.push({ elem: this, handlers: handlers.slice( =
delegateCount ) });=0A=
		}=0A=
=0A=
		return handlerQueue;=0A=
	},=0A=
=0A=
	fix: function( event ) {=0A=
		if ( event[ jQuery.expando ] ) {=0A=
			return event;=0A=
		}=0A=
=0A=
		// Create a writable copy of the event object and normalize some =
properties=0A=
		var i, prop, copy,=0A=
			type =3D event.type,=0A=
			originalEvent =3D event,=0A=
			fixHook =3D this.fixHooks[ type ];=0A=
=0A=
		if ( !fixHook ) {=0A=
			this.fixHooks[ type ] =3D fixHook =3D=0A=
				rmouseEvent.test( type ) ? this.mouseHooks :=0A=
				rkeyEvent.test( type ) ? this.keyHooks :=0A=
				{};=0A=
		}=0A=
		copy =3D fixHook.props ? this.props.concat( fixHook.props ) : =
this.props;=0A=
=0A=
		event =3D new jQuery.Event( originalEvent );=0A=
=0A=
		i =3D copy.length;=0A=
		while ( i-- ) {=0A=
			prop =3D copy[ i ];=0A=
			event[ prop ] =3D originalEvent[ prop ];=0A=
		}=0A=
=0A=
		// Support: IE<9=0A=
		// Fix target property (#1925)=0A=
		if ( !event.target ) {=0A=
			event.target =3D originalEvent.srcElement || document;=0A=
		}=0A=
=0A=
		// Support: Chrome 23+, Safari?=0A=
		// Target should not be a text node (#504, #13143)=0A=
		if ( event.target.nodeType =3D=3D=3D 3 ) {=0A=
			event.target =3D event.target.parentNode;=0A=
		}=0A=
=0A=
		// Support: IE<9=0A=
		// For mouse/key events, metaKey=3D=3Dfalse if it's undefined (#3368, =
#11328)=0A=
		event.metaKey =3D !!event.metaKey;=0A=
=0A=
		return fixHook.filter ? fixHook.filter( event, originalEvent ) : event;=0A=
	},=0A=
=0A=
	// Includes some event props shared by KeyEvent and MouseEvent=0A=
	props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase =
metaKey relatedTarget shiftKey target timeStamp view which".split(" "),=0A=
=0A=
	fixHooks: {},=0A=
=0A=
	keyHooks: {=0A=
		props: "char charCode key keyCode".split(" "),=0A=
		filter: function( event, original ) {=0A=
=0A=
			// Add which for key events=0A=
			if ( event.which =3D=3D null ) {=0A=
				event.which =3D original.charCode !=3D null ? original.charCode : =
original.keyCode;=0A=
			}=0A=
=0A=
			return event;=0A=
		}=0A=
	},=0A=
=0A=
	mouseHooks: {=0A=
		props: "button buttons clientX clientY fromElement offsetX offsetY =
pageX pageY screenX screenY toElement".split(" "),=0A=
		filter: function( event, original ) {=0A=
			var body, eventDoc, doc,=0A=
				button =3D original.button,=0A=
				fromElement =3D original.fromElement;=0A=
=0A=
			// Calculate pageX/Y if missing and clientX/Y available=0A=
			if ( event.pageX =3D=3D null && original.clientX !=3D null ) {=0A=
				eventDoc =3D event.target.ownerDocument || document;=0A=
				doc =3D eventDoc.documentElement;=0A=
				body =3D eventDoc.body;=0A=
=0A=
				event.pageX =3D original.clientX + ( doc && doc.scrollLeft || body =
&& body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && =
body.clientLeft || 0 );=0A=
				event.pageY =3D original.clientY + ( doc && doc.scrollTop  || body =
&& body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && =
body.clientTop  || 0 );=0A=
			}=0A=
=0A=
			// Add relatedTarget, if necessary=0A=
			if ( !event.relatedTarget && fromElement ) {=0A=
				event.relatedTarget =3D fromElement =3D=3D=3D event.target ? =
original.toElement : fromElement;=0A=
			}=0A=
=0A=
			// Add which for click: 1 =3D=3D=3D left; 2 =3D=3D=3D middle; 3 =
=3D=3D=3D right=0A=
			// Note: button is not normalized, so don't use it=0A=
			if ( !event.which && button !=3D=3D undefined ) {=0A=
				event.which =3D ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? =
2 : 0 ) ) );=0A=
			}=0A=
=0A=
			return event;=0A=
		}=0A=
	},=0A=
=0A=
	special: {=0A=
		load: {=0A=
			// Prevent triggered image.load events from bubbling to window.load=0A=
			noBubble: true=0A=
		},=0A=
		click: {=0A=
			// For checkbox, fire native event so checked state will be right=0A=
			trigger: function() {=0A=
				if ( jQuery.nodeName( this, "input" ) && this.type =3D=3D=3D =
"checkbox" && this.click ) {=0A=
					this.click();=0A=
					return false;=0A=
				}=0A=
			}=0A=
		},=0A=
		focus: {=0A=
			// Fire native event if possible so blur/focus sequence is correct=0A=
			trigger: function() {=0A=
				if ( this !=3D=3D document.activeElement && this.focus ) {=0A=
					try {=0A=
						this.focus();=0A=
						return false;=0A=
					} catch ( e ) {=0A=
						// Support: IE<9=0A=
						// If we error on focus to hidden element (#1486, #12518),=0A=
						// let .trigger() run the handlers=0A=
					}=0A=
				}=0A=
			},=0A=
			delegateType: "focusin"=0A=
		},=0A=
		blur: {=0A=
			trigger: function() {=0A=
				if ( this =3D=3D=3D document.activeElement && this.blur ) {=0A=
					this.blur();=0A=
					return false;=0A=
				}=0A=
			},=0A=
			delegateType: "focusout"=0A=
		},=0A=
=0A=
		beforeunload: {=0A=
			postDispatch: function( event ) {=0A=
=0A=
				// Even when returnValue equals to undefined Firefox will still show =
alert=0A=
				if ( event.result !=3D=3D undefined ) {=0A=
					event.originalEvent.returnValue =3D event.result;=0A=
				}=0A=
			}=0A=
		}=0A=
	},=0A=
=0A=
	simulate: function( type, elem, event, bubble ) {=0A=
		// Piggyback on a donor event to simulate a different one.=0A=
		// Fake originalEvent to avoid donor's stopPropagation, but if the=0A=
		// simulated event prevents default then we do the same on the donor.=0A=
		var e =3D jQuery.extend(=0A=
			new jQuery.Event(),=0A=
			event,=0A=
			{ type: type,=0A=
				isSimulated: true,=0A=
				originalEvent: {}=0A=
			}=0A=
		);=0A=
		if ( bubble ) {=0A=
			jQuery.event.trigger( e, null, elem );=0A=
		} else {=0A=
			jQuery.event.dispatch.call( elem, e );=0A=
		}=0A=
		if ( e.isDefaultPrevented() ) {=0A=
			event.preventDefault();=0A=
		}=0A=
	}=0A=
};=0A=
=0A=
jQuery.removeEvent =3D document.removeEventListener ?=0A=
	function( elem, type, handle ) {=0A=
		if ( elem.removeEventListener ) {=0A=
			elem.removeEventListener( type, handle, false );=0A=
		}=0A=
	} :=0A=
	function( elem, type, handle ) {=0A=
		var name =3D "on" + type;=0A=
=0A=
		if ( elem.detachEvent ) {=0A=
=0A=
			// #8545, #7054, preventing memory leaks for custom events in IE6-8=0A=
			// detachEvent needed property on element, by name of that event, to =
properly expose it to GC=0A=
			if ( typeof elem[ name ] =3D=3D=3D core_strundefined ) {=0A=
				elem[ name ] =3D null;=0A=
			}=0A=
=0A=
			elem.detachEvent( name, handle );=0A=
		}=0A=
	};=0A=
=0A=
jQuery.Event =3D function( src, props ) {=0A=
	// Allow instantiation without the 'new' keyword=0A=
	if ( !(this instanceof jQuery.Event) ) {=0A=
		return new jQuery.Event( src, props );=0A=
	}=0A=
=0A=
	// Event object=0A=
	if ( src && src.type ) {=0A=
		this.originalEvent =3D src;=0A=
		this.type =3D src.type;=0A=
=0A=
		// Events bubbling up the document may have been marked as prevented=0A=
		// by a handler lower down the tree; reflect the correct value.=0A=
		this.isDefaultPrevented =3D ( src.defaultPrevented || src.returnValue =
=3D=3D=3D false ||=0A=
			src.getPreventDefault && src.getPreventDefault() ) ? returnTrue : =
returnFalse;=0A=
=0A=
	// Event type=0A=
	} else {=0A=
		this.type =3D src;=0A=
	}=0A=
=0A=
	// Put explicitly provided properties onto the event object=0A=
	if ( props ) {=0A=
		jQuery.extend( this, props );=0A=
	}=0A=
=0A=
	// Create a timestamp if incoming event doesn't have one=0A=
	this.timeStamp =3D src && src.timeStamp || jQuery.now();=0A=
=0A=
	// Mark it as fixed=0A=
	this[ jQuery.expando ] =3D true;=0A=
};=0A=
=0A=
// jQuery.Event is based on DOM3 Events as specified by the ECMAScript =
Language Binding=0A=
// =
http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-bind=
ing.html=0A=
jQuery.Event.prototype =3D {=0A=
	isDefaultPrevented: returnFalse,=0A=
	isPropagationStopped: returnFalse,=0A=
	isImmediatePropagationStopped: returnFalse,=0A=
=0A=
	preventDefault: function() {=0A=
		var e =3D this.originalEvent;=0A=
=0A=
		this.isDefaultPrevented =3D returnTrue;=0A=
		if ( !e ) {=0A=
			return;=0A=
		}=0A=
=0A=
		// If preventDefault exists, run it on the original event=0A=
		if ( e.preventDefault ) {=0A=
			e.preventDefault();=0A=
=0A=
		// Support: IE=0A=
		// Otherwise set the returnValue property of the original event to =
false=0A=
		} else {=0A=
			e.returnValue =3D false;=0A=
		}=0A=
	},=0A=
	stopPropagation: function() {=0A=
		var e =3D this.originalEvent;=0A=
=0A=
		this.isPropagationStopped =3D returnTrue;=0A=
		if ( !e ) {=0A=
			return;=0A=
		}=0A=
		// If stopPropagation exists, run it on the original event=0A=
		if ( e.stopPropagation ) {=0A=
			e.stopPropagation();=0A=
		}=0A=
=0A=
		// Support: IE=0A=
		// Set the cancelBubble property of the original event to true=0A=
		e.cancelBubble =3D true;=0A=
	},=0A=
	stopImmediatePropagation: function() {=0A=
		this.isImmediatePropagationStopped =3D returnTrue;=0A=
		this.stopPropagation();=0A=
	}=0A=
};=0A=
=0A=
// Create mouseenter/leave events using mouseover/out and event-time =
checks=0A=
jQuery.each({=0A=
	mouseenter: "mouseover",=0A=
	mouseleave: "mouseout"=0A=
}, function( orig, fix ) {=0A=
	jQuery.event.special[ orig ] =3D {=0A=
		delegateType: fix,=0A=
		bindType: fix,=0A=
=0A=
		handle: function( event ) {=0A=
			var ret,=0A=
				target =3D this,=0A=
				related =3D event.relatedTarget,=0A=
				handleObj =3D event.handleObj;=0A=
=0A=
			// For mousenter/leave call the handler if related is outside the =
target.=0A=
			// NB: No relatedTarget if the mouse left/entered the browser window=0A=
			if ( !related || (related !=3D=3D target && !jQuery.contains( target, =
related )) ) {=0A=
				event.type =3D handleObj.origType;=0A=
				ret =3D handleObj.handler.apply( this, arguments );=0A=
				event.type =3D fix;=0A=
			}=0A=
			return ret;=0A=
		}=0A=
	};=0A=
});=0A=
=0A=
// IE submit delegation=0A=
if ( !jQuery.support.submitBubbles ) {=0A=
=0A=
	jQuery.event.special.submit =3D {=0A=
		setup: function() {=0A=
			// Only need this for delegated form submit events=0A=
			if ( jQuery.nodeName( this, "form" ) ) {=0A=
				return false;=0A=
			}=0A=
=0A=
			// Lazy-add a submit handler when a descendant form may potentially =
be submitted=0A=
			jQuery.event.add( this, "click._submit keypress._submit", function( e =
) {=0A=
				// Node name check avoids a VML-related crash in IE (#9807)=0A=
				var elem =3D e.target,=0A=
					form =3D jQuery.nodeName( elem, "input" ) || jQuery.nodeName( elem, =
"button" ) ? elem.form : undefined;=0A=
				if ( form && !jQuery._data( form, "submitBubbles" ) ) {=0A=
					jQuery.event.add( form, "submit._submit", function( event ) {=0A=
						event._submit_bubble =3D true;=0A=
					});=0A=
					jQuery._data( form, "submitBubbles", true );=0A=
				}=0A=
			});=0A=
			// return undefined since we don't need an event listener=0A=
		},=0A=
=0A=
		postDispatch: function( event ) {=0A=
			// If form was submitted by the user, bubble the event up the tree=0A=
			if ( event._submit_bubble ) {=0A=
				delete event._submit_bubble;=0A=
				if ( this.parentNode && !event.isTrigger ) {=0A=
					jQuery.event.simulate( "submit", this.parentNode, event, true );=0A=
				}=0A=
			}=0A=
		},=0A=
=0A=
		teardown: function() {=0A=
			// Only need this for delegated form submit events=0A=
			if ( jQuery.nodeName( this, "form" ) ) {=0A=
				return false;=0A=
			}=0A=
=0A=
			// Remove delegated handlers; cleanData eventually reaps submit =
handlers attached above=0A=
			jQuery.event.remove( this, "._submit" );=0A=
		}=0A=
	};=0A=
}=0A=
=0A=
// IE change delegation and checkbox/radio fix=0A=
if ( !jQuery.support.changeBubbles ) {=0A=
=0A=
	jQuery.event.special.change =3D {=0A=
=0A=
		setup: function() {=0A=
=0A=
			if ( rformElems.test( this.nodeName ) ) {=0A=
				// IE doesn't fire change on a check/radio until blur; trigger it on =
click=0A=
				// after a propertychange. Eat the blur-change in =
special.change.handle.=0A=
				// This still fires onchange a second time for check/radio after =
blur.=0A=
				if ( this.type =3D=3D=3D "checkbox" || this.type =3D=3D=3D "radio" ) =
{=0A=
					jQuery.event.add( this, "propertychange._change", function( event ) =
{=0A=
						if ( event.originalEvent.propertyName =3D=3D=3D "checked" ) {=0A=
							this._just_changed =3D true;=0A=
						}=0A=
					});=0A=
					jQuery.event.add( this, "click._change", function( event ) {=0A=
						if ( this._just_changed && !event.isTrigger ) {=0A=
							this._just_changed =3D false;=0A=
						}=0A=
						// Allow triggered, simulated change events (#11500)=0A=
						jQuery.event.simulate( "change", this, event, true );=0A=
					});=0A=
				}=0A=
				return false;=0A=
			}=0A=
			// Delegated event; lazy-add a change handler on descendant inputs=0A=
			jQuery.event.add( this, "beforeactivate._change", function( e ) {=0A=
				var elem =3D e.target;=0A=
=0A=
				if ( rformElems.test( elem.nodeName ) && !jQuery._data( elem, =
"changeBubbles" ) ) {=0A=
					jQuery.event.add( elem, "change._change", function( event ) {=0A=
						if ( this.parentNode && !event.isSimulated && !event.isTrigger ) {=0A=
							jQuery.event.simulate( "change", this.parentNode, event, true );=0A=
						}=0A=
					});=0A=
					jQuery._data( elem, "changeBubbles", true );=0A=
				}=0A=
			});=0A=
		},=0A=
=0A=
		handle: function( event ) {=0A=
			var elem =3D event.target;=0A=
=0A=
			// Swallow native change events from checkbox/radio, we already =
triggered them above=0A=
			if ( this !=3D=3D elem || event.isSimulated || event.isTrigger || =
(elem.type !=3D=3D "radio" && elem.type !=3D=3D "checkbox") ) {=0A=
				return event.handleObj.handler.apply( this, arguments );=0A=
			}=0A=
		},=0A=
=0A=
		teardown: function() {=0A=
			jQuery.event.remove( this, "._change" );=0A=
=0A=
			return !rformElems.test( this.nodeName );=0A=
		}=0A=
	};=0A=
}=0A=
=0A=
// Create "bubbling" focus and blur events=0A=
if ( !jQuery.support.focusinBubbles ) {=0A=
	jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix =
) {=0A=
=0A=
		// Attach a single capturing handler while someone wants =
focusin/focusout=0A=
		var attaches =3D 0,=0A=
			handler =3D function( event ) {=0A=
				jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), =
true );=0A=
			};=0A=
=0A=
		jQuery.event.special[ fix ] =3D {=0A=
			setup: function() {=0A=
				if ( attaches++ =3D=3D=3D 0 ) {=0A=
					document.addEventListener( orig, handler, true );=0A=
				}=0A=
			},=0A=
			teardown: function() {=0A=
				if ( --attaches =3D=3D=3D 0 ) {=0A=
					document.removeEventListener( orig, handler, true );=0A=
				}=0A=
			}=0A=
		};=0A=
	});=0A=
}=0A=
=0A=
jQuery.fn.extend({=0A=
=0A=
	on: function( types, selector, data, fn, /*INTERNAL*/ one ) {=0A=
		var type, origFn;=0A=
=0A=
		// Types can be a map of types/handlers=0A=
		if ( typeof types =3D=3D=3D "object" ) {=0A=
			// ( types-Object, selector, data )=0A=
			if ( typeof selector !=3D=3D "string" ) {=0A=
				// ( types-Object, data )=0A=
				data =3D data || selector;=0A=
				selector =3D undefined;=0A=
			}=0A=
			for ( type in types ) {=0A=
				this.on( type, selector, data, types[ type ], one );=0A=
			}=0A=
			return this;=0A=
		}=0A=
=0A=
		if ( data =3D=3D null && fn =3D=3D null ) {=0A=
			// ( types, fn )=0A=
			fn =3D selector;=0A=
			data =3D selector =3D undefined;=0A=
		} else if ( fn =3D=3D null ) {=0A=
			if ( typeof selector =3D=3D=3D "string" ) {=0A=
				// ( types, selector, fn )=0A=
				fn =3D data;=0A=
				data =3D undefined;=0A=
			} else {=0A=
				// ( types, data, fn )=0A=
				fn =3D data;=0A=
				data =3D selector;=0A=
				selector =3D undefined;=0A=
			}=0A=
		}=0A=
		if ( fn =3D=3D=3D false ) {=0A=
			fn =3D returnFalse;=0A=
		} else if ( !fn ) {=0A=
			return this;=0A=
		}=0A=
=0A=
		if ( one =3D=3D=3D 1 ) {=0A=
			origFn =3D fn;=0A=
			fn =3D function( event ) {=0A=
				// Can use an empty set, since event contains the info=0A=
				jQuery().off( event );=0A=
				return origFn.apply( this, arguments );=0A=
			};=0A=
			// Use same guid so caller can remove using origFn=0A=
			fn.guid =3D origFn.guid || ( origFn.guid =3D jQuery.guid++ );=0A=
		}=0A=
		return this.each( function() {=0A=
			jQuery.event.add( this, types, fn, data, selector );=0A=
		});=0A=
	},=0A=
	one: function( types, selector, data, fn ) {=0A=
		return this.on( types, selector, data, fn, 1 );=0A=
	},=0A=
	off: function( types, selector, fn ) {=0A=
		var handleObj, type;=0A=
		if ( types && types.preventDefault && types.handleObj ) {=0A=
			// ( event )  dispatched jQuery.Event=0A=
			handleObj =3D types.handleObj;=0A=
			jQuery( types.delegateTarget ).off(=0A=
				handleObj.namespace ? handleObj.origType + "." + handleObj.namespace =
: handleObj.origType,=0A=
				handleObj.selector,=0A=
				handleObj.handler=0A=
			);=0A=
			return this;=0A=
		}=0A=
		if ( typeof types =3D=3D=3D "object" ) {=0A=
			// ( types-object [, selector] )=0A=
			for ( type in types ) {=0A=
				this.off( type, selector, types[ type ] );=0A=
			}=0A=
			return this;=0A=
		}=0A=
		if ( selector =3D=3D=3D false || typeof selector =3D=3D=3D "function" =
) {=0A=
			// ( types [, fn] )=0A=
			fn =3D selector;=0A=
			selector =3D undefined;=0A=
		}=0A=
		if ( fn =3D=3D=3D false ) {=0A=
			fn =3D returnFalse;=0A=
		}=0A=
		return this.each(function() {=0A=
			jQuery.event.remove( this, types, fn, selector );=0A=
		});=0A=
	},=0A=
=0A=
	bind: function( types, data, fn ) {=0A=
		return this.on( types, null, data, fn );=0A=
	},=0A=
	unbind: function( types, fn ) {=0A=
		return this.off( types, null, fn );=0A=
	},=0A=
=0A=
	delegate: function( selector, types, data, fn ) {=0A=
		return this.on( types, selector, data, fn );=0A=
	},=0A=
	undelegate: function( selector, types, fn ) {=0A=
		// ( namespace ) or ( selector, types [, fn] )=0A=
		return arguments.length =3D=3D=3D 1 ? this.off( selector, "**" ) : =
this.off( types, selector || "**", fn );=0A=
	},=0A=
=0A=
	trigger: function( type, data ) {=0A=
		return this.each(function() {=0A=
			jQuery.event.trigger( type, data, this );=0A=
		});=0A=
	},=0A=
	triggerHandler: function( type, data ) {=0A=
		var elem =3D this[0];=0A=
		if ( elem ) {=0A=
			return jQuery.event.trigger( type, data, elem, true );=0A=
		}=0A=
	}=0A=
});=0A=
/*!=0A=
 * Sizzle CSS Selector Engine=0A=
 * Copyright 2012 jQuery Foundation and other contributors=0A=
 * Released under the MIT license=0A=
 * http://sizzlejs.com/=0A=
 */=0A=
(function( window, undefined ) {=0A=
=0A=
var i,=0A=
	cachedruns,=0A=
	Expr,=0A=
	getText,=0A=
	isXML,=0A=
	compile,=0A=
	hasDuplicate,=0A=
	outermostContext,=0A=
=0A=
	// Local document vars=0A=
	setDocument,=0A=
	document,=0A=
	docElem,=0A=
	documentIsXML,=0A=
	rbuggyQSA,=0A=
	rbuggyMatches,=0A=
	matches,=0A=
	contains,=0A=
	sortOrder,=0A=
=0A=
	// Instance-specific data=0A=
	expando =3D "sizzle" + -(new Date()),=0A=
	preferredDoc =3D window.document,=0A=
	support =3D {},=0A=
	dirruns =3D 0,=0A=
	done =3D 0,=0A=
	classCache =3D createCache(),=0A=
	tokenCache =3D createCache(),=0A=
	compilerCache =3D createCache(),=0A=
=0A=
	// General-purpose constants=0A=
	strundefined =3D typeof undefined,=0A=
	MAX_NEGATIVE =3D 1 << 31,=0A=
=0A=
	// Array methods=0A=
	arr =3D [],=0A=
	pop =3D arr.pop,=0A=
	push =3D arr.push,=0A=
	slice =3D arr.slice,=0A=
	// Use a stripped-down indexOf if we can't use a native one=0A=
	indexOf =3D arr.indexOf || function( elem ) {=0A=
		var i =3D 0,=0A=
			len =3D this.length;=0A=
		for ( ; i < len; i++ ) {=0A=
			if ( this[i] =3D=3D=3D elem ) {=0A=
				return i;=0A=
			}=0A=
		}=0A=
		return -1;=0A=
	},=0A=
=0A=
=0A=
	// Regular expressions=0A=
=0A=
	// Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace=0A=
	whitespace =3D "[\\x20\\t\\r\\n\\f]",=0A=
	// http://www.w3.org/TR/css3-syntax/#characters=0A=
	characterEncoding =3D "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",=0A=
=0A=
	// Loosely modeled on CSS identifier characters=0A=
	// An unquoted value should be a CSS identifier =
http://www.w3.org/TR/css3-selectors/#attribute-selectors=0A=
	// Proper syntax: =
http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier=0A=
	identifier =3D characterEncoding.replace( "w", "w#" ),=0A=
=0A=
	// Acceptable operators =
http://www.w3.org/TR/selectors/#attribute-selectors=0A=
	operators =3D "([*^$|!~]?=3D)",=0A=
	attributes =3D "\\[" + whitespace + "*(" + characterEncoding + ")" + =
whitespace +=0A=
		"*(?:" + operators + whitespace + =
"*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|(" + identifier + ")|)|)" + =
whitespace + "*\\]",=0A=
=0A=
	// Prefer arguments quoted,=0A=
	//   then not containing pseudos/brackets,=0A=
	//   then attribute selectors/non-parenthetical expressions,=0A=
	//   then anything else=0A=
	// These preferences are here to reduce the number of selectors=0A=
	//   needing tokenize in the PSEUDO preFilter=0A=
	pseudos =3D ":(" + characterEncoding + =
")(?:\\(((['\"])((?:\\\\.|[^\\\\])*?)\\3|((?:\\\\.|[^\\\\()[\\]]|" + =
attributes.replace( 3, 8 ) + ")*)|.*)\\)|)",=0A=
=0A=
	// Leading and non-escaped trailing whitespace, capturing some =
non-whitespace characters preceding the latter=0A=
	rtrim =3D new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" =
+ whitespace + "+$", "g" ),=0A=
=0A=
	rcomma =3D new RegExp( "^" + whitespace + "*," + whitespace + "*" ),=0A=
	rcombinators =3D new RegExp( "^" + whitespace + =
"*([\\x20\\t\\r\\n\\f>+~])" + whitespace + "*" ),=0A=
	rpseudo =3D new RegExp( pseudos ),=0A=
	ridentifier =3D new RegExp( "^" + identifier + "$" ),=0A=
=0A=
	matchExpr =3D {=0A=
		"ID": new RegExp( "^#(" + characterEncoding + ")" ),=0A=
		"CLASS": new RegExp( "^\\.(" + characterEncoding + ")" ),=0A=
		"NAME": new RegExp( "^\\[name=3D['\"]?(" + characterEncoding + =
")['\"]?\\]" ),=0A=
		"TAG": new RegExp( "^(" + characterEncoding.replace( "w", "w*" ) + ")" =
),=0A=
		"ATTR": new RegExp( "^" + attributes ),=0A=
		"PSEUDO": new RegExp( "^" + pseudos ),=0A=
		"CHILD": new RegExp( =
"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +=0A=
			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + =
whitespace +=0A=
			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),=0A=
		// For use in libraries implementing .is()=0A=
		// We use this for POS matching in `select`=0A=
		"needsContext": new RegExp( "^" + whitespace + =
"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +=0A=
			whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=3D[^-]|$)", =
"i" )=0A=
	},=0A=
=0A=
	rsibling =3D /[\x20\t\r\n\f]*[+~]/,=0A=
=0A=
	rnative =3D /^[^{]+\{\s*\[native code/,=0A=
=0A=
	// Easily-parseable/retrievable ID or TAG or CLASS selectors=0A=
	rquickExpr =3D /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,=0A=
=0A=
	rinputs =3D /^(?:input|select|textarea|button)$/i,=0A=
	rheader =3D /^h\d$/i,=0A=
=0A=
	rescape =3D /'|\\/g,=0A=
	rattributeQuotes =3D /\=3D[\x20\t\r\n\f]*([^'"\]]*)[\x20\t\r\n\f]*\]/g,=0A=
=0A=
	// CSS escapes =
http://www.w3.org/TR/CSS21/syndata.html#escaped-characters=0A=
	runescape =3D /\\([\da-fA-F]{1,6}[\x20\t\r\n\f]?|.)/g,=0A=
	funescape =3D function( _, escaped ) {=0A=
		var high =3D "0x" + escaped - 0x10000;=0A=
		// NaN means non-codepoint=0A=
		return high !=3D=3D high ?=0A=
			escaped :=0A=
			// BMP codepoint=0A=
			high < 0 ?=0A=
				String.fromCharCode( high + 0x10000 ) :=0A=
				// Supplemental Plane codepoint (surrogate pair)=0A=
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );=0A=
	};=0A=
=0A=
// Use a stripped-down slice if we can't use a native one=0A=
try {=0A=
	slice.call( preferredDoc.documentElement.childNodes, 0 )[0].nodeType;=0A=
} catch ( e ) {=0A=
	slice =3D function( i ) {=0A=
		var elem,=0A=
			results =3D [];=0A=
		while ( (elem =3D this[i++]) ) {=0A=
			results.push( elem );=0A=
		}=0A=
		return results;=0A=
	};=0A=
}=0A=
=0A=
/**=0A=
 * For feature detection=0A=
 * @param {Function} fn The function to test for native support=0A=
 */=0A=
function isNative( fn ) {=0A=
	return rnative.test( fn + "" );=0A=
}=0A=
=0A=
/**=0A=
 * Create key-value caches of limited size=0A=
 * @returns {Function(string, Object)} Returns the Object data after =
storing it on itself with=0A=
 *	property name the (space-suffixed) string and (if the cache is larger =
than Expr.cacheLength)=0A=
 *	deleting the oldest entry=0A=
 */=0A=
function createCache() {=0A=
	var cache,=0A=
		keys =3D [];=0A=
=0A=
	return (cache =3D function( key, value ) {=0A=
		// Use (key + " ") to avoid collision with native prototype properties =
(see Issue #157)=0A=
		if ( keys.push( key +=3D " " ) > Expr.cacheLength ) {=0A=
			// Only keep the most recent entries=0A=
			delete cache[ keys.shift() ];=0A=
		}=0A=
		return (cache[ key ] =3D value);=0A=
	});=0A=
}=0A=
=0A=
/**=0A=
 * Mark a function for special use by Sizzle=0A=
 * @param {Function} fn The function to mark=0A=
 */=0A=
function markFunction( fn ) {=0A=
	fn[ expando ] =3D true;=0A=
	return fn;=0A=
}=0A=
=0A=
/**=0A=
 * Support testing using an element=0A=
 * @param {Function} fn Passed the created div and expects a boolean =
result=0A=
 */=0A=
function assert( fn ) {=0A=
	var div =3D document.createElement("div");=0A=
=0A=
	try {=0A=
		return fn( div );=0A=
	} catch (e) {=0A=
		return false;=0A=
	} finally {=0A=
		// release memory in IE=0A=
		div =3D null;=0A=
	}=0A=
}=0A=
=0A=
function Sizzle( selector, context, results, seed ) {=0A=
	var match, elem, m, nodeType,=0A=
		// QSA vars=0A=
		i, groups, old, nid, newContext, newSelector;=0A=
=0A=
	if ( ( context ? context.ownerDocument || context : preferredDoc ) =
!=3D=3D document ) {=0A=
		setDocument( context );=0A=
	}=0A=
=0A=
	context =3D context || document;=0A=
	results =3D results || [];=0A=
=0A=
	if ( !selector || typeof selector !=3D=3D "string" ) {=0A=
		return results;=0A=
	}=0A=
=0A=
	if ( (nodeType =3D context.nodeType) !=3D=3D 1 && nodeType !=3D=3D 9 ) {=0A=
		return [];=0A=
	}=0A=
=0A=
	if ( !documentIsXML && !seed ) {=0A=
=0A=
		// Shortcuts=0A=
		if ( (match =3D rquickExpr.exec( selector )) ) {=0A=
			// Speed-up: Sizzle("#ID")=0A=
			if ( (m =3D match[1]) ) {=0A=
				if ( nodeType =3D=3D=3D 9 ) {=0A=
					elem =3D context.getElementById( m );=0A=
					// Check parentNode to catch when Blackberry 4.6 returns=0A=
					// nodes that are no longer in the document #6963=0A=
					if ( elem && elem.parentNode ) {=0A=
						// Handle the case where IE, Opera, and Webkit return items=0A=
						// by name instead of ID=0A=
						if ( elem.id =3D=3D=3D m ) {=0A=
							results.push( elem );=0A=
							return results;=0A=
						}=0A=
					} else {=0A=
						return results;=0A=
					}=0A=
				} else {=0A=
					// Context is not a document=0A=
					if ( context.ownerDocument && (elem =3D =
context.ownerDocument.getElementById( m )) &&=0A=
						contains( context, elem ) && elem.id =3D=3D=3D m ) {=0A=
						results.push( elem );=0A=
						return results;=0A=
					}=0A=
				}=0A=
=0A=
			// Speed-up: Sizzle("TAG")=0A=
			} else if ( match[2] ) {=0A=
				push.apply( results, slice.call(context.getElementsByTagName( =
selector ), 0) );=0A=
				return results;=0A=
=0A=
			// Speed-up: Sizzle(".CLASS")=0A=
			} else if ( (m =3D match[3]) && support.getByClassName && =
context.getElementsByClassName ) {=0A=
				push.apply( results, slice.call(context.getElementsByClassName( m ), =
0) );=0A=
				return results;=0A=
			}=0A=
		}=0A=
=0A=
		// QSA path=0A=
		if ( support.qsa && !rbuggyQSA.test(selector) ) {=0A=
			old =3D true;=0A=
			nid =3D expando;=0A=
			newContext =3D context;=0A=
			newSelector =3D nodeType =3D=3D=3D 9 && selector;=0A=
=0A=
			// qSA works strangely on Element-rooted queries=0A=
			// We can work around this by specifying an extra ID on the root=0A=
			// and working up from there (Thanks to Andrew Dupont for the =
technique)=0A=
			// IE 8 doesn't work on object elements=0A=
			if ( nodeType =3D=3D=3D 1 && context.nodeName.toLowerCase() !=3D=3D =
"object" ) {=0A=
				groups =3D tokenize( selector );=0A=
=0A=
				if ( (old =3D context.getAttribute("id")) ) {=0A=
					nid =3D old.replace( rescape, "\\$&" );=0A=
				} else {=0A=
					context.setAttribute( "id", nid );=0A=
				}=0A=
				nid =3D "[id=3D'" + nid + "'] ";=0A=
=0A=
				i =3D groups.length;=0A=
				while ( i-- ) {=0A=
					groups[i] =3D nid + toSelector( groups[i] );=0A=
				}=0A=
				newContext =3D rsibling.test( selector ) && context.parentNode || =
context;=0A=
				newSelector =3D groups.join(",");=0A=
			}=0A=
=0A=
			if ( newSelector ) {=0A=
				try {=0A=
					push.apply( results, slice.call( newContext.querySelectorAll(=0A=
						newSelector=0A=
					), 0 ) );=0A=
					return results;=0A=
				} catch(qsaError) {=0A=
				} finally {=0A=
					if ( !old ) {=0A=
						context.removeAttribute("id");=0A=
					}=0A=
				}=0A=
			}=0A=
		}=0A=
	}=0A=
=0A=
	// All others=0A=
	return select( selector.replace( rtrim, "$1" ), context, results, seed =
);=0A=
}=0A=
=0A=
/**=0A=
 * Detect xml=0A=
 * @param {Element|Object} elem An element or a document=0A=
 */=0A=
isXML =3D Sizzle.isXML =3D function( elem ) {=0A=
	// documentElement is verified for cases where it doesn't yet exist=0A=
	// (such as loading iframes in IE - #4833)=0A=
	var documentElement =3D elem && (elem.ownerDocument || =
elem).documentElement;=0A=
	return documentElement ? documentElement.nodeName !=3D=3D "HTML" : =
false;=0A=
};=0A=
=0A=
/**=0A=
 * Sets document-related variables once based on the current document=0A=
 * @param {Element|Object} [doc] An element or document object to use to =
set the document=0A=
 * @returns {Object} Returns the current document=0A=
 */=0A=
setDocument =3D Sizzle.setDocument =3D function( node ) {=0A=
	var doc =3D node ? node.ownerDocument || node : preferredDoc;=0A=
=0A=
	// If no document and documentElement is available, return=0A=
	if ( doc =3D=3D=3D document || doc.nodeType !=3D=3D 9 || =
!doc.documentElement ) {=0A=
		return document;=0A=
	}=0A=
=0A=
	// Set our document=0A=
	document =3D doc;=0A=
	docElem =3D doc.documentElement;=0A=
=0A=
	// Support tests=0A=
	documentIsXML =3D isXML( doc );=0A=
=0A=
	// Check if getElementsByTagName("*") returns only elements=0A=
	support.tagNameNoComments =3D assert(function( div ) {=0A=
		div.appendChild( doc.createComment("") );=0A=
		return !div.getElementsByTagName("*").length;=0A=
	});=0A=
=0A=
	// Check if attributes should be retrieved by attribute nodes=0A=
	support.attributes =3D assert(function( div ) {=0A=
		div.innerHTML =3D "<select></select>";=0A=
		var type =3D typeof div.lastChild.getAttribute("multiple");=0A=
		// IE8 returns a string for some attributes even when not present=0A=
		return type !=3D=3D "boolean" && type !=3D=3D "string";=0A=
	});=0A=
=0A=
	// Check if getElementsByClassName can be trusted=0A=
	support.getByClassName =3D assert(function( div ) {=0A=
		// Opera can't find a second classname (in 9.6)=0A=
		div.innerHTML =3D "<div class=3D'hidden e'></div><div =
class=3D'hidden'></div>";=0A=
		if ( !div.getElementsByClassName || =
!div.getElementsByClassName("e").length ) {=0A=
			return false;=0A=
		}=0A=
=0A=
		// Safari 3.2 caches class attributes and doesn't catch changes=0A=
		div.lastChild.className =3D "e";=0A=
		return div.getElementsByClassName("e").length =3D=3D=3D 2;=0A=
	});=0A=
=0A=
	// Check if getElementById returns elements by name=0A=
	// Check if getElementsByName privileges form controls or returns =
elements by ID=0A=
	support.getByName =3D assert(function( div ) {=0A=
		// Inject content=0A=
		div.id =3D expando + 0;=0A=
		div.innerHTML =3D "<a name=3D'" + expando + "'></a><div name=3D'" + =
expando + "'></div>";=0A=
		docElem.insertBefore( div, docElem.firstChild );=0A=
=0A=
		// Test=0A=
		var pass =3D doc.getElementsByName &&=0A=
			// buggy browsers will return fewer than the correct 2=0A=
			doc.getElementsByName( expando ).length =3D=3D=3D 2 +=0A=
			// buggy browsers will return more than the correct 0=0A=
			doc.getElementsByName( expando + 0 ).length;=0A=
		support.getIdNotName =3D !doc.getElementById( expando );=0A=
=0A=
		// Cleanup=0A=
		docElem.removeChild( div );=0A=
=0A=
		return pass;=0A=
	});=0A=
=0A=
	// IE6/7 return modified attributes=0A=
	Expr.attrHandle =3D assert(function( div ) {=0A=
		div.innerHTML =3D "<a href=3D'#'></a>";=0A=
		return div.firstChild && typeof div.firstChild.getAttribute !=3D=3D =
strundefined &&=0A=
			div.firstChild.getAttribute("href") =3D=3D=3D "#";=0A=
	}) ?=0A=
		{} :=0A=
		{=0A=
			"href": function( elem ) {=0A=
				return elem.getAttribute( "href", 2 );=0A=
			},=0A=
			"type": function( elem ) {=0A=
				return elem.getAttribute("type");=0A=
			}=0A=
		};=0A=
=0A=
	// ID find and filter=0A=
	if ( support.getIdNotName ) {=0A=
		Expr.find["ID"] =3D function( id, context ) {=0A=
			if ( typeof context.getElementById !=3D=3D strundefined && =
!documentIsXML ) {=0A=
				var m =3D context.getElementById( id );=0A=
				// Check parentNode to catch when Blackberry 4.6 returns=0A=
				// nodes that are no longer in the document #6963=0A=
				return m && m.parentNode ? [m] : [];=0A=
			}=0A=
		};=0A=
		Expr.filter["ID"] =3D function( id ) {=0A=
			var attrId =3D id.replace( runescape, funescape );=0A=
			return function( elem ) {=0A=
				return elem.getAttribute("id") =3D=3D=3D attrId;=0A=
			};=0A=
		};=0A=
	} else {=0A=
		Expr.find["ID"] =3D function( id, context ) {=0A=
			if ( typeof context.getElementById !=3D=3D strundefined && =
!documentIsXML ) {=0A=
				var m =3D context.getElementById( id );=0A=
=0A=
				return m ?=0A=
					m.id =3D=3D=3D id || typeof m.getAttributeNode !=3D=3D strundefined =
&& m.getAttributeNode("id").value =3D=3D=3D id ?=0A=
						[m] :=0A=
						undefined :=0A=
					[];=0A=
			}=0A=
		};=0A=
		Expr.filter["ID"] =3D  function( id ) {=0A=
			var attrId =3D id.replace( runescape, funescape );=0A=
			return function( elem ) {=0A=
				var node =3D typeof elem.getAttributeNode !=3D=3D strundefined && =
elem.getAttributeNode("id");=0A=
				return node && node.value =3D=3D=3D attrId;=0A=
			};=0A=
		};=0A=
	}=0A=
=0A=
	// Tag=0A=
	Expr.find["TAG"] =3D support.tagNameNoComments ?=0A=
		function( tag, context ) {=0A=
			if ( typeof context.getElementsByTagName !=3D=3D strundefined ) {=0A=
				return context.getElementsByTagName( tag );=0A=
			}=0A=
		} :=0A=
		function( tag, context ) {=0A=
			var elem,=0A=
				tmp =3D [],=0A=
				i =3D 0,=0A=
				results =3D context.getElementsByTagName( tag );=0A=
=0A=
			// Filter out possible comments=0A=
			if ( tag =3D=3D=3D "*" ) {=0A=
				while ( (elem =3D results[i++]) ) {=0A=
					if ( elem.nodeType =3D=3D=3D 1 ) {=0A=
						tmp.push( elem );=0A=
					}=0A=
				}=0A=
=0A=
				return tmp;=0A=
			}=0A=
			return results;=0A=
		};=0A=
=0A=
	// Name=0A=
	Expr.find["NAME"] =3D support.getByName && function( tag, context ) {=0A=
		if ( typeof context.getElementsByName !=3D=3D strundefined ) {=0A=
			return context.getElementsByName( name );=0A=
		}=0A=
	};=0A=
=0A=
	// Class=0A=
	Expr.find["CLASS"] =3D support.getByClassName && function( className, =
context ) {=0A=
		if ( typeof context.getElementsByClassName !=3D=3D strundefined && =
!documentIsXML ) {=0A=
			return context.getElementsByClassName( className );=0A=
		}=0A=
	};=0A=
=0A=
	// QSA and matchesSelector support=0A=
=0A=
	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)=0A=
	rbuggyMatches =3D [];=0A=
=0A=
	// qSa(:focus) reports false when true (Chrome 21),=0A=
	// no need to also add to buggyMatches since matches checks buggyQSA=0A=
	// A support test would require too much code (would include document =
ready)=0A=
	rbuggyQSA =3D [ ":focus" ];=0A=
=0A=
	if ( (support.qsa =3D isNative(doc.querySelectorAll)) ) {=0A=
		// Build QSA regex=0A=
		// Regex strategy adopted from Diego Perini=0A=
		assert(function( div ) {=0A=
			// Select is set to empty string on purpose=0A=
			// This is to test IE's treatment of not explictly=0A=
			// setting a boolean content attribute,=0A=
			// since its presence should be enough=0A=
			// http://bugs.jquery.com/ticket/12359=0A=
			div.innerHTML =3D "<select><option selected=3D''></option></select>";=0A=
=0A=
			// IE8 - Some boolean attributes are not treated correctly=0A=
			if ( !div.querySelectorAll("[selected]").length ) {=0A=
				rbuggyQSA.push( "\\[" + whitespace + =
"*(?:checked|disabled|ismap|multiple|readonly|selected|value)" );=0A=
			}=0A=
=0A=
			// Webkit/Opera - :checked should return selected option elements=0A=
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked=0A=
			// IE8 throws error here and will not see later tests=0A=
			if ( !div.querySelectorAll(":checked").length ) {=0A=
				rbuggyQSA.push(":checked");=0A=
			}=0A=
		});=0A=
=0A=
		assert(function( div ) {=0A=
=0A=
			// Opera 10-12/IE8 - ^=3D $=3D *=3D and empty values=0A=
			// Should not select anything=0A=
			div.innerHTML =3D "<input type=3D'hidden' i=3D''/>";=0A=
			if ( div.querySelectorAll("[i^=3D'']").length ) {=0A=
				rbuggyQSA.push( "[*^$]=3D" + whitespace + "*(?:\"\"|'')" );=0A=
			}=0A=
=0A=
			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements =
are still enabled)=0A=
			// IE8 throws error here and will not see later tests=0A=
			if ( !div.querySelectorAll(":enabled").length ) {=0A=
				rbuggyQSA.push( ":enabled", ":disabled" );=0A=
			}=0A=
=0A=
			// Opera 10-11 does not throw on post-comma invalid pseudos=0A=
			div.querySelectorAll("*,:x");=0A=
			rbuggyQSA.push(",.*:");=0A=
		});=0A=
	}=0A=
=0A=
	if ( (support.matchesSelector =3D isNative( (matches =3D =
docElem.matchesSelector ||=0A=
		docElem.mozMatchesSelector ||=0A=
		docElem.webkitMatchesSelector ||=0A=
		docElem.oMatchesSelector ||=0A=
		docElem.msMatchesSelector) )) ) {=0A=
=0A=
		assert(function( div ) {=0A=
			// Check to see if it's possible to do matchesSelector=0A=
			// on a disconnected node (IE 9)=0A=
			support.disconnectedMatch =3D matches.call( div, "div" );=0A=
=0A=
			// This should fail with an exception=0A=
			// Gecko does not error, returns false instead=0A=
			matches.call( div, "[s!=3D'']:x" );=0A=
			rbuggyMatches.push( "!=3D", pseudos );=0A=
		});=0A=
	}=0A=
=0A=
	rbuggyQSA =3D new RegExp( rbuggyQSA.join("|") );=0A=
	rbuggyMatches =3D new RegExp( rbuggyMatches.join("|") );=0A=
=0A=
	// Element contains another=0A=
	// Purposefully does not implement inclusive descendent=0A=
	// As in, an element does not contain itself=0A=
	contains =3D isNative(docElem.contains) || =
docElem.compareDocumentPosition ?=0A=
		function( a, b ) {=0A=
			var adown =3D a.nodeType =3D=3D=3D 9 ? a.documentElement : a,=0A=
				bup =3D b && b.parentNode;=0A=
			return a =3D=3D=3D bup || !!( bup && bup.nodeType =3D=3D=3D 1 && (=0A=
				adown.contains ?=0A=
					adown.contains( bup ) :=0A=
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16=0A=
			));=0A=
		} :=0A=
		function( a, b ) {=0A=
			if ( b ) {=0A=
				while ( (b =3D b.parentNode) ) {=0A=
					if ( b =3D=3D=3D a ) {=0A=
						return true;=0A=
					}=0A=
				}=0A=
			}=0A=
			return false;=0A=
		};=0A=
=0A=
	// Document order sorting=0A=
	sortOrder =3D docElem.compareDocumentPosition ?=0A=
	function( a, b ) {=0A=
		var compare;=0A=
=0A=
		if ( a =3D=3D=3D b ) {=0A=
			hasDuplicate =3D true;=0A=
			return 0;=0A=
		}=0A=
=0A=
		if ( (compare =3D b.compareDocumentPosition && =
a.compareDocumentPosition && a.compareDocumentPosition( b )) ) {=0A=
			if ( compare & 1 || a.parentNode && a.parentNode.nodeType =3D=3D=3D =
11 ) {=0A=
				if ( a =3D=3D=3D doc || contains( preferredDoc, a ) ) {=0A=
					return -1;=0A=
				}=0A=
				if ( b =3D=3D=3D doc || contains( preferredDoc, b ) ) {=0A=
					return 1;=0A=
				}=0A=
				return 0;=0A=
			}=0A=
			return compare & 4 ? -1 : 1;=0A=
		}=0A=
=0A=
		return a.compareDocumentPosition ? -1 : 1;=0A=
	} :=0A=
	function( a, b ) {=0A=
		var cur,=0A=
			i =3D 0,=0A=
			aup =3D a.parentNode,=0A=
			bup =3D b.parentNode,=0A=
			ap =3D [ a ],=0A=
			bp =3D [ b ];=0A=
=0A=
		// Exit early if the nodes are identical=0A=
		if ( a =3D=3D=3D b ) {=0A=
			hasDuplicate =3D true;=0A=
			return 0;=0A=
=0A=
		// Parentless nodes are either documents or disconnected=0A=
		} else if ( !aup || !bup ) {=0A=
			return a =3D=3D=3D doc ? -1 :=0A=
				b =3D=3D=3D doc ? 1 :=0A=
				aup ? -1 :=0A=
				bup ? 1 :=0A=
				0;=0A=
=0A=
		// If the nodes are siblings, we can do a quick check=0A=
		} else if ( aup =3D=3D=3D bup ) {=0A=
			return siblingCheck( a, b );=0A=
		}=0A=
=0A=
		// Otherwise we need full lists of their ancestors for comparison=0A=
		cur =3D a;=0A=
		while ( (cur =3D cur.parentNode) ) {=0A=
			ap.unshift( cur );=0A=
		}=0A=
		cur =3D b;=0A=
		while ( (cur =3D cur.parentNode) ) {=0A=
			bp.unshift( cur );=0A=
		}=0A=
=0A=
		// Walk down the tree looking for a discrepancy=0A=
		while ( ap[i] =3D=3D=3D bp[i] ) {=0A=
			i++;=0A=
		}=0A=
=0A=
		return i ?=0A=
			// Do a sibling check if the nodes have a common ancestor=0A=
			siblingCheck( ap[i], bp[i] ) :=0A=
=0A=
			// Otherwise nodes in our document sort first=0A=
			ap[i] =3D=3D=3D preferredDoc ? -1 :=0A=
			bp[i] =3D=3D=3D preferredDoc ? 1 :=0A=
			0;=0A=
	};=0A=
=0A=
	// Always assume the presence of duplicates if sort doesn't=0A=
	// pass them to our comparison function (as in Google Chrome).=0A=
	hasDuplicate =3D false;=0A=
	[0, 0].sort( sortOrder );=0A=
	support.detectDuplicates =3D hasDuplicate;=0A=
=0A=
	return document;=0A=
};=0A=
=0A=
Sizzle.matches =3D function( expr, elements ) {=0A=
	return Sizzle( expr, null, null, elements );=0A=
};=0A=
=0A=
Sizzle.matchesSelector =3D function( elem, expr ) {=0A=
	// Set document vars if needed=0A=
	if ( ( elem.ownerDocument || elem ) !=3D=3D document ) {=0A=
		setDocument( elem );=0A=
	}=0A=
=0A=
	// Make sure that attribute selectors are quoted=0A=
	expr =3D expr.replace( rattributeQuotes, "=3D'$1']" );=0A=
=0A=
	// rbuggyQSA always contains :focus, so no need for an existence check=0A=
	if ( support.matchesSelector && !documentIsXML && (!rbuggyMatches || =
!rbuggyMatches.test(expr)) && !rbuggyQSA.test(expr) ) {=0A=
		try {=0A=
			var ret =3D matches.call( elem, expr );=0A=
=0A=
			// IE 9's matchesSelector returns false on disconnected nodes=0A=
			if ( ret || support.disconnectedMatch ||=0A=
					// As well, disconnected nodes are said to be in a document=0A=
					// fragment in IE 9=0A=
					elem.document && elem.document.nodeType !=3D=3D 11 ) {=0A=
				return ret;=0A=
			}=0A=
		} catch(e) {}=0A=
	}=0A=
=0A=
	return Sizzle( expr, document, null, [elem] ).length > 0;=0A=
};=0A=
=0A=
Sizzle.contains =3D function( context, elem ) {=0A=
	// Set document vars if needed=0A=
	if ( ( context.ownerDocument || context ) !=3D=3D document ) {=0A=
		setDocument( context );=0A=
	}=0A=
	return contains( context, elem );=0A=
};=0A=
=0A=
Sizzle.attr =3D function( elem, name ) {=0A=
	var val;=0A=
=0A=
	// Set document vars if needed=0A=
	if ( ( elem.ownerDocument || elem ) !=3D=3D document ) {=0A=
		setDocument( elem );=0A=
	}=0A=
=0A=
	if ( !documentIsXML ) {=0A=
		name =3D name.toLowerCase();=0A=
	}=0A=
	if ( (val =3D Expr.attrHandle[ name ]) ) {=0A=
		return val( elem );=0A=
	}=0A=
	if ( documentIsXML || support.attributes ) {=0A=
		return elem.getAttribute( name );=0A=
	}=0A=
	return ( (val =3D elem.getAttributeNode( name )) || elem.getAttribute( =
name ) ) && elem[ name ] =3D=3D=3D true ?=0A=
		name :=0A=
		val && val.specified ? val.value : null;=0A=
};=0A=
=0A=
Sizzle.error =3D function( msg ) {=0A=
	throw new Error( "Syntax error, unrecognized expression: " + msg );=0A=
};=0A=
=0A=
// Document sorting and removing duplicates=0A=
Sizzle.uniqueSort =3D function( results ) {=0A=
	var elem,=0A=
		duplicates =3D [],=0A=
		i =3D 1,=0A=
		j =3D 0;=0A=
=0A=
	// Unless we *know* we can detect duplicates, assume their presence=0A=
	hasDuplicate =3D !support.detectDuplicates;=0A=
	results.sort( sortOrder );=0A=
=0A=
	if ( hasDuplicate ) {=0A=
		for ( ; (elem =3D results[i]); i++ ) {=0A=
			if ( elem =3D=3D=3D results[ i - 1 ] ) {=0A=
				j =3D duplicates.push( i );=0A=
			}=0A=
		}=0A=
		while ( j-- ) {=0A=
			results.splice( duplicates[ j ], 1 );=0A=
		}=0A=
	}=0A=
=0A=
	return results;=0A=
};=0A=
=0A=
function siblingCheck( a, b ) {=0A=
	var cur =3D b && a,=0A=
		diff =3D cur && ( ~b.sourceIndex || MAX_NEGATIVE ) - ( ~a.sourceIndex =
|| MAX_NEGATIVE );=0A=
=0A=
	// Use IE sourceIndex if available on both nodes=0A=
	if ( diff ) {=0A=
		return diff;=0A=
	}=0A=
=0A=
	// Check if b follows a=0A=
	if ( cur ) {=0A=
		while ( (cur =3D cur.nextSibling) ) {=0A=
			if ( cur =3D=3D=3D b ) {=0A=
				return -1;=0A=
			}=0A=
		}=0A=
	}=0A=
=0A=
	return a ? 1 : -1;=0A=
}=0A=
=0A=
// Returns a function to use in pseudos for input types=0A=
function createInputPseudo( type ) {=0A=
	return function( elem ) {=0A=
		var name =3D elem.nodeName.toLowerCase();=0A=
		return name =3D=3D=3D "input" && elem.type =3D=3D=3D type;=0A=
	};=0A=
}=0A=
=0A=
// Returns a function to use in pseudos for buttons=0A=
function createButtonPseudo( type ) {=0A=
	return function( elem ) {=0A=
		var name =3D elem.nodeName.toLowerCase();=0A=
		return (name =3D=3D=3D "input" || name =3D=3D=3D "button") && =
elem.type =3D=3D=3D type;=0A=
	};=0A=
}=0A=
=0A=
// Returns a function to use in pseudos for positionals=0A=
function createPositionalPseudo( fn ) {=0A=
	return markFunction(function( argument ) {=0A=
		argument =3D +argument;=0A=
		return markFunction(function( seed, matches ) {=0A=
			var j,=0A=
				matchIndexes =3D fn( [], seed.length, argument ),=0A=
				i =3D matchIndexes.length;=0A=
=0A=
			// Match elements found at the specified indexes=0A=
			while ( i-- ) {=0A=
				if ( seed[ (j =3D matchIndexes[i]) ] ) {=0A=
					seed[j] =3D !(matches[j] =3D seed[j]);=0A=
				}=0A=
			}=0A=
		});=0A=
	});=0A=
}=0A=
=0A=
/**=0A=
 * Utility function for retrieving the text value of an array of DOM =
nodes=0A=
 * @param {Array|Element} elem=0A=
 */=0A=
getText =3D Sizzle.getText =3D function( elem ) {=0A=
	var node,=0A=
		ret =3D "",=0A=
		i =3D 0,=0A=
		nodeType =3D elem.nodeType;=0A=
=0A=
	if ( !nodeType ) {=0A=
		// If no nodeType, this is expected to be an array=0A=
		for ( ; (node =3D elem[i]); i++ ) {=0A=
			// Do not traverse comment nodes=0A=
			ret +=3D getText( node );=0A=
		}=0A=
	} else if ( nodeType =3D=3D=3D 1 || nodeType =3D=3D=3D 9 || nodeType =
=3D=3D=3D 11 ) {=0A=
		// Use textContent for elements=0A=
		// innerText usage removed for consistency of new lines (see #11153)=0A=
		if ( typeof elem.textContent =3D=3D=3D "string" ) {=0A=
			return elem.textContent;=0A=
		} else {=0A=
			// Traverse its children=0A=
			for ( elem =3D elem.firstChild; elem; elem =3D elem.nextSibling ) {=0A=
				ret +=3D getText( elem );=0A=
			}=0A=
		}=0A=
	} else if ( nodeType =3D=3D=3D 3 || nodeType =3D=3D=3D 4 ) {=0A=
		return elem.nodeValue;=0A=
	}=0A=
	// Do not include comment or processing instruction nodes=0A=
=0A=
	return ret;=0A=
};=0A=
=0A=
Expr =3D Sizzle.selectors =3D {=0A=
=0A=
	// Can be adjusted by the user=0A=
	cacheLength: 50,=0A=
=0A=
	createPseudo: markFunction,=0A=
=0A=
	match: matchExpr,=0A=
=0A=
	find: {},=0A=
=0A=
	relative: {=0A=
		">": { dir: "parentNode", first: true },=0A=
		" ": { dir: "parentNode" },=0A=
		"+": { dir: "previousSibling", first: true },=0A=
		"~": { dir: "previousSibling" }=0A=
	},=0A=
=0A=
	preFilter: {=0A=
		"ATTR": function( match ) {=0A=
			match[1] =3D match[1].replace( runescape, funescape );=0A=
=0A=
			// Move the given value to match[3] whether quoted or unquoted=0A=
			match[3] =3D ( match[4] || match[5] || "" ).replace( runescape, =
funescape );=0A=
=0A=
			if ( match[2] =3D=3D=3D "~=3D" ) {=0A=
				match[3] =3D " " + match[3] + " ";=0A=
			}=0A=
=0A=
			return match.slice( 0, 4 );=0A=
		},=0A=
=0A=
		"CHILD": function( match ) {=0A=
			/* matches from matchExpr["CHILD"]=0A=
				1 type (only|nth|...)=0A=
				2 what (child|of-type)=0A=
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)=0A=
				4 xn-component of xn+y argument ([+-]?\d*n|)=0A=
				5 sign of xn-component=0A=
				6 x of xn-component=0A=
				7 sign of y-component=0A=
				8 y of y-component=0A=
			*/=0A=
			match[1] =3D match[1].toLowerCase();=0A=
=0A=
			if ( match[1].slice( 0, 3 ) =3D=3D=3D "nth" ) {=0A=
				// nth-* requires argument=0A=
				if ( !match[3] ) {=0A=
					Sizzle.error( match[0] );=0A=
				}=0A=
=0A=
				// numeric x and y parameters for Expr.filter.CHILD=0A=
				// remember that false/true cast respectively to 0/1=0A=
				match[4] =3D +( match[4] ? match[5] + (match[6] || 1) : 2 * ( =
match[3] =3D=3D=3D "even" || match[3] =3D=3D=3D "odd" ) );=0A=
				match[5] =3D +( ( match[7] + match[8] ) || match[3] =3D=3D=3D "odd" =
);=0A=
=0A=
			// other types prohibit arguments=0A=
			} else if ( match[3] ) {=0A=
				Sizzle.error( match[0] );=0A=
			}=0A=
=0A=
			return match;=0A=
		},=0A=
=0A=
		"PSEUDO": function( match ) {=0A=
			var excess,=0A=
				unquoted =3D !match[5] && match[2];=0A=
=0A=
			if ( matchExpr["CHILD"].test( match[0] ) ) {=0A=
				return null;=0A=
			}=0A=
=0A=
			// Accept quoted arguments as-is=0A=
			if ( match[4] ) {=0A=
				match[2] =3D match[4];=0A=
=0A=
			// Strip excess characters from unquoted arguments=0A=
			} else if ( unquoted && rpseudo.test( unquoted ) &&=0A=
				// Get excess from tokenize (recursively)=0A=
				(excess =3D tokenize( unquoted, true )) &&=0A=
				// advance to the next closing parenthesis=0A=
				(excess =3D unquoted.indexOf( ")", unquoted.length - excess ) - =
unquoted.length) ) {=0A=
=0A=
				// excess is a negative index=0A=
				match[0] =3D match[0].slice( 0, excess );=0A=
				match[2] =3D unquoted.slice( 0, excess );=0A=
			}=0A=
=0A=
			// Return only captures needed by the pseudo filter method (type and =
argument)=0A=
			return match.slice( 0, 3 );=0A=
		}=0A=
	},=0A=
=0A=
	filter: {=0A=
=0A=
		"TAG": function( nodeName ) {=0A=
			if ( nodeName =3D=3D=3D "*" ) {=0A=
				return function() { return true; };=0A=
			}=0A=
=0A=
			nodeName =3D nodeName.replace( runescape, funescape ).toLowerCase();=0A=
			return function( elem ) {=0A=
				return elem.nodeName && elem.nodeName.toLowerCase() =3D=3D=3D =
nodeName;=0A=
			};=0A=
		},=0A=
=0A=
		"CLASS": function( className ) {=0A=
			var pattern =3D classCache[ className + " " ];=0A=
=0A=
			return pattern ||=0A=
				(pattern =3D new RegExp( "(^|" + whitespace + ")" + className + "(" =
+ whitespace + "|$)" )) &&=0A=
				classCache( className, function( elem ) {=0A=
					return pattern.test( elem.className || (typeof elem.getAttribute =
!=3D=3D strundefined && elem.getAttribute("class")) || "" );=0A=
				});=0A=
		},=0A=
=0A=
		"ATTR": function( name, operator, check ) {=0A=
			return function( elem ) {=0A=
				var result =3D Sizzle.attr( elem, name );=0A=
=0A=
				if ( result =3D=3D null ) {=0A=
					return operator =3D=3D=3D "!=3D";=0A=
				}=0A=
				if ( !operator ) {=0A=
					return true;=0A=
				}=0A=
=0A=
				result +=3D "";=0A=
=0A=
				return operator =3D=3D=3D "=3D" ? result =3D=3D=3D check :=0A=
					operator =3D=3D=3D "!=3D" ? result !=3D=3D check :=0A=
					operator =3D=3D=3D "^=3D" ? check && result.indexOf( check ) =
=3D=3D=3D 0 :=0A=
					operator =3D=3D=3D "*=3D" ? check && result.indexOf( check ) > -1 :=0A=
					operator =3D=3D=3D "$=3D" ? check && result.slice( -check.length ) =
=3D=3D=3D check :=0A=
					operator =3D=3D=3D "~=3D" ? ( " " + result + " " ).indexOf( check ) =
> -1 :=0A=
					operator =3D=3D=3D "|=3D" ? result =3D=3D=3D check || result.slice( =
0, check.length + 1 ) =3D=3D=3D check + "-" :=0A=
					false;=0A=
			};=0A=
		},=0A=
=0A=
		"CHILD": function( type, what, argument, first, last ) {=0A=
			var simple =3D type.slice( 0, 3 ) !=3D=3D "nth",=0A=
				forward =3D type.slice( -4 ) !=3D=3D "last",=0A=
				ofType =3D what =3D=3D=3D "of-type";=0A=
=0A=
			return first =3D=3D=3D 1 && last =3D=3D=3D 0 ?=0A=
=0A=
				// Shortcut for :nth-*(n)=0A=
				function( elem ) {=0A=
					return !!elem.parentNode;=0A=
				} :=0A=
=0A=
				function( elem, context, xml ) {=0A=
					var cache, outerCache, node, diff, nodeIndex, start,=0A=
						dir =3D simple !=3D=3D forward ? "nextSibling" : "previousSibling",=0A=
						parent =3D elem.parentNode,=0A=
						name =3D ofType && elem.nodeName.toLowerCase(),=0A=
						useCache =3D !xml && !ofType;=0A=
=0A=
					if ( parent ) {=0A=
=0A=
						// :(first|last|only)-(child|of-type)=0A=
						if ( simple ) {=0A=
							while ( dir ) {=0A=
								node =3D elem;=0A=
								while ( (node =3D node[ dir ]) ) {=0A=
									if ( ofType ? node.nodeName.toLowerCase() =3D=3D=3D name : =
node.nodeType =3D=3D=3D 1 ) {=0A=
										return false;=0A=
									}=0A=
								}=0A=
								// Reverse direction for :only-* (if we haven't yet done so)=0A=
								start =3D dir =3D type =3D=3D=3D "only" && !start && =
"nextSibling";=0A=
							}=0A=
							return true;=0A=
						}=0A=
=0A=
						start =3D [ forward ? parent.firstChild : parent.lastChild ];=0A=
=0A=
						// non-xml :nth-child(...) stores cache data on `parent`=0A=
						if ( forward && useCache ) {=0A=
							// Seek `elem` from a previously-cached index=0A=
							outerCache =3D parent[ expando ] || (parent[ expando ] =3D {});=0A=
							cache =3D outerCache[ type ] || [];=0A=
							nodeIndex =3D cache[0] =3D=3D=3D dirruns && cache[1];=0A=
							diff =3D cache[0] =3D=3D=3D dirruns && cache[2];=0A=
							node =3D nodeIndex && parent.childNodes[ nodeIndex ];=0A=
=0A=
							while ( (node =3D ++nodeIndex && node && node[ dir ] ||=0A=
=0A=
								// Fallback to seeking `elem` from the start=0A=
								(diff =3D nodeIndex =3D 0) || start.pop()) ) {=0A=
=0A=
								// When found, cache indexes on `parent` and break=0A=
								if ( node.nodeType =3D=3D=3D 1 && ++diff && node =3D=3D=3D elem =
) {=0A=
									outerCache[ type ] =3D [ dirruns, nodeIndex, diff ];=0A=
									break;=0A=
								}=0A=
							}=0A=
=0A=
						// Use previously-cached element index if available=0A=
						} else if ( useCache && (cache =3D (elem[ expando ] || (elem[ =
expando ] =3D {}))[ type ]) && cache[0] =3D=3D=3D dirruns ) {=0A=
							diff =3D cache[1];=0A=
=0A=
						// xml :nth-child(...) or :nth-last-child(...) or =
:nth(-last)?-of-type(...)=0A=
						} else {=0A=
							// Use the same loop as above to seek `elem` from the start=0A=
							while ( (node =3D ++nodeIndex && node && node[ dir ] ||=0A=
								(diff =3D nodeIndex =3D 0) || start.pop()) ) {=0A=
=0A=
								if ( ( ofType ? node.nodeName.toLowerCase() =3D=3D=3D name : =
node.nodeType =3D=3D=3D 1 ) && ++diff ) {=0A=
									// Cache the index of each encountered element=0A=
									if ( useCache ) {=0A=
										(node[ expando ] || (node[ expando ] =3D {}))[ type ] =3D [ =
dirruns, diff ];=0A=
									}=0A=
=0A=
									if ( node =3D=3D=3D elem ) {=0A=
										break;=0A=
									}=0A=
								}=0A=
							}=0A=
						}=0A=
=0A=
						// Incorporate the offset, then check against cycle size=0A=
						diff -=3D last;=0A=
						return diff =3D=3D=3D first || ( diff % first =3D=3D=3D 0 && diff =
/ first >=3D 0 );=0A=
					}=0A=
				};=0A=
		},=0A=
=0A=
		"PSEUDO": function( pseudo, argument ) {=0A=
			// pseudo-class names are case-insensitive=0A=
			// http://www.w3.org/TR/selectors/#pseudo-classes=0A=
			// Prioritize by case sensitivity in case custom pseudos are added =
with uppercase letters=0A=
			// Remember that setFilters inherits from pseudos=0A=
			var args,=0A=
				fn =3D Expr.pseudos[ pseudo ] || Expr.setFilters[ =
pseudo.toLowerCase() ] ||=0A=
					Sizzle.error( "unsupported pseudo: " + pseudo );=0A=
=0A=
			// The user may use createPseudo to indicate that=0A=
			// arguments are needed to create the filter function=0A=
			// just as Sizzle does=0A=
			if ( fn[ expando ] ) {=0A=
				return fn( argument );=0A=
			}=0A=
=0A=
			// But maintain support for old signatures=0A=
			if ( fn.length > 1 ) {=0A=
				args =3D [ pseudo, pseudo, "", argument ];=0A=
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?=0A=
					markFunction(function( seed, matches ) {=0A=
						var idx,=0A=
							matched =3D fn( seed, argument ),=0A=
							i =3D matched.length;=0A=
						while ( i-- ) {=0A=
							idx =3D indexOf.call( seed, matched[i] );=0A=
							seed[ idx ] =3D !( matches[ idx ] =3D matched[i] );=0A=
						}=0A=
					}) :=0A=
					function( elem ) {=0A=
						return fn( elem, 0, args );=0A=
					};=0A=
			}=0A=
=0A=
			return fn;=0A=
		}=0A=
	},=0A=
=0A=
	pseudos: {=0A=
		// Potentially complex pseudos=0A=
		"not": markFunction(function( selector ) {=0A=
			// Trim the selector passed to compile=0A=
			// to avoid treating leading and trailing=0A=
			// spaces as combinators=0A=
			var input =3D [],=0A=
				results =3D [],=0A=
				matcher =3D compile( selector.replace( rtrim, "$1" ) );=0A=
=0A=
			return matcher[ expando ] ?=0A=
				markFunction(function( seed, matches, context, xml ) {=0A=
					var elem,=0A=
						unmatched =3D matcher( seed, null, xml, [] ),=0A=
						i =3D seed.length;=0A=
=0A=
					// Match elements unmatched by `matcher`=0A=
					while ( i-- ) {=0A=
						if ( (elem =3D unmatched[i]) ) {=0A=
							seed[i] =3D !(matches[i] =3D elem);=0A=
						}=0A=
					}=0A=
				}) :=0A=
				function( elem, context, xml ) {=0A=
					input[0] =3D elem;=0A=
					matcher( input, null, xml, results );=0A=
					return !results.pop();=0A=
				};=0A=
		}),=0A=
=0A=
		"has": markFunction(function( selector ) {=0A=
			return function( elem ) {=0A=
				return Sizzle( selector, elem ).length > 0;=0A=
			};=0A=
		}),=0A=
=0A=
		"contains": markFunction(function( text ) {=0A=
			return function( elem ) {=0A=
				return ( elem.textContent || elem.innerText || getText( elem ) =
).indexOf( text ) > -1;=0A=
			};=0A=
		}),=0A=
=0A=
		// "Whether an element is represented by a :lang() selector=0A=
		// is based solely on the element's language value=0A=
		// being equal to the identifier C,=0A=
		// or beginning with the identifier C immediately followed by "-".=0A=
		// The matching of C against the element's language value is performed =
case-insensitively.=0A=
		// The identifier C does not have to be a valid language name."=0A=
		// http://www.w3.org/TR/selectors/#lang-pseudo=0A=
		"lang": markFunction( function( lang ) {=0A=
			// lang value must be a valid identifider=0A=
			if ( !ridentifier.test(lang || "") ) {=0A=
				Sizzle.error( "unsupported lang: " + lang );=0A=
			}=0A=
			lang =3D lang.replace( runescape, funescape ).toLowerCase();=0A=
			return function( elem ) {=0A=
				var elemLang;=0A=
				do {=0A=
					if ( (elemLang =3D documentIsXML ?=0A=
						elem.getAttribute("xml:lang") || elem.getAttribute("lang") :=0A=
						elem.lang) ) {=0A=
=0A=
						elemLang =3D elemLang.toLowerCase();=0A=
						return elemLang =3D=3D=3D lang || elemLang.indexOf( lang + "-" ) =
=3D=3D=3D 0;=0A=
					}=0A=
				} while ( (elem =3D elem.parentNode) && elem.nodeType =3D=3D=3D 1 );=0A=
				return false;=0A=
			};=0A=
		}),=0A=
=0A=
		// Miscellaneous=0A=
		"target": function( elem ) {=0A=
			var hash =3D window.location && window.location.hash;=0A=
			return hash && hash.slice( 1 ) =3D=3D=3D elem.id;=0A=
		},=0A=
=0A=
		"root": function( elem ) {=0A=
			return elem =3D=3D=3D docElem;=0A=
		},=0A=
=0A=
		"focus": function( elem ) {=0A=
			return elem =3D=3D=3D document.activeElement && (!document.hasFocus =
|| document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);=0A=
		},=0A=
=0A=
		// Boolean properties=0A=
		"enabled": function( elem ) {=0A=
			return elem.disabled =3D=3D=3D false;=0A=
		},=0A=
=0A=
		"disabled": function( elem ) {=0A=
			return elem.disabled =3D=3D=3D true;=0A=
		},=0A=
=0A=
		"checked": function( elem ) {=0A=
			// In CSS3, :checked should return both checked and selected elements=0A=
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked=0A=
			var nodeName =3D elem.nodeName.toLowerCase();=0A=
			return (nodeName =3D=3D=3D "input" && !!elem.checked) || (nodeName =
=3D=3D=3D "option" && !!elem.selected);=0A=
		},=0A=
=0A=
		"selected": function( elem ) {=0A=
			// Accessing this property makes selected-by-default=0A=
			// options in Safari work properly=0A=
			if ( elem.parentNode ) {=0A=
				elem.parentNode.selectedIndex;=0A=
			}=0A=
=0A=
			return elem.selected =3D=3D=3D true;=0A=
		},=0A=
=0A=
		// Contents=0A=
		"empty": function( elem ) {=0A=
			// http://www.w3.org/TR/selectors/#empty-pseudo=0A=
			// :empty is only affected by element nodes and content =
nodes(including text(3), cdata(4)),=0A=
			//   not comment, processing instructions, or others=0A=
			// Thanks to Diego Perini for the nodeName shortcut=0A=
			//   Greater than "@" means alpha characters (specifically not =
starting with "#" or "?")=0A=
			for ( elem =3D elem.firstChild; elem; elem =3D elem.nextSibling ) {=0A=
				if ( elem.nodeName > "@" || elem.nodeType =3D=3D=3D 3 || =
elem.nodeType =3D=3D=3D 4 ) {=0A=
					return false;=0A=
				}=0A=
			}=0A=
			return true;=0A=
		},=0A=
=0A=
		"parent": function( elem ) {=0A=
			return !Expr.pseudos["empty"]( elem );=0A=
		},=0A=
=0A=
		// Element/input types=0A=
		"header": function( elem ) {=0A=
			return rheader.test( elem.nodeName );=0A=
		},=0A=
=0A=
		"input": function( elem ) {=0A=
			return rinputs.test( elem.nodeName );=0A=
		},=0A=
=0A=
		"button": function( elem ) {=0A=
			var name =3D elem.nodeName.toLowerCase();=0A=
			return name =3D=3D=3D "input" && elem.type =3D=3D=3D "button" || name =
=3D=3D=3D "button";=0A=
		},=0A=
=0A=
		"text": function( elem ) {=0A=
			var attr;=0A=
			// IE6 and 7 will map elem.type to 'text' for new HTML5 types =
(search, etc)=0A=
			// use getAttribute instead to test this case=0A=
			return elem.nodeName.toLowerCase() =3D=3D=3D "input" &&=0A=
				elem.type =3D=3D=3D "text" &&=0A=
				( (attr =3D elem.getAttribute("type")) =3D=3D null || =
attr.toLowerCase() =3D=3D=3D elem.type );=0A=
		},=0A=
=0A=
		// Position-in-collection=0A=
		"first": createPositionalPseudo(function() {=0A=
			return [ 0 ];=0A=
		}),=0A=
=0A=
		"last": createPositionalPseudo(function( matchIndexes, length ) {=0A=
			return [ length - 1 ];=0A=
		}),=0A=
=0A=
		"eq": createPositionalPseudo(function( matchIndexes, length, argument =
) {=0A=
			return [ argument < 0 ? argument + length : argument ];=0A=
		}),=0A=
=0A=
		"even": createPositionalPseudo(function( matchIndexes, length ) {=0A=
			var i =3D 0;=0A=
			for ( ; i < length; i +=3D 2 ) {=0A=
				matchIndexes.push( i );=0A=
			}=0A=
			return matchIndexes;=0A=
		}),=0A=
=0A=
		"odd": createPositionalPseudo(function( matchIndexes, length ) {=0A=
			var i =3D 1;=0A=
			for ( ; i < length; i +=3D 2 ) {=0A=
				matchIndexes.push( i );=0A=
			}=0A=
			return matchIndexes;=0A=
		}),=0A=
=0A=
		"lt": createPositionalPseudo(function( matchIndexes, length, argument =
) {=0A=
			var i =3D argument < 0 ? argument + length : argument;=0A=
			for ( ; --i >=3D 0; ) {=0A=
				matchIndexes.push( i );=0A=
			}=0A=
			return matchIndexes;=0A=
		}),=0A=
=0A=
		"gt": createPositionalPseudo(function( matchIndexes, length, argument =
) {=0A=
			var i =3D argument < 0 ? argument + length : argument;=0A=
			for ( ; ++i < length; ) {=0A=
				matchIndexes.push( i );=0A=
			}=0A=
			return matchIndexes;=0A=
		})=0A=
	}=0A=
};=0A=
=0A=
// Add button/input type pseudos=0A=
for ( i in { radio: true, checkbox: true, file: true, password: true, =
image: true } ) {=0A=
	Expr.pseudos[ i ] =3D createInputPseudo( i );=0A=
}=0A=
for ( i in { submit: true, reset: true } ) {=0A=
	Expr.pseudos[ i ] =3D createButtonPseudo( i );=0A=
}=0A=
=0A=
function tokenize( selector, parseOnly ) {=0A=
	var matched, match, tokens, type,=0A=
		soFar, groups, preFilters,=0A=
		cached =3D tokenCache[ selector + " " ];=0A=
=0A=
	if ( cached ) {=0A=
		return parseOnly ? 0 : cached.slice( 0 );=0A=
	}=0A=
=0A=
	soFar =3D selector;=0A=
	groups =3D [];=0A=
	preFilters =3D Expr.preFilter;=0A=
=0A=
	while ( soFar ) {=0A=
=0A=
		// Comma and first run=0A=
		if ( !matched || (match =3D rcomma.exec( soFar )) ) {=0A=
			if ( match ) {=0A=
				// Don't consume trailing commas as valid=0A=
				soFar =3D soFar.slice( match[0].length ) || soFar;=0A=
			}=0A=
			groups.push( tokens =3D [] );=0A=
		}=0A=
=0A=
		matched =3D false;=0A=
=0A=
		// Combinators=0A=
		if ( (match =3D rcombinators.exec( soFar )) ) {=0A=
			matched =3D match.shift();=0A=
			tokens.push( {=0A=
				value: matched,=0A=
				// Cast descendant combinators to space=0A=
				type: match[0].replace( rtrim, " " )=0A=
			} );=0A=
			soFar =3D soFar.slice( matched.length );=0A=
		}=0A=
=0A=
		// Filters=0A=
		for ( type in Expr.filter ) {=0A=
			if ( (match =3D matchExpr[ type ].exec( soFar )) && (!preFilters[ =
type ] ||=0A=
				(match =3D preFilters[ type ]( match ))) ) {=0A=
				matched =3D match.shift();=0A=
				tokens.push( {=0A=
					value: matched,=0A=
					type: type,=0A=
					matches: match=0A=
				} );=0A=
				soFar =3D soFar.slice( matched.length );=0A=
			}=0A=
		}=0A=
=0A=
		if ( !matched ) {=0A=
			break;=0A=
		}=0A=
	}=0A=
=0A=
	// Return the length of the invalid excess=0A=
	// if we're just parsing=0A=
	// Otherwise, throw an error or return tokens=0A=
	return parseOnly ?=0A=
		soFar.length :=0A=
		soFar ?=0A=
			Sizzle.error( selector ) :=0A=
			// Cache the tokens=0A=
			tokenCache( selector, groups ).slice( 0 );=0A=
}=0A=
=0A=
function toSelector( tokens ) {=0A=
	var i =3D 0,=0A=
		len =3D tokens.length,=0A=
		selector =3D "";=0A=
	for ( ; i < len; i++ ) {=0A=
		selector +=3D tokens[i].value;=0A=
	}=0A=
	return selector;=0A=
}=0A=
=0A=
function addCombinator( matcher, combinator, base ) {=0A=
	var dir =3D combinator.dir,=0A=
		checkNonElements =3D base && dir =3D=3D=3D "parentNode",=0A=
		doneName =3D done++;=0A=
=0A=
	return combinator.first ?=0A=
		// Check against closest ancestor/preceding element=0A=
		function( elem, context, xml ) {=0A=
			while ( (elem =3D elem[ dir ]) ) {=0A=
				if ( elem.nodeType =3D=3D=3D 1 || checkNonElements ) {=0A=
					return matcher( elem, context, xml );=0A=
				}=0A=
			}=0A=
		} :=0A=
=0A=
		// Check against all ancestor/preceding elements=0A=
		function( elem, context, xml ) {=0A=
			var data, cache, outerCache,=0A=
				dirkey =3D dirruns + " " + doneName;=0A=
=0A=
			// We can't set arbitrary data on XML nodes, so they don't benefit =
from dir caching=0A=
			if ( xml ) {=0A=
				while ( (elem =3D elem[ dir ]) ) {=0A=
					if ( elem.nodeType =3D=3D=3D 1 || checkNonElements ) {=0A=
						if ( matcher( elem, context, xml ) ) {=0A=
							return true;=0A=
						}=0A=
					}=0A=
				}=0A=
			} else {=0A=
				while ( (elem =3D elem[ dir ]) ) {=0A=
					if ( elem.nodeType =3D=3D=3D 1 || checkNonElements ) {=0A=
						outerCache =3D elem[ expando ] || (elem[ expando ] =3D {});=0A=
						if ( (cache =3D outerCache[ dir ]) && cache[0] =3D=3D=3D dirkey ) {=0A=
							if ( (data =3D cache[1]) =3D=3D=3D true || data =3D=3D=3D =
cachedruns ) {=0A=
								return data =3D=3D=3D true;=0A=
							}=0A=
						} else {=0A=
							cache =3D outerCache[ dir ] =3D [ dirkey ];=0A=
							cache[1] =3D matcher( elem, context, xml ) || cachedruns;=0A=
							if ( cache[1] =3D=3D=3D true ) {=0A=
								return true;=0A=
							}=0A=
						}=0A=
					}=0A=
				}=0A=
			}=0A=
		};=0A=
}=0A=
=0A=
function elementMatcher( matchers ) {=0A=
	return matchers.length > 1 ?=0A=
		function( elem, context, xml ) {=0A=
			var i =3D matchers.length;=0A=
			while ( i-- ) {=0A=
				if ( !matchers[i]( elem, context, xml ) ) {=0A=
					return false;=0A=
				}=0A=
			}=0A=
			return true;=0A=
		} :=0A=
		matchers[0];=0A=
}=0A=
=0A=
function condense( unmatched, map, filter, context, xml ) {=0A=
	var elem,=0A=
		newUnmatched =3D [],=0A=
		i =3D 0,=0A=
		len =3D unmatched.length,=0A=
		mapped =3D map !=3D null;=0A=
=0A=
	for ( ; i < len; i++ ) {=0A=
		if ( (elem =3D unmatched[i]) ) {=0A=
			if ( !filter || filter( elem, context, xml ) ) {=0A=
				newUnmatched.push( elem );=0A=
				if ( mapped ) {=0A=
					map.push( i );=0A=
				}=0A=
			}=0A=
		}=0A=
	}=0A=
=0A=
	return newUnmatched;=0A=
}=0A=
=0A=
function setMatcher( preFilter, selector, matcher, postFilter, =
postFinder, postSelector ) {=0A=
	if ( postFilter && !postFilter[ expando ] ) {=0A=
		postFilter =3D setMatcher( postFilter );=0A=
	}=0A=
	if ( postFinder && !postFinder[ expando ] ) {=0A=
		postFinder =3D setMatcher( postFinder, postSelector );=0A=
	}=0A=
	return markFunction(function( seed, results, context, xml ) {=0A=
		var temp, i, elem,=0A=
			preMap =3D [],=0A=
			postMap =3D [],=0A=
			preexisting =3D results.length,=0A=
=0A=
			// Get initial elements from seed or context=0A=
			elems =3D seed || multipleContexts( selector || "*", context.nodeType =
? [ context ] : context, [] ),=0A=
=0A=
			// Prefilter to get matcher input, preserving a map for seed-results =
synchronization=0A=
			matcherIn =3D preFilter && ( seed || !selector ) ?=0A=
				condense( elems, preMap, preFilter, context, xml ) :=0A=
				elems,=0A=
=0A=
			matcherOut =3D matcher ?=0A=
				// If we have a postFinder, or filtered seed, or non-seed postFilter =
or preexisting results,=0A=
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?=0A=
=0A=
					// ...intermediate processing is necessary=0A=
					[] :=0A=
=0A=
					// ...otherwise use results directly=0A=
					results :=0A=
				matcherIn;=0A=
=0A=
		// Find primary matches=0A=
		if ( matcher ) {=0A=
			matcher( matcherIn, matcherOut, context, xml );=0A=
		}=0A=
=0A=
		// Apply postFilter=0A=
		if ( postFilter ) {=0A=
			temp =3D condense( matcherOut, postMap );=0A=
			postFilter( temp, [], context, xml );=0A=
=0A=
			// Un-match failing elements by moving them back to matcherIn=0A=
			i =3D temp.length;=0A=
			while ( i-- ) {=0A=
				if ( (elem =3D temp[i]) ) {=0A=
					matcherOut[ postMap[i] ] =3D !(matcherIn[ postMap[i] ] =3D elem);=0A=
				}=0A=
			}=0A=
		}=0A=
=0A=
		if ( seed ) {=0A=
			if ( postFinder || preFilter ) {=0A=
				if ( postFinder ) {=0A=
					// Get the final matcherOut by condensing this intermediate into =
postFinder contexts=0A=
					temp =3D [];=0A=
					i =3D matcherOut.length;=0A=
					while ( i-- ) {=0A=
						if ( (elem =3D matcherOut[i]) ) {=0A=
							// Restore matcherIn since elem is not yet a final match=0A=
							temp.push( (matcherIn[i] =3D elem) );=0A=
						}=0A=
					}=0A=
					postFinder( null, (matcherOut =3D []), temp, xml );=0A=
				}=0A=
=0A=
				// Move matched elements from seed to results to keep them =
synchronized=0A=
				i =3D matcherOut.length;=0A=
				while ( i-- ) {=0A=
					if ( (elem =3D matcherOut[i]) &&=0A=
						(temp =3D postFinder ? indexOf.call( seed, elem ) : preMap[i]) > =
-1 ) {=0A=
=0A=
						seed[temp] =3D !(results[temp] =3D elem);=0A=
					}=0A=
				}=0A=
			}=0A=
=0A=
		// Add elements to results, through postFinder if defined=0A=
		} else {=0A=
			matcherOut =3D condense(=0A=
				matcherOut =3D=3D=3D results ?=0A=
					matcherOut.splice( preexisting, matcherOut.length ) :=0A=
					matcherOut=0A=
			);=0A=
			if ( postFinder ) {=0A=
				postFinder( null, results, matcherOut, xml );=0A=
			} else {=0A=
				push.apply( results, matcherOut );=0A=
			}=0A=
		}=0A=
	});=0A=
}=0A=
=0A=
function matcherFromTokens( tokens ) {=0A=
	var checkContext, matcher, j,=0A=
		len =3D tokens.length,=0A=
		leadingRelative =3D Expr.relative[ tokens[0].type ],=0A=
		implicitRelative =3D leadingRelative || Expr.relative[" "],=0A=
		i =3D leadingRelative ? 1 : 0,=0A=
=0A=
		// The foundational matcher ensures that elements are reachable from =
top-level context(s)=0A=
		matchContext =3D addCombinator( function( elem ) {=0A=
			return elem =3D=3D=3D checkContext;=0A=
		}, implicitRelative, true ),=0A=
		matchAnyContext =3D addCombinator( function( elem ) {=0A=
			return indexOf.call( checkContext, elem ) > -1;=0A=
		}, implicitRelative, true ),=0A=
		matchers =3D [ function( elem, context, xml ) {=0A=
			return ( !leadingRelative && ( xml || context !=3D=3D =
outermostContext ) ) || (=0A=
				(checkContext =3D context).nodeType ?=0A=
					matchContext( elem, context, xml ) :=0A=
					matchAnyContext( elem, context, xml ) );=0A=
		} ];=0A=
=0A=
	for ( ; i < len; i++ ) {=0A=
		if ( (matcher =3D Expr.relative[ tokens[i].type ]) ) {=0A=
			matchers =3D [ addCombinator(elementMatcher( matchers ), matcher) ];=0A=
		} else {=0A=
			matcher =3D Expr.filter[ tokens[i].type ].apply( null, =
tokens[i].matches );=0A=
=0A=
			// Return special upon seeing a positional matcher=0A=
			if ( matcher[ expando ] ) {=0A=
				// Find the next relative operator (if any) for proper handling=0A=
				j =3D ++i;=0A=
				for ( ; j < len; j++ ) {=0A=
					if ( Expr.relative[ tokens[j].type ] ) {=0A=
						break;=0A=
					}=0A=
				}=0A=
				return setMatcher(=0A=
					i > 1 && elementMatcher( matchers ),=0A=
					i > 1 && toSelector( tokens.slice( 0, i - 1 ) ).replace( rtrim, =
"$1" ),=0A=
					matcher,=0A=
					i < j && matcherFromTokens( tokens.slice( i, j ) ),=0A=
					j < len && matcherFromTokens( (tokens =3D tokens.slice( j )) ),=0A=
					j < len && toSelector( tokens )=0A=
				);=0A=
			}=0A=
			matchers.push( matcher );=0A=
		}=0A=
	}=0A=
=0A=
	return elementMatcher( matchers );=0A=
}=0A=
=0A=
function matcherFromGroupMatchers( elementMatchers, setMatchers ) {=0A=
	// A counter to specify which element is currently being matched=0A=
	var matcherCachedRuns =3D 0,=0A=
		bySet =3D setMatchers.length > 0,=0A=
		byElement =3D elementMatchers.length > 0,=0A=
		superMatcher =3D function( seed, context, xml, results, expandContext =
) {=0A=
			var elem, j, matcher,=0A=
				setMatched =3D [],=0A=
				matchedCount =3D 0,=0A=
				i =3D "0",=0A=
				unmatched =3D seed && [],=0A=
				outermost =3D expandContext !=3D null,=0A=
				contextBackup =3D outermostContext,=0A=
				// We must always have either seed elements or context=0A=
				elems =3D seed || byElement && Expr.find["TAG"]( "*", expandContext =
&& context.parentNode || context ),=0A=
				// Use integer dirruns iff this is the outermost matcher=0A=
				dirrunsUnique =3D (dirruns +=3D contextBackup =3D=3D null ? 1 : =
Math.random() || 0.1);=0A=
=0A=
			if ( outermost ) {=0A=
				outermostContext =3D context !=3D=3D document && context;=0A=
				cachedruns =3D matcherCachedRuns;=0A=
			}=0A=
=0A=
			// Add elements passing elementMatchers directly to results=0A=
			// Keep `i` a string if there are no elements so `matchedCount` will =
be "00" below=0A=
			for ( ; (elem =3D elems[i]) !=3D null; i++ ) {=0A=
				if ( byElement && elem ) {=0A=
					j =3D 0;=0A=
					while ( (matcher =3D elementMatchers[j++]) ) {=0A=
						if ( matcher( elem, context, xml ) ) {=0A=
							results.push( elem );=0A=
							break;=0A=
						}=0A=
					}=0A=
					if ( outermost ) {=0A=
						dirruns =3D dirrunsUnique;=0A=
						cachedruns =3D ++matcherCachedRuns;=0A=
					}=0A=
				}=0A=
=0A=
				// Track unmatched elements for set filters=0A=
				if ( bySet ) {=0A=
					// They will have gone through all possible matchers=0A=
					if ( (elem =3D !matcher && elem) ) {=0A=
						matchedCount--;=0A=
					}=0A=
=0A=
					// Lengthen the array for every element, matched or not=0A=
					if ( seed ) {=0A=
						unmatched.push( elem );=0A=
					}=0A=
				}=0A=
			}=0A=
=0A=
			// Apply set filters to unmatched elements=0A=
			matchedCount +=3D i;=0A=
			if ( bySet && i !=3D=3D matchedCount ) {=0A=
				j =3D 0;=0A=
				while ( (matcher =3D setMatchers[j++]) ) {=0A=
					matcher( unmatched, setMatched, context, xml );=0A=
				}=0A=
=0A=
				if ( seed ) {=0A=
					// Reintegrate element matches to eliminate the need for sorting=0A=
					if ( matchedCount > 0 ) {=0A=
						while ( i-- ) {=0A=
							if ( !(unmatched[i] || setMatched[i]) ) {=0A=
								setMatched[i] =3D pop.call( results );=0A=
							}=0A=
						}=0A=
					}=0A=
=0A=
					// Discard index placeholder values to get only actual matches=0A=
					setMatched =3D condense( setMatched );=0A=
				}=0A=
=0A=
				// Add matches to results=0A=
				push.apply( results, setMatched );=0A=
=0A=
				// Seedless set matches succeeding multiple successful matchers =
stipulate sorting=0A=
				if ( outermost && !seed && setMatched.length > 0 &&=0A=
					( matchedCount + setMatchers.length ) > 1 ) {=0A=
=0A=
					Sizzle.uniqueSort( results );=0A=
				}=0A=
			}=0A=
=0A=
			// Override manipulation of globals by nested matchers=0A=
			if ( outermost ) {=0A=
				dirruns =3D dirrunsUnique;=0A=
				outermostContext =3D contextBackup;=0A=
			}=0A=
=0A=
			return unmatched;=0A=
		};=0A=
=0A=
	return bySet ?=0A=
		markFunction( superMatcher ) :=0A=
		superMatcher;=0A=
}=0A=
=0A=
compile =3D Sizzle.compile =3D function( selector, group /* Internal Use =
Only */ ) {=0A=
	var i,=0A=
		setMatchers =3D [],=0A=
		elementMatchers =3D [],=0A=
		cached =3D compilerCache[ selector + " " ];=0A=
=0A=
	if ( !cached ) {=0A=
		// Generate a function of recursive functions that can be used to =
check each element=0A=
		if ( !group ) {=0A=
			group =3D tokenize( selector );=0A=
		}=0A=
		i =3D group.length;=0A=
		while ( i-- ) {=0A=
			cached =3D matcherFromTokens( group[i] );=0A=
			if ( cached[ expando ] ) {=0A=
				setMatchers.push( cached );=0A=
			} else {=0A=
				elementMatchers.push( cached );=0A=
			}=0A=
		}=0A=
=0A=
		// Cache the compiled function=0A=
		cached =3D compilerCache( selector, matcherFromGroupMatchers( =
elementMatchers, setMatchers ) );=0A=
	}=0A=
	return cached;=0A=
};=0A=
=0A=
function multipleContexts( selector, contexts, results ) {=0A=
	var i =3D 0,=0A=
		len =3D contexts.length;=0A=
	for ( ; i < len; i++ ) {=0A=
		Sizzle( selector, contexts[i], results );=0A=
	}=0A=
	return results;=0A=
}=0A=
=0A=
function select( selector, context, results, seed ) {=0A=
	var i, tokens, token, type, find,=0A=
		match =3D tokenize( selector );=0A=
=0A=
	if ( !seed ) {=0A=
		// Try to minimize operations if there is only one group=0A=
		if ( match.length =3D=3D=3D 1 ) {=0A=
=0A=
			// Take a shortcut and set the context if the root selector is an ID=0A=
			tokens =3D match[0] =3D match[0].slice( 0 );=0A=
			if ( tokens.length > 2 && (token =3D tokens[0]).type =3D=3D=3D "ID" &&=0A=
					context.nodeType =3D=3D=3D 9 && !documentIsXML &&=0A=
					Expr.relative[ tokens[1].type ] ) {=0A=
=0A=
				context =3D Expr.find["ID"]( token.matches[0].replace( runescape, =
funescape ), context )[0];=0A=
				if ( !context ) {=0A=
					return results;=0A=
				}=0A=
=0A=
				selector =3D selector.slice( tokens.shift().value.length );=0A=
			}=0A=
=0A=
			// Fetch a seed set for right-to-left matching=0A=
			i =3D matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;=0A=
			while ( i-- ) {=0A=
				token =3D tokens[i];=0A=
=0A=
				// Abort if we hit a combinator=0A=
				if ( Expr.relative[ (type =3D token.type) ] ) {=0A=
					break;=0A=
				}=0A=
				if ( (find =3D Expr.find[ type ]) ) {=0A=
					// Search, expanding context for leading sibling combinators=0A=
					if ( (seed =3D find(=0A=
						token.matches[0].replace( runescape, funescape ),=0A=
						rsibling.test( tokens[0].type ) && context.parentNode || context=0A=
					)) ) {=0A=
=0A=
						// If seed is empty or no tokens remain, we can return early=0A=
						tokens.splice( i, 1 );=0A=
						selector =3D seed.length && toSelector( tokens );=0A=
						if ( !selector ) {=0A=
							push.apply( results, slice.call( seed, 0 ) );=0A=
							return results;=0A=
						}=0A=
=0A=
						break;=0A=
					}=0A=
				}=0A=
			}=0A=
		}=0A=
	}=0A=
=0A=
	// Compile and execute a filtering function=0A=
	// Provide `match` to avoid retokenization if we modified the selector =
above=0A=
	compile( selector, match )(=0A=
		seed,=0A=
		context,=0A=
		documentIsXML,=0A=
		results,=0A=
		rsibling.test( selector )=0A=
	);=0A=
	return results;=0A=
}=0A=
=0A=
// Deprecated=0A=
Expr.pseudos["nth"] =3D Expr.pseudos["eq"];=0A=
=0A=
// Easy API for creating new setFilters=0A=
function setFilters() {}=0A=
Expr.filters =3D setFilters.prototype =3D Expr.pseudos;=0A=
Expr.setFilters =3D new setFilters();=0A=
=0A=
// Initialize with the default document=0A=
setDocument();=0A=
=0A=
// Override sizzle attribute retrieval=0A=
Sizzle.attr =3D jQuery.attr;=0A=
jQuery.find =3D Sizzle;=0A=
jQuery.expr =3D Sizzle.selectors;=0A=
jQuery.expr[":"] =3D jQuery.expr.pseudos;=0A=
jQuery.unique =3D Sizzle.uniqueSort;=0A=
jQuery.text =3D Sizzle.getText;=0A=
jQuery.isXMLDoc =3D Sizzle.isXML;=0A=
jQuery.contains =3D Sizzle.contains;=0A=
=0A=
=0A=
})( window );=0A=
var runtil =3D /Until$/,=0A=
	rparentsprev =3D /^(?:parents|prev(?:Until|All))/,=0A=
	isSimple =3D /^.[^:#\[\.,]*$/,=0A=
	rneedsContext =3D jQuery.expr.match.needsContext,=0A=
	// methods guaranteed to produce a unique set when starting from a =
unique set=0A=
	guaranteedUnique =3D {=0A=
		children: true,=0A=
		contents: true,=0A=
		next: true,=0A=
		prev: true=0A=
	};=0A=
=0A=
jQuery.fn.extend({=0A=
	find: function( selector ) {=0A=
		var i, ret, self,=0A=
			len =3D this.length;=0A=
=0A=
		if ( typeof selector !=3D=3D "string" ) {=0A=
			self =3D this;=0A=
			return this.pushStack( jQuery( selector ).filter(function() {=0A=
				for ( i =3D 0; i < len; i++ ) {=0A=
					if ( jQuery.contains( self[ i ], this ) ) {=0A=
						return true;=0A=
					}=0A=
				}=0A=
			}) );=0A=
		}=0A=
=0A=
		ret =3D [];=0A=
		for ( i =3D 0; i < len; i++ ) {=0A=
			jQuery.find( selector, this[ i ], ret );=0A=
		}=0A=
=0A=
		// Needed because $( selector, context ) becomes $( context ).find( =
selector )=0A=
		ret =3D this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );=0A=
		ret.selector =3D ( this.selector ? this.selector + " " : "" ) + =
selector;=0A=
		return ret;=0A=
	},=0A=
=0A=
	has: function( target ) {=0A=
		var i,=0A=
			targets =3D jQuery( target, this ),=0A=
			len =3D targets.length;=0A=
=0A=
		return this.filter(function() {=0A=
			for ( i =3D 0; i < len; i++ ) {=0A=
				if ( jQuery.contains( this, targets[i] ) ) {=0A=
					return true;=0A=
				}=0A=
			}=0A=
		});=0A=
	},=0A=
=0A=
	not: function( selector ) {=0A=
		return this.pushStack( winnow(this, selector, false) );=0A=
	},=0A=
=0A=
	filter: function( selector ) {=0A=
		return this.pushStack( winnow(this, selector, true) );=0A=
	},=0A=
=0A=
	is: function( selector ) {=0A=
		return !!selector && (=0A=
			typeof selector =3D=3D=3D "string" ?=0A=
				// If this is a positional/relative selector, check membership in =
the returned set=0A=
				// so $("p:first").is("p:last") won't return true for a doc with two =
"p".=0A=
				rneedsContext.test( selector ) ?=0A=
					jQuery( selector, this.context ).index( this[0] ) >=3D 0 :=0A=
					jQuery.filter( selector, this ).length > 0 :=0A=
				this.filter( selector ).length > 0 );=0A=
	},=0A=
=0A=
	closest: function( selectors, context ) {=0A=
		var cur,=0A=
			i =3D 0,=0A=
			l =3D this.length,=0A=
			ret =3D [],=0A=
			pos =3D rneedsContext.test( selectors ) || typeof selectors !=3D=3D =
"string" ?=0A=
				jQuery( selectors, context || this.context ) :=0A=
				0;=0A=
=0A=
		for ( ; i < l; i++ ) {=0A=
			cur =3D this[i];=0A=
=0A=
			while ( cur && cur.ownerDocument && cur !=3D=3D context && =
cur.nodeType !=3D=3D 11 ) {=0A=
				if ( pos ? pos.index(cur) > -1 : jQuery.find.matchesSelector(cur, =
selectors) ) {=0A=
					ret.push( cur );=0A=
					break;=0A=
				}=0A=
				cur =3D cur.parentNode;=0A=
			}=0A=
		}=0A=
=0A=
		return this.pushStack( ret.length > 1 ? jQuery.unique( ret ) : ret );=0A=
	},=0A=
=0A=
	// Determine the position of an element within=0A=
	// the matched set of elements=0A=
	index: function( elem ) {=0A=
=0A=
		// No argument, return index in parent=0A=
		if ( !elem ) {=0A=
			return ( this[0] && this[0].parentNode ) ? =
this.first().prevAll().length : -1;=0A=
		}=0A=
=0A=
		// index in selector=0A=
		if ( typeof elem =3D=3D=3D "string" ) {=0A=
			return jQuery.inArray( this[0], jQuery( elem ) );=0A=
		}=0A=
=0A=
		// Locate the position of the desired element=0A=
		return jQuery.inArray(=0A=
			// If it receives a jQuery object, the first element is used=0A=
			elem.jquery ? elem[0] : elem, this );=0A=
	},=0A=
=0A=
	add: function( selector, context ) {=0A=
		var set =3D typeof selector =3D=3D=3D "string" ?=0A=
				jQuery( selector, context ) :=0A=
				jQuery.makeArray( selector && selector.nodeType ? [ selector ] : =
selector ),=0A=
			all =3D jQuery.merge( this.get(), set );=0A=
=0A=
		return this.pushStack( jQuery.unique(all) );=0A=
	},=0A=
=0A=
	addBack: function( selector ) {=0A=
		return this.add( selector =3D=3D null ?=0A=
			this.prevObject : this.prevObject.filter(selector)=0A=
		);=0A=
	}=0A=
});=0A=
=0A=
jQuery.fn.andSelf =3D jQuery.fn.addBack;=0A=
=0A=
function sibling( cur, dir ) {=0A=
	do {=0A=
		cur =3D cur[ dir ];=0A=
	} while ( cur && cur.nodeType !=3D=3D 1 );=0A=
=0A=
	return cur;=0A=
}=0A=
=0A=
jQuery.each({=0A=
	parent: function( elem ) {=0A=
		var parent =3D elem.parentNode;=0A=
		return parent && parent.nodeType !=3D=3D 11 ? parent : null;=0A=
	},=0A=
	parents: function( elem ) {=0A=
		return jQuery.dir( elem, "parentNode" );=0A=
	},=0A=
	parentsUntil: function( elem, i, until ) {=0A=
		return jQuery.dir( elem, "parentNode", until );=0A=
	},=0A=
	next: function( elem ) {=0A=
		return sibling( elem, "nextSibling" );=0A=
	},=0A=
	prev: function( elem ) {=0A=
		return sibling( elem, "previousSibling" );=0A=
	},=0A=
	nextAll: function( elem ) {=0A=
		return jQuery.dir( elem, "nextSibling" );=0A=
	},=0A=
	prevAll: function( elem ) {=0A=
		return jQuery.dir( elem, "previousSibling" );=0A=
	},=0A=
	nextUntil: function( elem, i, until ) {=0A=
		return jQuery.dir( elem, "nextSibling", until );=0A=
	},=0A=
	prevUntil: function( elem, i, until ) {=0A=
		return jQuery.dir( elem, "previousSibling", until );=0A=
	},=0A=
	siblings: function( elem ) {=0A=
		return jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );=0A=
	},=0A=
	children: function( elem ) {=0A=
		return jQuery.sibling( elem.firstChild );=0A=
	},=0A=
	contents: function( elem ) {=0A=
		return jQuery.nodeName( elem, "iframe" ) ?=0A=
			elem.contentDocument || elem.contentWindow.document :=0A=
			jQuery.merge( [], elem.childNodes );=0A=
	}=0A=
}, function( name, fn ) {=0A=
	jQuery.fn[ name ] =3D function( until, selector ) {=0A=
		var ret =3D jQuery.map( this, fn, until );=0A=
=0A=
		if ( !runtil.test( name ) ) {=0A=
			selector =3D until;=0A=
		}=0A=
=0A=
		if ( selector && typeof selector =3D=3D=3D "string" ) {=0A=
			ret =3D jQuery.filter( selector, ret );=0A=
		}=0A=
=0A=
		ret =3D this.length > 1 && !guaranteedUnique[ name ] ? jQuery.unique( =
ret ) : ret;=0A=
=0A=
		if ( this.length > 1 && rparentsprev.test( name ) ) {=0A=
			ret =3D ret.reverse();=0A=
		}=0A=
=0A=
		return this.pushStack( ret );=0A=
	};=0A=
});=0A=
=0A=
jQuery.extend({=0A=
	filter: function( expr, elems, not ) {=0A=
		if ( not ) {=0A=
			expr =3D ":not(" + expr + ")";=0A=
		}=0A=
=0A=
		return elems.length =3D=3D=3D 1 ?=0A=
			jQuery.find.matchesSelector(elems[0], expr) ? [ elems[0] ] : [] :=0A=
			jQuery.find.matches(expr, elems);=0A=
	},=0A=
=0A=
	dir: function( elem, dir, until ) {=0A=
		var matched =3D [],=0A=
			cur =3D elem[ dir ];=0A=
=0A=
		while ( cur && cur.nodeType !=3D=3D 9 && (until =3D=3D=3D undefined || =
cur.nodeType !=3D=3D 1 || !jQuery( cur ).is( until )) ) {=0A=
			if ( cur.nodeType =3D=3D=3D 1 ) {=0A=
				matched.push( cur );=0A=
			}=0A=
			cur =3D cur[dir];=0A=
		}=0A=
		return matched;=0A=
	},=0A=
=0A=
	sibling: function( n, elem ) {=0A=
		var r =3D [];=0A=
=0A=
		for ( ; n; n =3D n.nextSibling ) {=0A=
			if ( n.nodeType =3D=3D=3D 1 && n !=3D=3D elem ) {=0A=
				r.push( n );=0A=
			}=0A=
		}=0A=
=0A=
		return r;=0A=
	}=0A=
});=0A=
=0A=
// Implement the identical functionality for filter and not=0A=
function winnow( elements, qualifier, keep ) {=0A=
=0A=
	// Can't pass null or undefined to indexOf in Firefox 4=0A=
	// Set to 0 to skip string check=0A=
	qualifier =3D qualifier || 0;=0A=
=0A=
	if ( jQuery.isFunction( qualifier ) ) {=0A=
		return jQuery.grep(elements, function( elem, i ) {=0A=
			var retVal =3D !!qualifier.call( elem, i, elem );=0A=
			return retVal =3D=3D=3D keep;=0A=
		});=0A=
=0A=
	} else if ( qualifier.nodeType ) {=0A=
		return jQuery.grep(elements, function( elem ) {=0A=
			return ( elem =3D=3D=3D qualifier ) =3D=3D=3D keep;=0A=
		});=0A=
=0A=
	} else if ( typeof qualifier =3D=3D=3D "string" ) {=0A=
		var filtered =3D jQuery.grep(elements, function( elem ) {=0A=
			return elem.nodeType =3D=3D=3D 1;=0A=
		});=0A=
=0A=
		if ( isSimple.test( qualifier ) ) {=0A=
			return jQuery.filter(qualifier, filtered, !keep);=0A=
		} else {=0A=
			qualifier =3D jQuery.filter( qualifier, filtered );=0A=
		}=0A=
	}=0A=
=0A=
	return jQuery.grep(elements, function( elem ) {=0A=
		return ( jQuery.inArray( elem, qualifier ) >=3D 0 ) =3D=3D=3D keep;=0A=
	});=0A=
}=0A=
function createSafeFragment( document ) {=0A=
	var list =3D nodeNames.split( "|" ),=0A=
		safeFrag =3D document.createDocumentFragment();=0A=
=0A=
	if ( safeFrag.createElement ) {=0A=
		while ( list.length ) {=0A=
			safeFrag.createElement(=0A=
				list.pop()=0A=
			);=0A=
		}=0A=
	}=0A=
	return safeFrag;=0A=
}=0A=
=0A=
var nodeNames =3D =
"abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|fig=
ure|footer|" +=0A=
		=
"header|hgroup|mark|meter|nav|output|progress|section|summary|time|video"=
,=0A=
	rinlinejQuery =3D / jQuery\d+=3D"(?:null|\d+)"/g,=0A=
	rnoshimcache =3D new RegExp("<(?:" + nodeNames + ")[\\s/>]", "i"),=0A=
	rleadingWhitespace =3D /^\s+/,=0A=
	rxhtmlTag =3D =
/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi=
,=0A=
	rtagName =3D /<([\w:]+)/,=0A=
	rtbody =3D /<tbody/i,=0A=
	rhtml =3D /<|&#?\w+;/,=0A=
	rnoInnerhtml =3D /<(?:script|style|link)/i,=0A=
	manipulation_rcheckableType =3D /^(?:checkbox|radio)$/i,=0A=
	// checked=3D"checked" or checked=0A=
	rchecked =3D /checked\s*(?:[^=3D]|=3D\s*.checked.)/i,=0A=
	rscriptType =3D /^$|\/(?:java|ecma)script/i,=0A=
	rscriptTypeMasked =3D /^true\/(.*)/,=0A=
	rcleanScript =3D /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,=0A=
=0A=
	// We have to close these tags to support XHTML (#13200)=0A=
	wrapMap =3D {=0A=
		option: [ 1, "<select multiple=3D'multiple'>", "</select>" ],=0A=
		legend: [ 1, "<fieldset>", "</fieldset>" ],=0A=
		area: [ 1, "<map>", "</map>" ],=0A=
		param: [ 1, "<object>", "</object>" ],=0A=
		thead: [ 1, "<table>", "</table>" ],=0A=
		tr: [ 2, "<table><tbody>", "</tbody></table>" ],=0A=
		col: [ 2, "<table><tbody></tbody><colgroup>", "</colgroup></table>" ],=0A=
		td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],=0A=
=0A=
		// IE6-8 can't serialize link, script, style, or any html5 (NoScope) =
tags,=0A=
		// unless wrapped in a div with non-breaking characters in front of it.=0A=
		_default: jQuery.support.htmlSerialize ? [ 0, "", "" ] : [ 1, =
"X<div>", "</div>"  ]=0A=
	},=0A=
	safeFragment =3D createSafeFragment( document ),=0A=
	fragmentDiv =3D safeFragment.appendChild( document.createElement("div") =
);=0A=
=0A=
wrapMap.optgroup =3D wrapMap.option;=0A=
wrapMap.tbody =3D wrapMap.tfoot =3D wrapMap.colgroup =3D wrapMap.caption =
=3D wrapMap.thead;=0A=
wrapMap.th =3D wrapMap.td;=0A=
=0A=
jQuery.fn.extend({=0A=
	text: function( value ) {=0A=
		return jQuery.access( this, function( value ) {=0A=
			return value =3D=3D=3D undefined ?=0A=
				jQuery.text( this ) :=0A=
				this.empty().append( ( this[0] && this[0].ownerDocument || document =
).createTextNode( value ) );=0A=
		}, null, value, arguments.length );=0A=
	},=0A=
=0A=
	wrapAll: function( html ) {=0A=
		if ( jQuery.isFunction( html ) ) {=0A=
			return this.each(function(i) {=0A=
				jQuery(this).wrapAll( html.call(this, i) );=0A=
			});=0A=
		}=0A=
=0A=
		if ( this[0] ) {=0A=
			// The elements to wrap the target around=0A=
			var wrap =3D jQuery( html, this[0].ownerDocument ).eq(0).clone(true);=0A=
=0A=
			if ( this[0].parentNode ) {=0A=
				wrap.insertBefore( this[0] );=0A=
			}=0A=
=0A=
			wrap.map(function() {=0A=
				var elem =3D this;=0A=
=0A=
				while ( elem.firstChild && elem.firstChild.nodeType =3D=3D=3D 1 ) {=0A=
					elem =3D elem.firstChild;=0A=
				}=0A=
=0A=
				return elem;=0A=
			}).append( this );=0A=
		}=0A=
=0A=
		return this;=0A=
	},=0A=
=0A=
	wrapInner: function( html ) {=0A=
		if ( jQuery.isFunction( html ) ) {=0A=
			return this.each(function(i) {=0A=
				jQuery(this).wrapInner( html.call(this, i) );=0A=
			});=0A=
		}=0A=
=0A=
		return this.each(function() {=0A=
			var self =3D jQuery( this ),=0A=
				contents =3D self.contents();=0A=
=0A=
			if ( contents.length ) {=0A=
				contents.wrapAll( html );=0A=
=0A=
			} else {=0A=
				self.append( html );=0A=
			}=0A=
		});=0A=
	},=0A=
=0A=
	wrap: function( html ) {=0A=
		var isFunction =3D jQuery.isFunction( html );=0A=
=0A=
		return this.each(function(i) {=0A=
			jQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );=0A=
		});=0A=
	},=0A=
=0A=
	unwrap: function() {=0A=
		return this.parent().each(function() {=0A=
			if ( !jQuery.nodeName( this, "body" ) ) {=0A=
				jQuery( this ).replaceWith( this.childNodes );=0A=
			}=0A=
		}).end();=0A=
	},=0A=
=0A=
	append: function() {=0A=
		return this.domManip(arguments, true, function( elem ) {=0A=
			if ( this.nodeType =3D=3D=3D 1 || this.nodeType =3D=3D=3D 11 || =
this.nodeType =3D=3D=3D 9 ) {=0A=
				this.appendChild( elem );=0A=
			}=0A=
		});=0A=
	},=0A=
=0A=
	prepend: function() {=0A=
		return this.domManip(arguments, true, function( elem ) {=0A=
			if ( this.nodeType =3D=3D=3D 1 || this.nodeType =3D=3D=3D 11 || =
this.nodeType =3D=3D=3D 9 ) {=0A=
				this.insertBefore( elem, this.firstChild );=0A=
			}=0A=
		});=0A=
	},=0A=
=0A=
	before: function() {=0A=
		return this.domManip( arguments, false, function( elem ) {=0A=
			if ( this.parentNode ) {=0A=
				this.parentNode.insertBefore( elem, this );=0A=
			}=0A=
		});=0A=
	},=0A=
=0A=
	after: function() {=0A=
		return this.domManip( arguments, false, function( elem ) {=0A=
			if ( this.parentNode ) {=0A=
				this.parentNode.insertBefore( elem, this.nextSibling );=0A=
			}=0A=
		});=0A=
	},=0A=
=0A=
	// keepData is for internal use only--do not document=0A=
	remove: function( selector, keepData ) {=0A=
		var elem,=0A=
			i =3D 0;=0A=
=0A=
		for ( ; (elem =3D this[i]) !=3D null; i++ ) {=0A=
			if ( !selector || jQuery.filter( selector, [ elem ] ).length > 0 ) {=0A=
				if ( !keepData && elem.nodeType =3D=3D=3D 1 ) {=0A=
					jQuery.cleanData( getAll( elem ) );=0A=
				}=0A=
=0A=
				if ( elem.parentNode ) {=0A=
					if ( keepData && jQuery.contains( elem.ownerDocument, elem ) ) {=0A=
						setGlobalEval( getAll( elem, "script" ) );=0A=
					}=0A=
					elem.parentNode.removeChild( elem );=0A=
				}=0A=
			}=0A=
		}=0A=
=0A=
		return this;=0A=
	},=0A=
=0A=
	empty: function() {=0A=
		var elem,=0A=
			i =3D 0;=0A=
=0A=
		for ( ; (elem =3D this[i]) !=3D null; i++ ) {=0A=
			// Remove element nodes and prevent memory leaks=0A=
			if ( elem.nodeType =3D=3D=3D 1 ) {=0A=
				jQuery.cleanData( getAll( elem, false ) );=0A=
			}=0A=
=0A=
			// Remove any remaining nodes=0A=
			while ( elem.firstChild ) {=0A=
				elem.removeChild( elem.firstChild );=0A=
			}=0A=
=0A=
			// If this is a select, ensure that it displays empty (#12336)=0A=
			// Support: IE<9=0A=
			if ( elem.options && jQuery.nodeName( elem, "select" ) ) {=0A=
				elem.options.length =3D 0;=0A=
			}=0A=
		}=0A=
=0A=
		return this;=0A=
	},=0A=
=0A=
	clone: function( dataAndEvents, deepDataAndEvents ) {=0A=
		dataAndEvents =3D dataAndEvents =3D=3D null ? false : dataAndEvents;=0A=
		deepDataAndEvents =3D deepDataAndEvents =3D=3D null ? dataAndEvents : =
deepDataAndEvents;=0A=
=0A=
		return this.map( function () {=0A=
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );=0A=
		});=0A=
	},=0A=
=0A=
	html: function( value ) {=0A=
		return jQuery.access( this, function( value ) {=0A=
			var elem =3D this[0] || {},=0A=
				i =3D 0,=0A=
				l =3D this.length;=0A=
=0A=
			if ( value =3D=3D=3D undefined ) {=0A=
				return elem.nodeType =3D=3D=3D 1 ?=0A=
					elem.innerHTML.replace( rinlinejQuery, "" ) :=0A=
					undefined;=0A=
			}=0A=
=0A=
			// See if we can take a shortcut and just use innerHTML=0A=
			if ( typeof value =3D=3D=3D "string" && !rnoInnerhtml.test( value ) &&=0A=
				( jQuery.support.htmlSerialize || !rnoshimcache.test( value )  ) &&=0A=
				( jQuery.support.leadingWhitespace || !rleadingWhitespace.test( =
value ) ) &&=0A=
				!wrapMap[ ( rtagName.exec( value ) || ["", ""] )[1].toLowerCase() ] =
) {=0A=
=0A=
				value =3D value.replace( rxhtmlTag, "<$1></$2>" );=0A=
=0A=
				try {=0A=
					for (; i < l; i++ ) {=0A=
						// Remove element nodes and prevent memory leaks=0A=
						elem =3D this[i] || {};=0A=
						if ( elem.nodeType =3D=3D=3D 1 ) {=0A=
							jQuery.cleanData( getAll( elem, false ) );=0A=
							elem.innerHTML =3D value;=0A=
						}=0A=
					}=0A=
=0A=
					elem =3D 0;=0A=
=0A=
				// If using innerHTML throws an exception, use the fallback method=0A=
				} catch(e) {}=0A=
			}=0A=
=0A=
			if ( elem ) {=0A=
				this.empty().append( value );=0A=
			}=0A=
		}, null, value, arguments.length );=0A=
	},=0A=
=0A=
	replaceWith: function( value ) {=0A=
		var isFunc =3D jQuery.isFunction( value );=0A=
=0A=
		// Make sure that the elements are removed from the DOM before they =
are inserted=0A=
		// this can help fix replacing a parent with child elements=0A=
		if ( !isFunc && typeof value !=3D=3D "string" ) {=0A=
			value =3D jQuery( value ).not( this ).detach();=0A=
		}=0A=
=0A=
		return this.domManip( [ value ], true, function( elem ) {=0A=
			var next =3D this.nextSibling,=0A=
				parent =3D this.parentNode;=0A=
=0A=
			if ( parent ) {=0A=
				jQuery( this ).remove();=0A=
				parent.insertBefore( elem, next );=0A=
			}=0A=
		});=0A=
	},=0A=
=0A=
	detach: function( selector ) {=0A=
		return this.remove( selector, true );=0A=
	},=0A=
=0A=
	domManip: function( args, table, callback ) {=0A=
=0A=
		// Flatten any nested arrays=0A=
		args =3D core_concat.apply( [], args );=0A=
=0A=
		var first, node, hasScripts,=0A=
			scripts, doc, fragment,=0A=
			i =3D 0,=0A=
			l =3D this.length,=0A=
			set =3D this,=0A=
			iNoClone =3D l - 1,=0A=
			value =3D args[0],=0A=
			isFunction =3D jQuery.isFunction( value );=0A=
=0A=
		// We can't cloneNode fragments that contain checked, in WebKit=0A=
		if ( isFunction || !( l <=3D 1 || typeof value !=3D=3D "string" || =
jQuery.support.checkClone || !rchecked.test( value ) ) ) {=0A=
			return this.each(function( index ) {=0A=
				var self =3D set.eq( index );=0A=
				if ( isFunction ) {=0A=
					args[0] =3D value.call( this, index, table ? self.html() : =
undefined );=0A=
				}=0A=
				self.domManip( args, table, callback );=0A=
			});=0A=
		}=0A=
=0A=
		if ( l ) {=0A=
			fragment =3D jQuery.buildFragment( args, this[ 0 ].ownerDocument, =
false, this );=0A=
			first =3D fragment.firstChild;=0A=
=0A=
			if ( fragment.childNodes.length =3D=3D=3D 1 ) {=0A=
				fragment =3D first;=0A=
			}=0A=
=0A=
			if ( first ) {=0A=
				table =3D table && jQuery.nodeName( first, "tr" );=0A=
				scripts =3D jQuery.map( getAll( fragment, "script" ), disableScript =
);=0A=
				hasScripts =3D scripts.length;=0A=
=0A=
				// Use the original fragment for the last item instead of the first =
because it can end up=0A=
				// being emptied incorrectly in certain situations (#8070).=0A=
				for ( ; i < l; i++ ) {=0A=
					node =3D fragment;=0A=
=0A=
					if ( i !=3D=3D iNoClone ) {=0A=
						node =3D jQuery.clone( node, true, true );=0A=
=0A=
						// Keep references to cloned scripts for later restoration=0A=
						if ( hasScripts ) {=0A=
							jQuery.merge( scripts, getAll( node, "script" ) );=0A=
						}=0A=
					}=0A=
=0A=
					callback.call(=0A=
						table && jQuery.nodeName( this[i], "table" ) ?=0A=
							findOrAppend( this[i], "tbody" ) :=0A=
							this[i],=0A=
						node,=0A=
						i=0A=
					);=0A=
				}=0A=
=0A=
				if ( hasScripts ) {=0A=
					doc =3D scripts[ scripts.length - 1 ].ownerDocument;=0A=
=0A=
					// Reenable scripts=0A=
					jQuery.map( scripts, restoreScript );=0A=
=0A=
					// Evaluate executable scripts on first document insertion=0A=
					for ( i =3D 0; i < hasScripts; i++ ) {=0A=
						node =3D scripts[ i ];=0A=
						if ( rscriptType.test( node.type || "" ) &&=0A=
							!jQuery._data( node, "globalEval" ) && jQuery.contains( doc, node =
) ) {=0A=
=0A=
							if ( node.src ) {=0A=
								// Hope ajax is available...=0A=
								jQuery.ajax({=0A=
									url: node.src,=0A=
									type: "GET",=0A=
									dataType: "script",=0A=
									async: false,=0A=
									global: false,=0A=
									"throws": true=0A=
								});=0A=
							} else {=0A=
								jQuery.globalEval( ( node.text || node.textContent || =
node.innerHTML || "" ).replace( rcleanScript, "" ) );=0A=
							}=0A=
						}=0A=
					}=0A=
				}=0A=
=0A=
				// Fix #11809: Avoid leaking memory=0A=
				fragment =3D first =3D null;=0A=
			}=0A=
		}=0A=
=0A=
		return this;=0A=
	}=0A=
});=0A=
=0A=
function findOrAppend( elem, tag ) {=0A=
	return elem.getElementsByTagName( tag )[0] || elem.appendChild( =
elem.ownerDocument.createElement( tag ) );=0A=
}=0A=
=0A=
// Replace/restore the type attribute of script elements for safe DOM =
manipulation=0A=
function disableScript( elem ) {=0A=
	var attr =3D elem.getAttributeNode("type");=0A=
	elem.type =3D ( attr && attr.specified ) + "/" + elem.type;=0A=
	return elem;=0A=
}=0A=
function restoreScript( elem ) {=0A=
	var match =3D rscriptTypeMasked.exec( elem.type );=0A=
	if ( match ) {=0A=
		elem.type =3D match[1];=0A=
	} else {=0A=
		elem.removeAttribute("type");=0A=
	}=0A=
	return elem;=0A=
}=0A=
=0A=
// Mark scripts as having already been evaluated=0A=
function setGlobalEval( elems, refElements ) {=0A=
	var elem,=0A=
		i =3D 0;=0A=
	for ( ; (elem =3D elems[i]) !=3D null; i++ ) {=0A=
		jQuery._data( elem, "globalEval", !refElements || jQuery._data( =
refElements[i], "globalEval" ) );=0A=
	}=0A=
}=0A=
=0A=
function cloneCopyEvent( src, dest ) {=0A=
=0A=
	if ( dest.nodeType !=3D=3D 1 || !jQuery.hasData( src ) ) {=0A=
		return;=0A=
	}=0A=
=0A=
	var type, i, l,=0A=
		oldData =3D jQuery._data( src ),=0A=
		curData =3D jQuery._data( dest, oldData ),=0A=
		events =3D oldData.events;=0A=
=0A=
	if ( events ) {=0A=
		delete curData.handle;=0A=
		curData.events =3D {};=0A=
=0A=
		for ( type in events ) {=0A=
			for ( i =3D 0, l =3D events[ type ].length; i < l; i++ ) {=0A=
				jQuery.event.add( dest, type, events[ type ][ i ] );=0A=
			}=0A=
		}=0A=
	}=0A=
=0A=
	// make the cloned public data object a copy from the original=0A=
	if ( curData.data ) {=0A=
		curData.data =3D jQuery.extend( {}, curData.data );=0A=
	}=0A=
}=0A=
=0A=
function fixCloneNodeIssues( src, dest ) {=0A=
	var nodeName, e, data;=0A=
=0A=
	// We do not need to do anything for non-Elements=0A=
	if ( dest.nodeType !=3D=3D 1 ) {=0A=
		return;=0A=
	}=0A=
=0A=
	nodeName =3D dest.nodeName.toLowerCase();=0A=
=0A=
	// IE6-8 copies events bound via attachEvent when using cloneNode.=0A=
	if ( !jQuery.support.noCloneEvent && dest[ jQuery.expando ] ) {=0A=
		data =3D jQuery._data( dest );=0A=
=0A=
		for ( e in data.events ) {=0A=
			jQuery.removeEvent( dest, e, data.handle );=0A=
		}=0A=
=0A=
		// Event data gets referenced instead of copied if the expando gets =
copied too=0A=
		dest.removeAttribute( jQuery.expando );=0A=
	}=0A=
=0A=
	// IE blanks contents when cloning scripts, and tries to evaluate =
newly-set text=0A=
	if ( nodeName =3D=3D=3D "script" && dest.text !=3D=3D src.text ) {=0A=
		disableScript( dest ).text =3D src.text;=0A=
		restoreScript( dest );=0A=
=0A=
	// IE6-10 improperly clones children of object elements using classid.=0A=
	// IE10 throws NoModificationAllowedError if parent is null, #12132.=0A=
	} else if ( nodeName =3D=3D=3D "object" ) {=0A=
		if ( dest.parentNode ) {=0A=
			dest.outerHTML =3D src.outerHTML;=0A=
		}=0A=
=0A=
		// This path appears unavoidable for IE9. When cloning an object=0A=
		// element in IE9, the outerHTML strategy above is not sufficient.=0A=
		// If the src has innerHTML and the destination does not,=0A=
		// copy the src.innerHTML into the dest.innerHTML. #10324=0A=
		if ( jQuery.support.html5Clone && ( src.innerHTML && =
!jQuery.trim(dest.innerHTML) ) ) {=0A=
			dest.innerHTML =3D src.innerHTML;=0A=
		}=0A=
=0A=
	} else if ( nodeName =3D=3D=3D "input" && =
manipulation_rcheckableType.test( src.type ) ) {=0A=
		// IE6-8 fails to persist the checked state of a cloned checkbox=0A=
		// or radio button. Worse, IE6-7 fail to give the cloned element=0A=
		// a checked appearance if the defaultChecked value isn't also set=0A=
=0A=
		dest.defaultChecked =3D dest.checked =3D src.checked;=0A=
=0A=
		// IE6-7 get confused and end up setting the value of a cloned=0A=
		// checkbox/radio button to an empty string instead of "on"=0A=
		if ( dest.value !=3D=3D src.value ) {=0A=
			dest.value =3D src.value;=0A=
		}=0A=
=0A=
	// IE6-8 fails to return the selected option to the default selected=0A=
	// state when cloning options=0A=
	} else if ( nodeName =3D=3D=3D "option" ) {=0A=
		dest.defaultSelected =3D dest.selected =3D src.defaultSelected;=0A=
=0A=
	// IE6-8 fails to set the defaultValue to the correct value when=0A=
	// cloning other types of input fields=0A=
	} else if ( nodeName =3D=3D=3D "input" || nodeName =3D=3D=3D "textarea" =
) {=0A=
		dest.defaultValue =3D src.defaultValue;=0A=
	}=0A=
}=0A=
=0A=
jQuery.each({=0A=
	appendTo: "append",=0A=
	prependTo: "prepend",=0A=
	insertBefore: "before",=0A=
	insertAfter: "after",=0A=
	replaceAll: "replaceWith"=0A=
}, function( name, original ) {=0A=
	jQuery.fn[ name ] =3D function( selector ) {=0A=
		var elems,=0A=
			i =3D 0,=0A=
			ret =3D [],=0A=
			insert =3D jQuery( selector ),=0A=
			last =3D insert.length - 1;=0A=
=0A=
		for ( ; i <=3D last; i++ ) {=0A=
			elems =3D i =3D=3D=3D last ? this : this.clone(true);=0A=
			jQuery( insert[i] )[ original ]( elems );=0A=
=0A=
			// Modern browsers can apply jQuery collections as arrays, but oldIE =
needs a .get()=0A=
			core_push.apply( ret, elems.get() );=0A=
		}=0A=
=0A=
		return this.pushStack( ret );=0A=
	};=0A=
});=0A=
=0A=
function getAll( context, tag ) {=0A=
	var elems, elem,=0A=
		i =3D 0,=0A=
		found =3D typeof context.getElementsByTagName !=3D=3D =
core_strundefined ? context.getElementsByTagName( tag || "*" ) :=0A=
			typeof context.querySelectorAll !=3D=3D core_strundefined ? =
context.querySelectorAll( tag || "*" ) :=0A=
			undefined;=0A=
=0A=
	if ( !found ) {=0A=
		for ( found =3D [], elems =3D context.childNodes || context; (elem =3D =
elems[i]) !=3D null; i++ ) {=0A=
			if ( !tag || jQuery.nodeName( elem, tag ) ) {=0A=
				found.push( elem );=0A=
			} else {=0A=
				jQuery.merge( found, getAll( elem, tag ) );=0A=
			}=0A=
		}=0A=
	}=0A=
=0A=
	return tag =3D=3D=3D undefined || tag && jQuery.nodeName( context, tag =
) ?=0A=
		jQuery.merge( [ context ], found ) :=0A=
		found;=0A=
}=0A=
=0A=
// Used in buildFragment, fixes the defaultChecked property=0A=
function fixDefaultChecked( elem ) {=0A=
	if ( manipulation_rcheckableType.test( elem.type ) ) {=0A=
		elem.defaultChecked =3D elem.checked;=0A=
	}=0A=
}=0A=
=0A=
jQuery.extend({=0A=
	clone: function( elem, dataAndEvents, deepDataAndEvents ) {=0A=
		var destElements, node, clone, i, srcElements,=0A=
			inPage =3D jQuery.contains( elem.ownerDocument, elem );=0A=
=0A=
		if ( jQuery.support.html5Clone || jQuery.isXMLDoc(elem) || =
!rnoshimcache.test( "<" + elem.nodeName + ">" ) ) {=0A=
			clone =3D elem.cloneNode( true );=0A=
=0A=
		// IE<=3D8 does not properly clone detached, unknown element nodes=0A=
		} else {=0A=
			fragmentDiv.innerHTML =3D elem.outerHTML;=0A=
			fragmentDiv.removeChild( clone =3D fragmentDiv.firstChild );=0A=
		}=0A=
=0A=
		if ( (!jQuery.support.noCloneEvent || !jQuery.support.noCloneChecked) =
&&=0A=
				(elem.nodeType =3D=3D=3D 1 || elem.nodeType =3D=3D=3D 11) && =
!jQuery.isXMLDoc(elem) ) {=0A=
=0A=
			// We eschew Sizzle here for performance reasons: =
http://jsperf.com/getall-vs-sizzle/2=0A=
			destElements =3D getAll( clone );=0A=
			srcElements =3D getAll( elem );=0A=
=0A=
			// Fix all IE cloning issues=0A=
			for ( i =3D 0; (node =3D srcElements[i]) !=3D null; ++i ) {=0A=
				// Ensure that the destination node is not null; Fixes #9587=0A=
				if ( destElements[i] ) {=0A=
					fixCloneNodeIssues( node, destElements[i] );=0A=
				}=0A=
			}=0A=
		}=0A=
=0A=
		// Copy the events from the original to the clone=0A=
		if ( dataAndEvents ) {=0A=
			if ( deepDataAndEvents ) {=0A=
				srcElements =3D srcElements || getAll( elem );=0A=
				destElements =3D destElements || getAll( clone );=0A=
=0A=
				for ( i =3D 0; (node =3D srcElements[i]) !=3D null; i++ ) {=0A=
					cloneCopyEvent( node, destElements[i] );=0A=
				}=0A=
			} else {=0A=
				cloneCopyEvent( elem, clone );=0A=
			}=0A=
		}=0A=
=0A=
		// Preserve script evaluation history=0A=
		destElements =3D getAll( clone, "script" );=0A=
		if ( destElements.length > 0 ) {=0A=
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );=0A=
		}=0A=
=0A=
		destElements =3D srcElements =3D node =3D null;=0A=
=0A=
		// Return the cloned set=0A=
		return clone;=0A=
	},=0A=
=0A=
	buildFragment: function( elems, context, scripts, selection ) {=0A=
		var j, elem, contains,=0A=
			tmp, tag, tbody, wrap,=0A=
			l =3D elems.length,=0A=
=0A=
			// Ensure a safe fragment=0A=
			safe =3D createSafeFragment( context ),=0A=
=0A=
			nodes =3D [],=0A=
			i =3D 0;=0A=
=0A=
		for ( ; i < l; i++ ) {=0A=
			elem =3D elems[ i ];=0A=
=0A=
			if ( elem || elem =3D=3D=3D 0 ) {=0A=
=0A=
				// Add nodes directly=0A=
				if ( jQuery.type( elem ) =3D=3D=3D "object" ) {=0A=
					jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );=0A=
=0A=
				// Convert non-html into a text node=0A=
				} else if ( !rhtml.test( elem ) ) {=0A=
					nodes.push( context.createTextNode( elem ) );=0A=
=0A=
				// Convert html into DOM nodes=0A=
				} else {=0A=
					tmp =3D tmp || safe.appendChild( context.createElement("div") );=0A=
=0A=
					// Deserialize a standard representation=0A=
					tag =3D ( rtagName.exec( elem ) || ["", ""] )[1].toLowerCase();=0A=
					wrap =3D wrapMap[ tag ] || wrapMap._default;=0A=
=0A=
					tmp.innerHTML =3D wrap[1] + elem.replace( rxhtmlTag, "<$1></$2>" ) =
+ wrap[2];=0A=
=0A=
					// Descend through wrappers to the right content=0A=
					j =3D wrap[0];=0A=
					while ( j-- ) {=0A=
						tmp =3D tmp.lastChild;=0A=
					}=0A=
=0A=
					// Manually add leading whitespace removed by IE=0A=
					if ( !jQuery.support.leadingWhitespace && rleadingWhitespace.test( =
elem ) ) {=0A=
						nodes.push( context.createTextNode( rleadingWhitespace.exec( elem =
)[0] ) );=0A=
					}=0A=
=0A=
					// Remove IE's autoinserted <tbody> from table fragments=0A=
					if ( !jQuery.support.tbody ) {=0A=
=0A=
						// String was a <table>, *may* have spurious <tbody>=0A=
						elem =3D tag =3D=3D=3D "table" && !rtbody.test( elem ) ?=0A=
							tmp.firstChild :=0A=
=0A=
							// String was a bare <thead> or <tfoot>=0A=
							wrap[1] =3D=3D=3D "<table>" && !rtbody.test( elem ) ?=0A=
								tmp :=0A=
								0;=0A=
=0A=
						j =3D elem && elem.childNodes.length;=0A=
						while ( j-- ) {=0A=
							if ( jQuery.nodeName( (tbody =3D elem.childNodes[j]), "tbody" ) =
&& !tbody.childNodes.length ) {=0A=
								elem.removeChild( tbody );=0A=
							}=0A=
						}=0A=
					}=0A=
=0A=
					jQuery.merge( nodes, tmp.childNodes );=0A=
=0A=
					// Fix #12392 for WebKit and IE > 9=0A=
					tmp.textContent =3D "";=0A=
=0A=
					// Fix #12392 for oldIE=0A=
					while ( tmp.firstChild ) {=0A=
						tmp.removeChild( tmp.firstChild );=0A=
					}=0A=
=0A=
					// Remember the top-level container for proper cleanup=0A=
					tmp =3D safe.lastChild;=0A=
				}=0A=
			}=0A=
		}=0A=
=0A=
		// Fix #11356: Clear elements from fragment=0A=
		if ( tmp ) {=0A=
			safe.removeChild( tmp );=0A=
		}=0A=
=0A=
		// Reset defaultChecked for any radios and checkboxes=0A=
		// about to be appended to the DOM in IE 6/7 (#8060)=0A=
		if ( !jQuery.support.appendChecked ) {=0A=
			jQuery.grep( getAll( nodes, "input" ), fixDefaultChecked );=0A=
		}=0A=
=0A=
		i =3D 0;=0A=
		while ( (elem =3D nodes[ i++ ]) ) {=0A=
=0A=
			// #4087 - If origin and destination elements are the same, and this =
is=0A=
			// that element, do not do anything=0A=
			if ( selection && jQuery.inArray( elem, selection ) !=3D=3D -1 ) {=0A=
				continue;=0A=
			}=0A=
=0A=
			contains =3D jQuery.contains( elem.ownerDocument, elem );=0A=
=0A=
			// Append to fragment=0A=
			tmp =3D getAll( safe.appendChild( elem ), "script" );=0A=
=0A=
			// Preserve script evaluation history=0A=
			if ( contains ) {=0A=
				setGlobalEval( tmp );=0A=
			}=0A=
=0A=
			// Capture executables=0A=
			if ( scripts ) {=0A=
				j =3D 0;=0A=
				while ( (elem =3D tmp[ j++ ]) ) {=0A=
					if ( rscriptType.test( elem.type || "" ) ) {=0A=
						scripts.push( elem );=0A=
					}=0A=
				}=0A=
			}=0A=
		}=0A=
=0A=
		tmp =3D null;=0A=
=0A=
		return safe;=0A=
	},=0A=
=0A=
	cleanData: function( elems, /* internal */ acceptData ) {=0A=
		var elem, type, id, data,=0A=
			i =3D 0,=0A=
			internalKey =3D jQuery.expando,=0A=
			cache =3D jQuery.cache,=0A=
			deleteExpando =3D jQuery.support.deleteExpando,=0A=
			special =3D jQuery.event.special;=0A=
=0A=
		for ( ; (elem =3D elems[i]) !=3D null; i++ ) {=0A=
=0A=
			if ( acceptData || jQuery.acceptData( elem ) ) {=0A=
=0A=
				id =3D elem[ internalKey ];=0A=
				data =3D id && cache[ id ];=0A=
=0A=
				if ( data ) {=0A=
					if ( data.events ) {=0A=
						for ( type in data.events ) {=0A=
							if ( special[ type ] ) {=0A=
								jQuery.event.remove( elem, type );=0A=
=0A=
							// This is a shortcut to avoid jQuery.event.remove's overhead=0A=
							} else {=0A=
								jQuery.removeEvent( elem, type, data.handle );=0A=
							}=0A=
						}=0A=
					}=0A=
=0A=
					// Remove cache only if it was not already removed by =
jQuery.event.remove=0A=
					if ( cache[ id ] ) {=0A=
=0A=
						delete cache[ id ];=0A=
=0A=
						// IE does not allow us to delete expando properties from nodes,=0A=
						// nor does it have a removeAttribute function on Document nodes;=0A=
						// we must handle all of these cases=0A=
						if ( deleteExpando ) {=0A=
							delete elem[ internalKey ];=0A=
=0A=
						} else if ( typeof elem.removeAttribute !=3D=3D core_strundefined =
) {=0A=
							elem.removeAttribute( internalKey );=0A=
=0A=
						} else {=0A=
							elem[ internalKey ] =3D null;=0A=
						}=0A=
=0A=
						core_deletedIds.push( id );=0A=
					}=0A=
				}=0A=
			}=0A=
		}=0A=
	}=0A=
});=0A=
var iframe, getStyles, curCSS,=0A=
	ralpha =3D /alpha\([^)]*\)/i,=0A=
	ropacity =3D /opacity\s*=3D\s*([^)]*)/,=0A=
	rposition =3D /^(top|right|bottom|left)$/,=0A=
	// swappable if display is none or starts with table except "table", =
"table-cell", or "table-caption"=0A=
	// see here for display values: =
https://developer.mozilla.org/en-US/docs/CSS/display=0A=
	rdisplayswap =3D /^(none|table(?!-c[ea]).+)/,=0A=
	rmargin =3D /^margin/,=0A=
	rnumsplit =3D new RegExp( "^(" + core_pnum + ")(.*)$", "i" ),=0A=
	rnumnonpx =3D new RegExp( "^(" + core_pnum + ")(?!px)[a-z%]+$", "i" ),=0A=
	rrelNum =3D new RegExp( "^([+-])=3D(" + core_pnum + ")", "i" ),=0A=
	elemdisplay =3D { BODY: "block" },=0A=
=0A=
	cssShow =3D { position: "absolute", visibility: "hidden", display: =
"block" },=0A=
	cssNormalTransform =3D {=0A=
		letterSpacing: 0,=0A=
		fontWeight: 400=0A=
	},=0A=
=0A=
	cssExpand =3D [ "Top", "Right", "Bottom", "Left" ],=0A=
	cssPrefixes =3D [ "Webkit", "O", "Moz", "ms" ];=0A=
=0A=
// return a css property mapped to a potentially vendor prefixed property=0A=
function vendorPropName( style, name ) {=0A=
=0A=
	// shortcut for names that are not vendor prefixed=0A=
	if ( name in style ) {=0A=
		return name;=0A=
	}=0A=
=0A=
	// check for vendor prefixed names=0A=
	var capName =3D name.charAt(0).toUpperCase() + name.slice(1),=0A=
		origName =3D name,=0A=
		i =3D cssPrefixes.length;=0A=
=0A=
	while ( i-- ) {=0A=
		name =3D cssPrefixes[ i ] + capName;=0A=
		if ( name in style ) {=0A=
			return name;=0A=
		}=0A=
	}=0A=
=0A=
	return origName;=0A=
}=0A=
=0A=
function isHidden( elem, el ) {=0A=
	// isHidden might be called from jQuery#filter function;=0A=
	// in that case, element will be second argument=0A=
	elem =3D el || elem;=0A=
	return jQuery.css( elem, "display" ) =3D=3D=3D "none" || =
!jQuery.contains( elem.ownerDocument, elem );=0A=
}=0A=
=0A=
function showHide( elements, show ) {=0A=
	var display, elem, hidden,=0A=
		values =3D [],=0A=
		index =3D 0,=0A=
		length =3D elements.length;=0A=
=0A=
	for ( ; index < length; index++ ) {=0A=
		elem =3D elements[ index ];=0A=
		if ( !elem.style ) {=0A=
			continue;=0A=
		}=0A=
=0A=
		values[ index ] =3D jQuery._data( elem, "olddisplay" );=0A=
		display =3D elem.style.display;=0A=
		if ( show ) {=0A=
			// Reset the inline display of this element to learn if it is=0A=
			// being hidden by cascaded rules or not=0A=
			if ( !values[ index ] && display =3D=3D=3D "none" ) {=0A=
				elem.style.display =3D "";=0A=
			}=0A=
=0A=
			// Set elements which have been overridden with display: none=0A=
			// in a stylesheet to whatever the default browser style is=0A=
			// for such an element=0A=
			if ( elem.style.display =3D=3D=3D "" && isHidden( elem ) ) {=0A=
				values[ index ] =3D jQuery._data( elem, "olddisplay", =
css_defaultDisplay(elem.nodeName) );=0A=
			}=0A=
		} else {=0A=
=0A=
			if ( !values[ index ] ) {=0A=
				hidden =3D isHidden( elem );=0A=
=0A=
				if ( display && display !=3D=3D "none" || !hidden ) {=0A=
					jQuery._data( elem, "olddisplay", hidden ? display : jQuery.css( =
elem, "display" ) );=0A=
				}=0A=
			}=0A=
		}=0A=
	}=0A=
=0A=
	// Set the display of most of the elements in a second loop=0A=
	// to avoid the constant reflow=0A=
	for ( index =3D 0; index < length; index++ ) {=0A=
		elem =3D elements[ index ];=0A=
		if ( !elem.style ) {=0A=
			continue;=0A=
		}=0A=
		if ( !show || elem.style.display =3D=3D=3D "none" || =
elem.style.display =3D=3D=3D "" ) {=0A=
			elem.style.display =3D show ? values[ index ] || "" : "none";=0A=
		}=0A=
	}=0A=
=0A=
	return elements;=0A=
}=0A=
=0A=
jQuery.fn.extend({=0A=
	css: function( name, value ) {=0A=
		return jQuery.access( this, function( elem, name, value ) {=0A=
			var len, styles,=0A=
				map =3D {},=0A=
				i =3D 0;=0A=
=0A=
			if ( jQuery.isArray( name ) ) {=0A=
				styles =3D getStyles( elem );=0A=
				len =3D name.length;=0A=
=0A=
				for ( ; i < len; i++ ) {=0A=
					map[ name[ i ] ] =3D jQuery.css( elem, name[ i ], false, styles );=0A=
				}=0A=
=0A=
				return map;=0A=
			}=0A=
=0A=
			return value !=3D=3D undefined ?=0A=
				jQuery.style( elem, name, value ) :=0A=
				jQuery.css( elem, name );=0A=
		}, name, value, arguments.length > 1 );=0A=
	},=0A=
	show: function() {=0A=
		return showHide( this, true );=0A=
	},=0A=
	hide: function() {=0A=
		return showHide( this );=0A=
	},=0A=
	toggle: function( state ) {=0A=
		var bool =3D typeof state =3D=3D=3D "boolean";=0A=
=0A=
		return this.each(function() {=0A=
			if ( bool ? state : isHidden( this ) ) {=0A=
				jQuery( this ).show();=0A=
			} else {=0A=
				jQuery( this ).hide();=0A=
			}=0A=
		});=0A=
	}=0A=
});=0A=
=0A=
jQuery.extend({=0A=
	// Add in style property hooks for overriding the default=0A=
	// behavior of getting and setting a style property=0A=
	cssHooks: {=0A=
		opacity: {=0A=
			get: function( elem, computed ) {=0A=
				if ( computed ) {=0A=
					// We should always get a number back from opacity=0A=
					var ret =3D curCSS( elem, "opacity" );=0A=
					return ret =3D=3D=3D "" ? "1" : ret;=0A=
				}=0A=
			}=0A=
		}=0A=
	},=0A=
=0A=
	// Exclude the following css properties to add px=0A=
	cssNumber: {=0A=
		"columnCount": true,=0A=
		"fillOpacity": true,=0A=
		"fontWeight": true,=0A=
		"lineHeight": true,=0A=
		"opacity": true,=0A=
		"orphans": true,=0A=
		"widows": true,=0A=
		"zIndex": true,=0A=
		"zoom": true=0A=
	},=0A=
=0A=
	// Add in properties whose names you wish to fix before=0A=
	// setting or getting the value=0A=
	cssProps: {=0A=
		// normalize float css property=0A=
		"float": jQuery.support.cssFloat ? "cssFloat" : "styleFloat"=0A=
	},=0A=
=0A=
	// Get and set the style property on a DOM Node=0A=
	style: function( elem, name, value, extra ) {=0A=
		// Don't set styles on text and comment nodes=0A=
		if ( !elem || elem.nodeType =3D=3D=3D 3 || elem.nodeType =3D=3D=3D 8 =
|| !elem.style ) {=0A=
			return;=0A=
		}=0A=
=0A=
		// Make sure that we're working with the right name=0A=
		var ret, type, hooks,=0A=
			origName =3D jQuery.camelCase( name ),=0A=
			style =3D elem.style;=0A=
=0A=
		name =3D jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] =
=3D vendorPropName( style, origName ) );=0A=
=0A=
		// gets hook for the prefixed version=0A=
		// followed by the unprefixed version=0A=
		hooks =3D jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];=0A=
=0A=
		// Check if we're setting a value=0A=
		if ( value !=3D=3D undefined ) {=0A=
			type =3D typeof value;=0A=
=0A=
			// convert relative number strings (+=3D or -=3D) to relative =
numbers. #7345=0A=
			if ( type =3D=3D=3D "string" && (ret =3D rrelNum.exec( value )) ) {=0A=
				value =3D ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, =
name ) );=0A=
				// Fixes bug #9237=0A=
				type =3D "number";=0A=
			}=0A=
=0A=
			// Make sure that NaN and null values aren't set. See: #7116=0A=
			if ( value =3D=3D null || type =3D=3D=3D "number" && isNaN( value ) ) =
{=0A=
				return;=0A=
			}=0A=
=0A=
			// If a number was passed in, add 'px' to the (except for certain CSS =
properties)=0A=
			if ( type =3D=3D=3D "number" && !jQuery.cssNumber[ origName ] ) {=0A=
				value +=3D "px";=0A=
			}=0A=
=0A=
			// Fixes #8908, it can be done more correctly by specifing setters in =
cssHooks,=0A=
			// but it would mean to define eight (for every problematic property) =
identical functions=0A=
			if ( !jQuery.support.clearCloneStyle && value =3D=3D=3D "" && =
name.indexOf("background") =3D=3D=3D 0 ) {=0A=
				style[ name ] =3D "inherit";=0A=
			}=0A=
=0A=
			// If a hook was provided, use that value, otherwise just set the =
specified value=0A=
			if ( !hooks || !("set" in hooks) || (value =3D hooks.set( elem, =
value, extra )) !=3D=3D undefined ) {=0A=
=0A=
				// Wrapped to prevent IE from throwing errors when 'invalid' values =
are provided=0A=
				// Fixes bug #5509=0A=
				try {=0A=
					style[ name ] =3D value;=0A=
				} catch(e) {}=0A=
			}=0A=
=0A=
		} else {=0A=
			// If a hook was provided get the non-computed value from there=0A=
			if ( hooks && "get" in hooks && (ret =3D hooks.get( elem, false, =
extra )) !=3D=3D undefined ) {=0A=
				return ret;=0A=
			}=0A=
=0A=
			// Otherwise just get the value from the style object=0A=
			return style[ name ];=0A=
		}=0A=
	},=0A=
=0A=
	css: function( elem, name, extra, styles ) {=0A=
		var num, val, hooks,=0A=
			origName =3D jQuery.camelCase( name );=0A=
=0A=
		// Make sure that we're working with the right name=0A=
		name =3D jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] =
=3D vendorPropName( elem.style, origName ) );=0A=
=0A=
		// gets hook for the prefixed version=0A=
		// followed by the unprefixed version=0A=
		hooks =3D jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];=0A=
=0A=
		// If a hook was provided get the computed value from there=0A=
		if ( hooks && "get" in hooks ) {=0A=
			val =3D hooks.get( elem, true, extra );=0A=
		}=0A=
=0A=
		// Otherwise, if a way to get the computed value exists, use that=0A=
		if ( val =3D=3D=3D undefined ) {=0A=
			val =3D curCSS( elem, name, styles );=0A=
		}=0A=
=0A=
		//convert "normal" to computed value=0A=
		if ( val =3D=3D=3D "normal" && name in cssNormalTransform ) {=0A=
			val =3D cssNormalTransform[ name ];=0A=
		}=0A=
=0A=
		// Return, converting to number if forced or a qualifier was provided =
and val looks numeric=0A=
		if ( extra =3D=3D=3D "" || extra ) {=0A=
			num =3D parseFloat( val );=0A=
			return extra =3D=3D=3D true || jQuery.isNumeric( num ) ? num || 0 : =
val;=0A=
		}=0A=
		return val;=0A=
	},=0A=
=0A=
	// A method for quickly swapping in/out CSS properties to get correct =
calculations=0A=
	swap: function( elem, options, callback, args ) {=0A=
		var ret, name,=0A=
			old =3D {};=0A=
=0A=
		// Remember the old values, and insert the new ones=0A=
		for ( name in options ) {=0A=
			old[ name ] =3D elem.style[ name ];=0A=
			elem.style[ name ] =3D options[ name ];=0A=
		}=0A=
=0A=
		ret =3D callback.apply( elem, args || [] );=0A=
=0A=
		// Revert the old values=0A=
		for ( name in options ) {=0A=
			elem.style[ name ] =3D old[ name ];=0A=
		}=0A=
=0A=
		return ret;=0A=
	}=0A=
});=0A=
=0A=
// NOTE: we've included the "window" in window.getComputedStyle=0A=
// because jsdom on node.js will break without it.=0A=
if ( window.getComputedStyle ) {=0A=
	getStyles =3D function( elem ) {=0A=
		return window.getComputedStyle( elem, null );=0A=
	};=0A=
=0A=
	curCSS =3D function( elem, name, _computed ) {=0A=
		var width, minWidth, maxWidth,=0A=
			computed =3D _computed || getStyles( elem ),=0A=
=0A=
			// getPropertyValue is only needed for .css('filter') in IE9, see =
#12537=0A=
			ret =3D computed ? computed.getPropertyValue( name ) || computed[ =
name ] : undefined,=0A=
			style =3D elem.style;=0A=
=0A=
		if ( computed ) {=0A=
=0A=
			if ( ret =3D=3D=3D "" && !jQuery.contains( elem.ownerDocument, elem ) =
) {=0A=
				ret =3D jQuery.style( elem, name );=0A=
			}=0A=
=0A=
			// A tribute to the "awesome hack by Dean Edwards"=0A=
			// Chrome < 17 and Safari 5.0 uses "computed value" instead of "used =
value" for margin-right=0A=
			// Safari 5.1.7 (at least) returns percentage for a larger set of =
values, but width seems to be reliably pixels=0A=
			// this is against the CSSOM draft spec: =
http://dev.w3.org/csswg/cssom/#resolved-values=0A=
			if ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {=0A=
=0A=
				// Remember the original values=0A=
				width =3D style.width;=0A=
				minWidth =3D style.minWidth;=0A=
				maxWidth =3D style.maxWidth;=0A=
=0A=
				// Put in the new values to get a computed value out=0A=
				style.minWidth =3D style.maxWidth =3D style.width =3D ret;=0A=
				ret =3D computed.width;=0A=
=0A=
				// Revert the changed values=0A=
				style.width =3D width;=0A=
				style.minWidth =3D minWidth;=0A=
				style.maxWidth =3D maxWidth;=0A=
			}=0A=
		}=0A=
=0A=
		return ret;=0A=
	};=0A=
} else if ( document.documentElement.currentStyle ) {=0A=
	getStyles =3D function( elem ) {=0A=
		return elem.currentStyle;=0A=
	};=0A=
=0A=
	curCSS =3D function( elem, name, _computed ) {=0A=
		var left, rs, rsLeft,=0A=
			computed =3D _computed || getStyles( elem ),=0A=
			ret =3D computed ? computed[ name ] : undefined,=0A=
			style =3D elem.style;=0A=
=0A=
		// Avoid setting ret to empty string here=0A=
		// so we don't default to auto=0A=
		if ( ret =3D=3D null && style && style[ name ] ) {=0A=
			ret =3D style[ name ];=0A=
		}=0A=
=0A=
		// From the awesome hack by Dean Edwards=0A=
		// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291=0A=
=0A=
		// If we're not dealing with a regular pixel number=0A=
		// but a number that has a weird ending, we need to convert it to =
pixels=0A=
		// but not position css attributes, as those are proportional to the =
parent element instead=0A=
		// and we can't measure the parent instead because it might trigger a =
"stacking dolls" problem=0A=
		if ( rnumnonpx.test( ret ) && !rposition.test( name ) ) {=0A=
=0A=
			// Remember the original values=0A=
			left =3D style.left;=0A=
			rs =3D elem.runtimeStyle;=0A=
			rsLeft =3D rs && rs.left;=0A=
=0A=
			// Put in the new values to get a computed value out=0A=
			if ( rsLeft ) {=0A=
				rs.left =3D elem.currentStyle.left;=0A=
			}=0A=
			style.left =3D name =3D=3D=3D "fontSize" ? "1em" : ret;=0A=
			ret =3D style.pixelLeft + "px";=0A=
=0A=
			// Revert the changed values=0A=
			style.left =3D left;=0A=
			if ( rsLeft ) {=0A=
				rs.left =3D rsLeft;=0A=
			}=0A=
		}=0A=
=0A=
		return ret =3D=3D=3D "" ? "auto" : ret;=0A=
	};=0A=
}=0A=
=0A=
function setPositiveNumber( elem, value, subtract ) {=0A=
	var matches =3D rnumsplit.exec( value );=0A=
	return matches ?=0A=
		// Guard against undefined "subtract", e.g., when used as in cssHooks=0A=
		Math.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || =
"px" ) :=0A=
		value;=0A=
}=0A=
=0A=
function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {=0A=
	var i =3D extra =3D=3D=3D ( isBorderBox ? "border" : "content" ) ?=0A=
		// If we already have the right measurement, avoid augmentation=0A=
		4 :=0A=
		// Otherwise initialize for horizontal or vertical properties=0A=
		name =3D=3D=3D "width" ? 1 : 0,=0A=
=0A=
		val =3D 0;=0A=
=0A=
	for ( ; i < 4; i +=3D 2 ) {=0A=
		// both box models exclude margin, so add it if we want it=0A=
		if ( extra =3D=3D=3D "margin" ) {=0A=
			val +=3D jQuery.css( elem, extra + cssExpand[ i ], true, styles );=0A=
		}=0A=
=0A=
		if ( isBorderBox ) {=0A=
			// border-box includes padding, so remove it if we want content=0A=
			if ( extra =3D=3D=3D "content" ) {=0A=
				val -=3D jQuery.css( elem, "padding" + cssExpand[ i ], true, styles =
);=0A=
			}=0A=
=0A=
			// at this point, extra isn't border nor margin, so remove border=0A=
			if ( extra !=3D=3D "margin" ) {=0A=
				val -=3D jQuery.css( elem, "border" + cssExpand[ i ] + "Width", =
true, styles );=0A=
			}=0A=
		} else {=0A=
			// at this point, extra isn't content, so add padding=0A=
			val +=3D jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );=0A=
=0A=
			// at this point, extra isn't content nor padding, so add border=0A=
			if ( extra !=3D=3D "padding" ) {=0A=
				val +=3D jQuery.css( elem, "border" + cssExpand[ i ] + "Width", =
true, styles );=0A=
			}=0A=
		}=0A=
	}=0A=
=0A=
	return val;=0A=
}=0A=
=0A=
function getWidthOrHeight( elem, name, extra ) {=0A=
=0A=
	// Start with offset property, which is equivalent to the border-box =
value=0A=
	var valueIsBorderBox =3D true,=0A=
		val =3D name =3D=3D=3D "width" ? elem.offsetWidth : elem.offsetHeight,=0A=
		styles =3D getStyles( elem ),=0A=
		isBorderBox =3D jQuery.support.boxSizing && jQuery.css( elem, =
"boxSizing", false, styles ) =3D=3D=3D "border-box";=0A=
=0A=
	// some non-html elements return undefined for offsetWidth, so check =
for null/undefined=0A=
	// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=3D649285=0A=
	// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=3D491668=0A=
	if ( val <=3D 0 || val =3D=3D null ) {=0A=
		// Fall back to computed then uncomputed css if necessary=0A=
		val =3D curCSS( elem, name, styles );=0A=
		if ( val < 0 || val =3D=3D null ) {=0A=
			val =3D elem.style[ name ];=0A=
		}=0A=
=0A=
		// Computed unit is not pixels. Stop here and return.=0A=
		if ( rnumnonpx.test(val) ) {=0A=
			return val;=0A=
		}=0A=
=0A=
		// we need the check for style in case a browser which returns =
unreliable values=0A=
		// for getComputedStyle silently falls back to the reliable elem.style=0A=
		valueIsBorderBox =3D isBorderBox && ( jQuery.support.boxSizingReliable =
|| val =3D=3D=3D elem.style[ name ] );=0A=
=0A=
		// Normalize "", auto, and prepare for extra=0A=
		val =3D parseFloat( val ) || 0;=0A=
	}=0A=
=0A=
	// use the active box-sizing model to add/subtract irrelevant styles=0A=
	return ( val +=0A=
		augmentWidthOrHeight(=0A=
			elem,=0A=
			name,=0A=
			extra || ( isBorderBox ? "border" : "content" ),=0A=
			valueIsBorderBox,=0A=
			styles=0A=
		)=0A=
	) + "px";=0A=
}=0A=
=0A=
// Try to determine the default display value of an element=0A=
function css_defaultDisplay( nodeName ) {=0A=
	var doc =3D document,=0A=
		display =3D elemdisplay[ nodeName ];=0A=
=0A=
	if ( !display ) {=0A=
		display =3D actualDisplay( nodeName, doc );=0A=
=0A=
		// If the simple way fails, read from inside an iframe=0A=
		if ( display =3D=3D=3D "none" || !display ) {=0A=
			// Use the already-created iframe if possible=0A=
			iframe =3D ( iframe ||=0A=
				jQuery("<iframe frameborder=3D'0' width=3D'0' height=3D'0'/>")=0A=
				.css( "cssText", "display:block !important" )=0A=
			).appendTo( doc.documentElement );=0A=
=0A=
			// Always write a new HTML skeleton so Webkit and Firefox don't choke =
on reuse=0A=
			doc =3D ( iframe[0].contentWindow || iframe[0].contentDocument =
).document;=0A=
			doc.write("<!doctype html><html><body>");=0A=
			doc.close();=0A=
=0A=
			display =3D actualDisplay( nodeName, doc );=0A=
			iframe.detach();=0A=
		}=0A=
=0A=
		// Store the correct default display=0A=
		elemdisplay[ nodeName ] =3D display;=0A=
	}=0A=
=0A=
	return display;=0A=
}=0A=
=0A=
// Called ONLY from within css_defaultDisplay=0A=
function actualDisplay( name, doc ) {=0A=
	var elem =3D jQuery( doc.createElement( name ) ).appendTo( doc.body ),=0A=
		display =3D jQuery.css( elem[0], "display" );=0A=
	elem.remove();=0A=
	return display;=0A=
}=0A=
=0A=
jQuery.each([ "height", "width" ], function( i, name ) {=0A=
	jQuery.cssHooks[ name ] =3D {=0A=
		get: function( elem, computed, extra ) {=0A=
			if ( computed ) {=0A=
				// certain elements can have dimension info if we invisibly show them=0A=
				// however, it must have a current display style that would benefit =
from this=0A=
				return elem.offsetWidth =3D=3D=3D 0 && rdisplayswap.test( =
jQuery.css( elem, "display" ) ) ?=0A=
					jQuery.swap( elem, cssShow, function() {=0A=
						return getWidthOrHeight( elem, name, extra );=0A=
					}) :=0A=
					getWidthOrHeight( elem, name, extra );=0A=
			}=0A=
		},=0A=
=0A=
		set: function( elem, value, extra ) {=0A=
			var styles =3D extra && getStyles( elem );=0A=
			return setPositiveNumber( elem, value, extra ?=0A=
				augmentWidthOrHeight(=0A=
					elem,=0A=
					name,=0A=
					extra,=0A=
					jQuery.support.boxSizing && jQuery.css( elem, "boxSizing", false, =
styles ) =3D=3D=3D "border-box",=0A=
					styles=0A=
				) : 0=0A=
			);=0A=
		}=0A=
	};=0A=
});=0A=
=0A=
if ( !jQuery.support.opacity ) {=0A=
	jQuery.cssHooks.opacity =3D {=0A=
		get: function( elem, computed ) {=0A=
			// IE uses filters for opacity=0A=
			return ropacity.test( (computed && elem.currentStyle ? =
elem.currentStyle.filter : elem.style.filter) || "" ) ?=0A=
				( 0.01 * parseFloat( RegExp.$1 ) ) + "" :=0A=
				computed ? "1" : "";=0A=
		},=0A=
=0A=
		set: function( elem, value ) {=0A=
			var style =3D elem.style,=0A=
				currentStyle =3D elem.currentStyle,=0A=
				opacity =3D jQuery.isNumeric( value ) ? "alpha(opacity=3D" + value * =
100 + ")" : "",=0A=
				filter =3D currentStyle && currentStyle.filter || style.filter || "";=0A=
=0A=
			// IE has trouble with opacity if it does not have layout=0A=
			// Force it by setting the zoom level=0A=
			style.zoom =3D 1;=0A=
=0A=
			// if setting opacity to 1, and no other filters exist - attempt to =
remove filter attribute #6652=0A=
			// if value =3D=3D=3D "", then remove inline opacity #12685=0A=
			if ( ( value >=3D 1 || value =3D=3D=3D "" ) &&=0A=
					jQuery.trim( filter.replace( ralpha, "" ) ) =3D=3D=3D "" &&=0A=
					style.removeAttribute ) {=0A=
=0A=
				// Setting style.filter to null, "" & " " still leave "filter:" in =
the cssText=0A=
				// if "filter:" is present at all, clearType is disabled, we want to =
avoid this=0A=
				// style.removeAttribute is IE Only, but so apparently is this code =
path...=0A=
				style.removeAttribute( "filter" );=0A=
=0A=
				// if there is no filter style applied in a css rule or unset inline =
opacity, we are done=0A=
				if ( value =3D=3D=3D "" || currentStyle && !currentStyle.filter ) {=0A=
					return;=0A=
				}=0A=
			}=0A=
=0A=
			// otherwise, set new filter values=0A=
			style.filter =3D ralpha.test( filter ) ?=0A=
				filter.replace( ralpha, opacity ) :=0A=
				filter + " " + opacity;=0A=
		}=0A=
	};=0A=
}=0A=
=0A=
// These hooks cannot be added until DOM ready because the support test=0A=
// for it is not run until after DOM ready=0A=
jQuery(function() {=0A=
	if ( !jQuery.support.reliableMarginRight ) {=0A=
		jQuery.cssHooks.marginRight =3D {=0A=
			get: function( elem, computed ) {=0A=
				if ( computed ) {=0A=
					// WebKit Bug 13343 - getComputedStyle returns wrong value for =
margin-right=0A=
					// Work around by temporarily setting element display to =
inline-block=0A=
					return jQuery.swap( elem, { "display": "inline-block" },=0A=
						curCSS, [ elem, "marginRight" ] );=0A=
				}=0A=
			}=0A=
		};=0A=
	}=0A=
=0A=
	// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=3D29084=0A=
	// getComputedStyle returns percent when specified for =
top/left/bottom/right=0A=
	// rather than make the css module depend on the offset module, we just =
check for it here=0A=
	if ( !jQuery.support.pixelPosition && jQuery.fn.position ) {=0A=
		jQuery.each( [ "top", "left" ], function( i, prop ) {=0A=
			jQuery.cssHooks[ prop ] =3D {=0A=
				get: function( elem, computed ) {=0A=
					if ( computed ) {=0A=
						computed =3D curCSS( elem, prop );=0A=
						// if curCSS returns percentage, fallback to offset=0A=
						return rnumnonpx.test( computed ) ?=0A=
							jQuery( elem ).position()[ prop ] + "px" :=0A=
							computed;=0A=
					}=0A=
				}=0A=
			};=0A=
		});=0A=
	}=0A=
=0A=
});=0A=
=0A=
if ( jQuery.expr && jQuery.expr.filters ) {=0A=
	jQuery.expr.filters.hidden =3D function( elem ) {=0A=
		// Support: Opera <=3D 12.12=0A=
		// Opera reports offsetWidths and offsetHeights less than zero on some =
elements=0A=
		return elem.offsetWidth <=3D 0 && elem.offsetHeight <=3D 0 ||=0A=
			(!jQuery.support.reliableHiddenOffsets && ((elem.style && =
elem.style.display) || jQuery.css( elem, "display" )) =3D=3D=3D "none");=0A=
	};=0A=
=0A=
	jQuery.expr.filters.visible =3D function( elem ) {=0A=
		return !jQuery.expr.filters.hidden( elem );=0A=
	};=0A=
}=0A=
=0A=
// These hooks are used by animate to expand properties=0A=
jQuery.each({=0A=
	margin: "",=0A=
	padding: "",=0A=
	border: "Width"=0A=
}, function( prefix, suffix ) {=0A=
	jQuery.cssHooks[ prefix + suffix ] =3D {=0A=
		expand: function( value ) {=0A=
			var i =3D 0,=0A=
				expanded =3D {},=0A=
=0A=
				// assumes a single number if not a string=0A=
				parts =3D typeof value =3D=3D=3D "string" ? value.split(" ") : [ =
value ];=0A=
=0A=
			for ( ; i < 4; i++ ) {=0A=
				expanded[ prefix + cssExpand[ i ] + suffix ] =3D=0A=
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];=0A=
			}=0A=
=0A=
			return expanded;=0A=
		}=0A=
	};=0A=
=0A=
	if ( !rmargin.test( prefix ) ) {=0A=
		jQuery.cssHooks[ prefix + suffix ].set =3D setPositiveNumber;=0A=
	}=0A=
});=0A=
var r20 =3D /%20/g,=0A=
	rbracket =3D /\[\]$/,=0A=
	rCRLF =3D /\r?\n/g,=0A=
	rsubmitterTypes =3D /^(?:submit|button|image|reset|file)$/i,=0A=
	rsubmittable =3D /^(?:input|select|textarea|keygen)/i;=0A=
=0A=
jQuery.fn.extend({=0A=
	serialize: function() {=0A=
		return jQuery.param( this.serializeArray() );=0A=
	},=0A=
	serializeArray: function() {=0A=
		return this.map(function(){=0A=
			// Can add propHook for "elements" to filter or add form elements=0A=
			var elements =3D jQuery.prop( this, "elements" );=0A=
			return elements ? jQuery.makeArray( elements ) : this;=0A=
		})=0A=
		.filter(function(){=0A=
			var type =3D this.type;=0A=
			// Use .is(":disabled") so that fieldset[disabled] works=0A=
			return this.name && !jQuery( this ).is( ":disabled" ) &&=0A=
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) =
&&=0A=
				( this.checked || !manipulation_rcheckableType.test( type ) );=0A=
		})=0A=
		.map(function( i, elem ){=0A=
			var val =3D jQuery( this ).val();=0A=
=0A=
			return val =3D=3D null ?=0A=
				null :=0A=
				jQuery.isArray( val ) ?=0A=
					jQuery.map( val, function( val ){=0A=
						return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };=0A=
					}) :=0A=
					{ name: elem.name, value: val.replace( rCRLF, "\r\n" ) };=0A=
		}).get();=0A=
	}=0A=
});=0A=
=0A=
//Serialize an array of form elements or a set of=0A=
//key/values into a query string=0A=
jQuery.param =3D function( a, traditional ) {=0A=
	var prefix,=0A=
		s =3D [],=0A=
		add =3D function( key, value ) {=0A=
			// If value is a function, invoke it and return its value=0A=
			value =3D jQuery.isFunction( value ) ? value() : ( value =3D=3D null =
? "" : value );=0A=
			s[ s.length ] =3D encodeURIComponent( key ) + "=3D" + =
encodeURIComponent( value );=0A=
		};=0A=
=0A=
	// Set traditional to true for jQuery <=3D 1.3.2 behavior.=0A=
	if ( traditional =3D=3D=3D undefined ) {=0A=
		traditional =3D jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;=0A=
	}=0A=
=0A=
	// If an array was passed in, assume that it is an array of form =
elements.=0A=
	if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) =
) {=0A=
		// Serialize the form elements=0A=
		jQuery.each( a, function() {=0A=
			add( this.name, this.value );=0A=
		});=0A=
=0A=
	} else {=0A=
		// If traditional, encode the "old" way (the way 1.3.2 or older=0A=
		// did it), otherwise encode params recursively.=0A=
		for ( prefix in a ) {=0A=
			buildParams( prefix, a[ prefix ], traditional, add );=0A=
		}=0A=
	}=0A=
=0A=
	// Return the resulting serialization=0A=
	return s.join( "&" ).replace( r20, "+" );=0A=
};=0A=
=0A=
function buildParams( prefix, obj, traditional, add ) {=0A=
	var name;=0A=
=0A=
	if ( jQuery.isArray( obj ) ) {=0A=
		// Serialize array item.=0A=
		jQuery.each( obj, function( i, v ) {=0A=
			if ( traditional || rbracket.test( prefix ) ) {=0A=
				// Treat each array item as a scalar.=0A=
				add( prefix, v );=0A=
=0A=
			} else {=0A=
				// Item is non-scalar (array or object), encode its numeric index.=0A=
				buildParams( prefix + "[" + ( typeof v =3D=3D=3D "object" ? i : "" ) =
+ "]", v, traditional, add );=0A=
			}=0A=
		});=0A=
=0A=
	} else if ( !traditional && jQuery.type( obj ) =3D=3D=3D "object" ) {=0A=
		// Serialize object item.=0A=
		for ( name in obj ) {=0A=
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add =
);=0A=
		}=0A=
=0A=
	} else {=0A=
		// Serialize scalar item.=0A=
		add( prefix, obj );=0A=
	}=0A=
}=0A=
jQuery.each( ("blur focus focusin focusout load resize scroll unload =
click dblclick " +=0A=
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " =
+=0A=
	"change select submit keydown keypress keyup error =
contextmenu").split(" "), function( i, name ) {=0A=
=0A=
	// Handle event binding=0A=
	jQuery.fn[ name ] =3D function( data, fn ) {=0A=
		return arguments.length > 0 ?=0A=
			this.on( name, null, data, fn ) :=0A=
			this.trigger( name );=0A=
	};=0A=
});=0A=
=0A=
jQuery.fn.hover =3D function( fnOver, fnOut ) {=0A=
	return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );=0A=
};=0A=
var=0A=
	// Document location=0A=
	ajaxLocParts,=0A=
	ajaxLocation,=0A=
	ajax_nonce =3D jQuery.now(),=0A=
=0A=
	ajax_rquery =3D /\?/,=0A=
	rhash =3D /#.*$/,=0A=
	rts =3D /([?&])_=3D[^&]*/,=0A=
	rheaders =3D /^(.*?):[ \t]*([^\r\n]*)\r?$/mg, // IE leaves an \r =
character at EOL=0A=
	// #7653, #8125, #8152: local protocol detection=0A=
	rlocalProtocol =3D =
/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,=0A=
	rnoContent =3D /^(?:GET|HEAD)$/,=0A=
	rprotocol =3D /^\/\//,=0A=
	rurl =3D /^([\w.+-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/,=0A=
=0A=
	// Keep a copy of the old load method=0A=
	_load =3D jQuery.fn.load,=0A=
=0A=
	/* Prefilters=0A=
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js =
for an example)=0A=
	 * 2) These are called:=0A=
	 *    - BEFORE asking for a transport=0A=
	 *    - AFTER param serialization (s.data is a string if s.processData =
is true)=0A=
	 * 3) key is the dataType=0A=
	 * 4) the catchall symbol "*" can be used=0A=
	 * 5) execution will start with transport dataType and THEN continue =
down to "*" if needed=0A=
	 */=0A=
	prefilters =3D {},=0A=
=0A=
	/* Transports bindings=0A=
	 * 1) key is the dataType=0A=
	 * 2) the catchall symbol "*" can be used=0A=
	 * 3) selection will start with transport dataType and THEN go to "*" =
if needed=0A=
	 */=0A=
	transports =3D {},=0A=
=0A=
	// Avoid comment-prolog char sequence (#10098); must appease lint and =
evade compression=0A=
	allTypes =3D "*/".concat("*");=0A=
=0A=
// #8138, IE may throw an exception when accessing=0A=
// a field from window.location if document.domain has been set=0A=
try {=0A=
	ajaxLocation =3D location.href;=0A=
} catch( e ) {=0A=
	// Use the href attribute of an A element=0A=
	// since IE will modify it given document.location=0A=
	ajaxLocation =3D document.createElement( "a" );=0A=
	ajaxLocation.href =3D "";=0A=
	ajaxLocation =3D ajaxLocation.href;=0A=
}=0A=
=0A=
// Segment location into parts=0A=
ajaxLocParts =3D rurl.exec( ajaxLocation.toLowerCase() ) || [];=0A=
=0A=
// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport=0A=
function addToPrefiltersOrTransports( structure ) {=0A=
=0A=
	// dataTypeExpression is optional and defaults to "*"=0A=
	return function( dataTypeExpression, func ) {=0A=
=0A=
		if ( typeof dataTypeExpression !=3D=3D "string" ) {=0A=
			func =3D dataTypeExpression;=0A=
			dataTypeExpression =3D "*";=0A=
		}=0A=
=0A=
		var dataType,=0A=
			i =3D 0,=0A=
			dataTypes =3D dataTypeExpression.toLowerCase().match( core_rnotwhite =
) || [];=0A=
=0A=
		if ( jQuery.isFunction( func ) ) {=0A=
			// For each dataType in the dataTypeExpression=0A=
			while ( (dataType =3D dataTypes[i++]) ) {=0A=
				// Prepend if requested=0A=
				if ( dataType[0] =3D=3D=3D "+" ) {=0A=
					dataType =3D dataType.slice( 1 ) || "*";=0A=
					(structure[ dataType ] =3D structure[ dataType ] || []).unshift( =
func );=0A=
=0A=
				// Otherwise append=0A=
				} else {=0A=
					(structure[ dataType ] =3D structure[ dataType ] || []).push( func =
);=0A=
				}=0A=
			}=0A=
		}=0A=
	};=0A=
}=0A=
=0A=
// Base inspection function for prefilters and transports=0A=
function inspectPrefiltersOrTransports( structure, options, =
originalOptions, jqXHR ) {=0A=
=0A=
	var inspected =3D {},=0A=
		seekingTransport =3D ( structure =3D=3D=3D transports );=0A=
=0A=
	function inspect( dataType ) {=0A=
		var selected;=0A=
		inspected[ dataType ] =3D true;=0A=
		jQuery.each( structure[ dataType ] || [], function( _, =
prefilterOrFactory ) {=0A=
			var dataTypeOrTransport =3D prefilterOrFactory( options, =
originalOptions, jqXHR );=0A=
			if( typeof dataTypeOrTransport =3D=3D=3D "string" && =
!seekingTransport && !inspected[ dataTypeOrTransport ] ) {=0A=
				options.dataTypes.unshift( dataTypeOrTransport );=0A=
				inspect( dataTypeOrTransport );=0A=
				return false;=0A=
			} else if ( seekingTransport ) {=0A=
				return !( selected =3D dataTypeOrTransport );=0A=
			}=0A=
		});=0A=
		return selected;=0A=
	}=0A=
=0A=
	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && =
inspect( "*" );=0A=
}=0A=
=0A=
// A special extend for ajax options=0A=
// that takes "flat" options (not to be deep extended)=0A=
// Fixes #9887=0A=
function ajaxExtend( target, src ) {=0A=
	var deep, key,=0A=
		flatOptions =3D jQuery.ajaxSettings.flatOptions || {};=0A=
=0A=
	for ( key in src ) {=0A=
		if ( src[ key ] !=3D=3D undefined ) {=0A=
			( flatOptions[ key ] ? target : ( deep || (deep =3D {}) ) )[ key ] =
=3D src[ key ];=0A=
		}=0A=
	}=0A=
	if ( deep ) {=0A=
		jQuery.extend( true, target, deep );=0A=
	}=0A=
=0A=
	return target;=0A=
}=0A=
=0A=
jQuery.fn.load =3D function( url, params, callback ) {=0A=
	if ( typeof url !=3D=3D "string" && _load ) {=0A=
		return _load.apply( this, arguments );=0A=
	}=0A=
=0A=
	var selector, response, type,=0A=
		self =3D this,=0A=
		off =3D url.indexOf(" ");=0A=
=0A=
	if ( off >=3D 0 ) {=0A=
		selector =3D url.slice( off, url.length );=0A=
		url =3D url.slice( 0, off );=0A=
	}=0A=
=0A=
	// If it's a function=0A=
	if ( jQuery.isFunction( params ) ) {=0A=
=0A=
		// We assume that it's the callback=0A=
		callback =3D params;=0A=
		params =3D undefined;=0A=
=0A=
	// Otherwise, build a param string=0A=
	} else if ( params && typeof params =3D=3D=3D "object" ) {=0A=
		type =3D "POST";=0A=
	}=0A=
=0A=
	// If we have elements to modify, make the request=0A=
	if ( self.length > 0 ) {=0A=
		jQuery.ajax({=0A=
			url: url,=0A=
=0A=
			// if "type" variable is undefined, then "GET" method will be used=0A=
			type: type,=0A=
			dataType: "html",=0A=
			data: params=0A=
		}).done(function( responseText ) {=0A=
=0A=
			// Save response for use in complete callback=0A=
			response =3D arguments;=0A=
=0A=
			self.html( selector ?=0A=
=0A=
				// If a selector was specified, locate the right elements in a dummy =
div=0A=
				// Exclude scripts to avoid IE 'Permission Denied' errors=0A=
				jQuery("<div>").append( jQuery.parseHTML( responseText ) ).find( =
selector ) :=0A=
=0A=
				// Otherwise use the full result=0A=
				responseText );=0A=
=0A=
		}).complete( callback && function( jqXHR, status ) {=0A=
			self.each( callback, response || [ jqXHR.responseText, status, jqXHR =
] );=0A=
		});=0A=
	}=0A=
=0A=
	return this;=0A=
};=0A=
=0A=
// Attach a bunch of functions for handling common AJAX events=0A=
jQuery.each( [ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", =
"ajaxSuccess", "ajaxSend" ], function( i, type ){=0A=
	jQuery.fn[ type ] =3D function( fn ){=0A=
		return this.on( type, fn );=0A=
	};=0A=
});=0A=
=0A=
jQuery.each( [ "get", "post" ], function( i, method ) {=0A=
	jQuery[ method ] =3D function( url, data, callback, type ) {=0A=
		// shift arguments if data argument was omitted=0A=
		if ( jQuery.isFunction( data ) ) {=0A=
			type =3D type || callback;=0A=
			callback =3D data;=0A=
			data =3D undefined;=0A=
		}=0A=
=0A=
		return jQuery.ajax({=0A=
			url: url,=0A=
			type: method,=0A=
			dataType: type,=0A=
			data: data,=0A=
			success: callback=0A=
		});=0A=
	};=0A=
});=0A=
=0A=
jQuery.extend({=0A=
=0A=
	// Counter for holding the number of active queries=0A=
	active: 0,=0A=
=0A=
	// Last-Modified header cache for next request=0A=
	lastModified: {},=0A=
	etag: {},=0A=
=0A=
	ajaxSettings: {=0A=
		url: ajaxLocation,=0A=
		type: "GET",=0A=
		isLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),=0A=
		global: true,=0A=
		processData: true,=0A=
		async: true,=0A=
		contentType: "application/x-www-form-urlencoded; charset=3DUTF-8",=0A=
		/*=0A=
		timeout: 0,=0A=
		data: null,=0A=
		dataType: null,=0A=
		username: null,=0A=
		password: null,=0A=
		cache: null,=0A=
		throws: false,=0A=
		traditional: false,=0A=
		headers: {},=0A=
		*/=0A=
=0A=
		accepts: {=0A=
			"*": allTypes,=0A=
			text: "text/plain",=0A=
			html: "text/html",=0A=
			xml: "application/xml, text/xml",=0A=
			json: "application/json, text/javascript"=0A=
		},=0A=
=0A=
		contents: {=0A=
			xml: /xml/,=0A=
			html: /html/,=0A=
			json: /json/=0A=
		},=0A=
=0A=
		responseFields: {=0A=
			xml: "responseXML",=0A=
			text: "responseText"=0A=
		},=0A=
=0A=
		// Data converters=0A=
		// Keys separate source (or catchall "*") and destination types with a =
single space=0A=
		converters: {=0A=
=0A=
			// Convert anything to text=0A=
			"* text": window.String,=0A=
=0A=
			// Text to html (true =3D no transformation)=0A=
			"text html": true,=0A=
=0A=
			// Evaluate text as a json expression=0A=
			"text json": jQuery.parseJSON,=0A=
=0A=
			// Parse text as xml=0A=
			"text xml": jQuery.parseXML=0A=
		},=0A=
=0A=
		// For options that shouldn't be deep extended:=0A=
		// you can add your own custom options here if=0A=
		// and when you create one that shouldn't be=0A=
		// deep extended (see ajaxExtend)=0A=
		flatOptions: {=0A=
			url: true,=0A=
			context: true=0A=
		}=0A=
	},=0A=
=0A=
	// Creates a full fledged settings object into target=0A=
	// with both ajaxSettings and settings fields.=0A=
	// If target is omitted, writes into ajaxSettings.=0A=
	ajaxSetup: function( target, settings ) {=0A=
		return settings ?=0A=
=0A=
			// Building a settings object=0A=
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :=0A=
=0A=
			// Extending ajaxSettings=0A=
			ajaxExtend( jQuery.ajaxSettings, target );=0A=
	},=0A=
=0A=
	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),=0A=
	ajaxTransport: addToPrefiltersOrTransports( transports ),=0A=
=0A=
	// Main method=0A=
	ajax: function( url, options ) {=0A=
=0A=
		// If url is an object, simulate pre-1.5 signature=0A=
		if ( typeof url =3D=3D=3D "object" ) {=0A=
			options =3D url;=0A=
			url =3D undefined;=0A=
		}=0A=
=0A=
		// Force options to be an object=0A=
		options =3D options || {};=0A=
=0A=
		var // Cross-domain detection vars=0A=
			parts,=0A=
			// Loop variable=0A=
			i,=0A=
			// URL without anti-cache param=0A=
			cacheURL,=0A=
			// Response headers as string=0A=
			responseHeadersString,=0A=
			// timeout handle=0A=
			timeoutTimer,=0A=
=0A=
			// To know if global events are to be dispatched=0A=
			fireGlobals,=0A=
=0A=
			transport,=0A=
			// Response headers=0A=
			responseHeaders,=0A=
			// Create the final options object=0A=
			s =3D jQuery.ajaxSetup( {}, options ),=0A=
			// Callbacks context=0A=
			callbackContext =3D s.context || s,=0A=
			// Context for global events is callbackContext if it is a DOM node =
or jQuery collection=0A=
			globalEventContext =3D s.context && ( callbackContext.nodeType || =
callbackContext.jquery ) ?=0A=
				jQuery( callbackContext ) :=0A=
				jQuery.event,=0A=
			// Deferreds=0A=
			deferred =3D jQuery.Deferred(),=0A=
			completeDeferred =3D jQuery.Callbacks("once memory"),=0A=
			// Status-dependent callbacks=0A=
			statusCode =3D s.statusCode || {},=0A=
			// Headers (they are sent all at once)=0A=
			requestHeaders =3D {},=0A=
			requestHeadersNames =3D {},=0A=
			// The jqXHR state=0A=
			state =3D 0,=0A=
			// Default abort message=0A=
			strAbort =3D "canceled",=0A=
			// Fake xhr=0A=
			jqXHR =3D {=0A=
				readyState: 0,=0A=
=0A=
				// Builds headers hashtable if needed=0A=
				getResponseHeader: function( key ) {=0A=
					var match;=0A=
					if ( state =3D=3D=3D 2 ) {=0A=
						if ( !responseHeaders ) {=0A=
							responseHeaders =3D {};=0A=
							while ( (match =3D rheaders.exec( responseHeadersString )) ) {=0A=
								responseHeaders[ match[1].toLowerCase() ] =3D match[ 2 ];=0A=
							}=0A=
						}=0A=
						match =3D responseHeaders[ key.toLowerCase() ];=0A=
					}=0A=
					return match =3D=3D null ? null : match;=0A=
				},=0A=
=0A=
				// Raw string=0A=
				getAllResponseHeaders: function() {=0A=
					return state =3D=3D=3D 2 ? responseHeadersString : null;=0A=
				},=0A=
=0A=
				// Caches the header=0A=
				setRequestHeader: function( name, value ) {=0A=
					var lname =3D name.toLowerCase();=0A=
					if ( !state ) {=0A=
						name =3D requestHeadersNames[ lname ] =3D requestHeadersNames[ =
lname ] || name;=0A=
						requestHeaders[ name ] =3D value;=0A=
					}=0A=
					return this;=0A=
				},=0A=
=0A=
				// Overrides response content-type header=0A=
				overrideMimeType: function( type ) {=0A=
					if ( !state ) {=0A=
						s.mimeType =3D type;=0A=
					}=0A=
					return this;=0A=
				},=0A=
=0A=
				// Status-dependent callbacks=0A=
				statusCode: function( map ) {=0A=
					var code;=0A=
					if ( map ) {=0A=
						if ( state < 2 ) {=0A=
							for ( code in map ) {=0A=
								// Lazy-add the new callback in a way that preserves old ones=0A=
								statusCode[ code ] =3D [ statusCode[ code ], map[ code ] ];=0A=
							}=0A=
						} else {=0A=
							// Execute the appropriate callbacks=0A=
							jqXHR.always( map[ jqXHR.status ] );=0A=
						}=0A=
					}=0A=
					return this;=0A=
				},=0A=
=0A=
				// Cancel the request=0A=
				abort: function( statusText ) {=0A=
					var finalText =3D statusText || strAbort;=0A=
					if ( transport ) {=0A=
						transport.abort( finalText );=0A=
					}=0A=
					done( 0, finalText );=0A=
					return this;=0A=
				}=0A=
			};=0A=
=0A=
		// Attach deferreds=0A=
		deferred.promise( jqXHR ).complete =3D completeDeferred.add;=0A=
		jqXHR.success =3D jqXHR.done;=0A=
		jqXHR.error =3D jqXHR.fail;=0A=
=0A=
		// Remove hash character (#7531: and string promotion)=0A=
		// Add protocol if not provided (#5866: IE7 issue with protocol-less =
urls)=0A=
		// Handle falsy url in the settings object (#10093: consistency with =
old signature)=0A=
		// We also use the url parameter if available=0A=
		s.url =3D ( ( url || s.url || ajaxLocation ) + "" ).replace( rhash, "" =
).replace( rprotocol, ajaxLocParts[ 1 ] + "//" );=0A=
=0A=
		// Alias method option to type as per ticket #12004=0A=
		s.type =3D options.method || options.type || s.method || s.type;=0A=
=0A=
		// Extract dataTypes list=0A=
		s.dataTypes =3D jQuery.trim( s.dataType || "*" ).toLowerCase().match( =
core_rnotwhite ) || [""];=0A=
=0A=
		// A cross-domain request is in order when we have a =
protocol:host:port mismatch=0A=
		if ( s.crossDomain =3D=3D null ) {=0A=
			parts =3D rurl.exec( s.url.toLowerCase() );=0A=
			s.crossDomain =3D !!( parts &&=0A=
				( parts[ 1 ] !=3D=3D ajaxLocParts[ 1 ] || parts[ 2 ] !=3D=3D =
ajaxLocParts[ 2 ] ||=0A=
					( parts[ 3 ] || ( parts[ 1 ] =3D=3D=3D "http:" ? 80 : 443 ) ) !=3D=0A=
						( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] =3D=3D=3D "http:" ? 80 =
: 443 ) ) )=0A=
			);=0A=
		}=0A=
=0A=
		// Convert data if not already a string=0A=
		if ( s.data && s.processData && typeof s.data !=3D=3D "string" ) {=0A=
			s.data =3D jQuery.param( s.data, s.traditional );=0A=
		}=0A=
=0A=
		// Apply prefilters=0A=
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );=0A=
=0A=
		// If request was aborted inside a prefilter, stop there=0A=
		if ( state =3D=3D=3D 2 ) {=0A=
			return jqXHR;=0A=
		}=0A=
=0A=
		// We can fire global events as of now if asked to=0A=
		fireGlobals =3D s.global;=0A=
=0A=
		// Watch for a new set of requests=0A=
		if ( fireGlobals && jQuery.active++ =3D=3D=3D 0 ) {=0A=
			jQuery.event.trigger("ajaxStart");=0A=
		}=0A=
=0A=
		// Uppercase the type=0A=
		s.type =3D s.type.toUpperCase();=0A=
=0A=
		// Determine if request has content=0A=
		s.hasContent =3D !rnoContent.test( s.type );=0A=
=0A=
		// Save the URL in case we're toying with the If-Modified-Since=0A=
		// and/or If-None-Match header later on=0A=
		cacheURL =3D s.url;=0A=
=0A=
		// More options handling for requests with no content=0A=
		if ( !s.hasContent ) {=0A=
=0A=
			// If data is available, append data to url=0A=
			if ( s.data ) {=0A=
				cacheURL =3D ( s.url +=3D ( ajax_rquery.test( cacheURL ) ? "&" : "?" =
) + s.data );=0A=
				// #9682: remove data so that it's not used in an eventual retry=0A=
				delete s.data;=0A=
			}=0A=
=0A=
			// Add anti-cache in url if needed=0A=
			if ( s.cache =3D=3D=3D false ) {=0A=
				s.url =3D rts.test( cacheURL ) ?=0A=
=0A=
					// If there is already a '_' parameter, set its value=0A=
					cacheURL.replace( rts, "$1_=3D" + ajax_nonce++ ) :=0A=
=0A=
					// Otherwise add one to the end=0A=
					cacheURL + ( ajax_rquery.test( cacheURL ) ? "&" : "?" ) + "_=3D" + =
ajax_nonce++;=0A=
			}=0A=
		}=0A=
=0A=
		// Set the If-Modified-Since and/or If-None-Match header, if in =
ifModified mode.=0A=
		if ( s.ifModified ) {=0A=
			if ( jQuery.lastModified[ cacheURL ] ) {=0A=
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ =
cacheURL ] );=0A=
			}=0A=
			if ( jQuery.etag[ cacheURL ] ) {=0A=
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );=0A=
			}=0A=
		}=0A=
=0A=
		// Set the correct header, if data is being sent=0A=
		if ( s.data && s.hasContent && s.contentType !=3D=3D false || =
options.contentType ) {=0A=
			jqXHR.setRequestHeader( "Content-Type", s.contentType );=0A=
		}=0A=
=0A=
		// Set the Accepts header for the server, depending on the dataType=0A=
		jqXHR.setRequestHeader(=0A=
			"Accept",=0A=
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?=0A=
				s.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !=3D=3D "*" ? ", " =
+ allTypes + "; q=3D0.01" : "" ) :=0A=
				s.accepts[ "*" ]=0A=
		);=0A=
=0A=
		// Check for headers option=0A=
		for ( i in s.headers ) {=0A=
			jqXHR.setRequestHeader( i, s.headers[ i ] );=0A=
		}=0A=
=0A=
		// Allow custom headers/mimetypes and early abort=0A=
		if ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) =
=3D=3D=3D false || state =3D=3D=3D 2 ) ) {=0A=
			// Abort if not done already and return=0A=
			return jqXHR.abort();=0A=
		}=0A=
=0A=
		// aborting is no longer a cancellation=0A=
		strAbort =3D "abort";=0A=
=0A=
		// Install callbacks on deferreds=0A=
		for ( i in { success: 1, error: 1, complete: 1 } ) {=0A=
			jqXHR[ i ]( s[ i ] );=0A=
		}=0A=
=0A=
		// Get transport=0A=
		transport =3D inspectPrefiltersOrTransports( transports, s, options, =
jqXHR );=0A=
=0A=
		// If no transport, we auto-abort=0A=
		if ( !transport ) {=0A=
			done( -1, "No Transport" );=0A=
		} else {=0A=
			jqXHR.readyState =3D 1;=0A=
=0A=
			// Send global event=0A=
			if ( fireGlobals ) {=0A=
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );=0A=
			}=0A=
			// Timeout=0A=
			if ( s.async && s.timeout > 0 ) {=0A=
				timeoutTimer =3D setTimeout(function() {=0A=
					jqXHR.abort("timeout");=0A=
				}, s.timeout );=0A=
			}=0A=
=0A=
			try {=0A=
				state =3D 1;=0A=
				transport.send( requestHeaders, done );=0A=
			} catch ( e ) {=0A=
				// Propagate exception as error if not done=0A=
				if ( state < 2 ) {=0A=
					done( -1, e );=0A=
				// Simply rethrow otherwise=0A=
				} else {=0A=
					throw e;=0A=
				}=0A=
			}=0A=
		}=0A=
=0A=
		// Callback for when everything is done=0A=
		function done( status, nativeStatusText, responses, headers ) {=0A=
			var isSuccess, success, error, response, modified,=0A=
				statusText =3D nativeStatusText;=0A=
=0A=
			// Called once=0A=
			if ( state =3D=3D=3D 2 ) {=0A=
				return;=0A=
			}=0A=
=0A=
			// State is "done" now=0A=
			state =3D 2;=0A=
=0A=
			// Clear timeout if it exists=0A=
			if ( timeoutTimer ) {=0A=
				clearTimeout( timeoutTimer );=0A=
			}=0A=
=0A=
			// Dereference transport for early garbage collection=0A=
			// (no matter how long the jqXHR object will be used)=0A=
			transport =3D undefined;=0A=
=0A=
			// Cache response headers=0A=
			responseHeadersString =3D headers || "";=0A=
=0A=
			// Set readyState=0A=
			jqXHR.readyState =3D status > 0 ? 4 : 0;=0A=
=0A=
			// Get response data=0A=
			if ( responses ) {=0A=
				response =3D ajaxHandleResponses( s, jqXHR, responses );=0A=
			}=0A=
=0A=
			// If successful, handle type chaining=0A=
			if ( status >=3D 200 && status < 300 || status =3D=3D=3D 304 ) {=0A=
=0A=
				// Set the If-Modified-Since and/or If-None-Match header, if in =
ifModified mode.=0A=
				if ( s.ifModified ) {=0A=
					modified =3D jqXHR.getResponseHeader("Last-Modified");=0A=
					if ( modified ) {=0A=
						jQuery.lastModified[ cacheURL ] =3D modified;=0A=
					}=0A=
					modified =3D jqXHR.getResponseHeader("etag");=0A=
					if ( modified ) {=0A=
						jQuery.etag[ cacheURL ] =3D modified;=0A=
					}=0A=
				}=0A=
=0A=
				// if no content=0A=
				if ( status =3D=3D=3D 204 ) {=0A=
					isSuccess =3D true;=0A=
					statusText =3D "nocontent";=0A=
=0A=
				// if not modified=0A=
				} else if ( status =3D=3D=3D 304 ) {=0A=
					isSuccess =3D true;=0A=
					statusText =3D "notmodified";=0A=
=0A=
				// If we have data, let's convert it=0A=
				} else {=0A=
					isSuccess =3D ajaxConvert( s, response );=0A=
					statusText =3D isSuccess.state;=0A=
					success =3D isSuccess.data;=0A=
					error =3D isSuccess.error;=0A=
					isSuccess =3D !error;=0A=
				}=0A=
			} else {=0A=
				// We extract error from statusText=0A=
				// then normalize statusText and status for non-aborts=0A=
				error =3D statusText;=0A=
				if ( status || !statusText ) {=0A=
					statusText =3D "error";=0A=
					if ( status < 0 ) {=0A=
						status =3D 0;=0A=
					}=0A=
				}=0A=
			}=0A=
=0A=
			// Set data for the fake xhr object=0A=
			jqXHR.status =3D status;=0A=
			jqXHR.statusText =3D ( nativeStatusText || statusText ) + "";=0A=
=0A=
			// Success/Error=0A=
			if ( isSuccess ) {=0A=
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR =
] );=0A=
			} else {=0A=
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );=0A=
			}=0A=
=0A=
			// Status-dependent callbacks=0A=
			jqXHR.statusCode( statusCode );=0A=
			statusCode =3D undefined;=0A=
=0A=
			if ( fireGlobals ) {=0A=
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",=0A=
					[ jqXHR, s, isSuccess ? success : error ] );=0A=
			}=0A=
=0A=
			// Complete=0A=
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );=0A=
=0A=
			if ( fireGlobals ) {=0A=
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );=0A=
				// Handle the global AJAX counter=0A=
				if ( !( --jQuery.active ) ) {=0A=
					jQuery.event.trigger("ajaxStop");=0A=
				}=0A=
			}=0A=
		}=0A=
=0A=
		return jqXHR;=0A=
	},=0A=
=0A=
	getScript: function( url, callback ) {=0A=
		return jQuery.get( url, undefined, callback, "script" );=0A=
	},=0A=
=0A=
	getJSON: function( url, data, callback ) {=0A=
		return jQuery.get( url, data, callback, "json" );=0A=
	}=0A=
});=0A=
=0A=
/* Handles responses to an ajax request:=0A=
 * - sets all responseXXX fields accordingly=0A=
 * - finds the right dataType (mediates between content-type and =
expected dataType)=0A=
 * - returns the corresponding response=0A=
 */=0A=
function ajaxHandleResponses( s, jqXHR, responses ) {=0A=
	var firstDataType, ct, finalDataType, type,=0A=
		contents =3D s.contents,=0A=
		dataTypes =3D s.dataTypes,=0A=
		responseFields =3D s.responseFields;=0A=
=0A=
	// Fill responseXXX fields=0A=
	for ( type in responseFields ) {=0A=
		if ( type in responses ) {=0A=
			jqXHR[ responseFields[type] ] =3D responses[ type ];=0A=
		}=0A=
	}=0A=
=0A=
	// Remove auto dataType and get content-type in the process=0A=
	while( dataTypes[ 0 ] =3D=3D=3D "*" ) {=0A=
		dataTypes.shift();=0A=
		if ( ct =3D=3D=3D undefined ) {=0A=
			ct =3D s.mimeType || jqXHR.getResponseHeader("Content-Type");=0A=
		}=0A=
	}=0A=
=0A=
	// Check if we're dealing with a known content-type=0A=
	if ( ct ) {=0A=
		for ( type in contents ) {=0A=
			if ( contents[ type ] && contents[ type ].test( ct ) ) {=0A=
				dataTypes.unshift( type );=0A=
				break;=0A=
			}=0A=
		}=0A=
	}=0A=
=0A=
	// Check to see if we have a response for the expected dataType=0A=
	if ( dataTypes[ 0 ] in responses ) {=0A=
		finalDataType =3D dataTypes[ 0 ];=0A=
	} else {=0A=
		// Try convertible dataTypes=0A=
		for ( type in responses ) {=0A=
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[0] ] ) {=0A=
				finalDataType =3D type;=0A=
				break;=0A=
			}=0A=
			if ( !firstDataType ) {=0A=
				firstDataType =3D type;=0A=
			}=0A=
		}=0A=
		// Or just use first one=0A=
		finalDataType =3D finalDataType || firstDataType;=0A=
	}=0A=
=0A=
	// If we found a dataType=0A=
	// We add the dataType to the list if needed=0A=
	// and return the corresponding response=0A=
	if ( finalDataType ) {=0A=
		if ( finalDataType !=3D=3D dataTypes[ 0 ] ) {=0A=
			dataTypes.unshift( finalDataType );=0A=
		}=0A=
		return responses[ finalDataType ];=0A=
	}=0A=
}=0A=
=0A=
// Chain conversions given the request and the original response=0A=
function ajaxConvert( s, response ) {=0A=
	var conv2, current, conv, tmp,=0A=
		converters =3D {},=0A=
		i =3D 0,=0A=
		// Work with a copy of dataTypes in case we need to modify it for =
conversion=0A=
		dataTypes =3D s.dataTypes.slice(),=0A=
		prev =3D dataTypes[ 0 ];=0A=
=0A=
	// Apply the dataFilter if provided=0A=
	if ( s.dataFilter ) {=0A=
		response =3D s.dataFilter( response, s.dataType );=0A=
	}=0A=
=0A=
	// Create converters map with lowercased keys=0A=
	if ( dataTypes[ 1 ] ) {=0A=
		for ( conv in s.converters ) {=0A=
			converters[ conv.toLowerCase() ] =3D s.converters[ conv ];=0A=
		}=0A=
	}=0A=
=0A=
	// Convert to each sequential dataType, tolerating list modification=0A=
	for ( ; (current =3D dataTypes[++i]); ) {=0A=
=0A=
		// There's only work to do if current dataType is non-auto=0A=
		if ( current !=3D=3D "*" ) {=0A=
=0A=
			// Convert response if prev dataType is non-auto and differs from =
current=0A=
			if ( prev !=3D=3D "*" && prev !=3D=3D current ) {=0A=
=0A=
				// Seek a direct converter=0A=
				conv =3D converters[ prev + " " + current ] || converters[ "* " + =
current ];=0A=
=0A=
				// If none found, seek a pair=0A=
				if ( !conv ) {=0A=
					for ( conv2 in converters ) {=0A=
=0A=
						// If conv2 outputs current=0A=
						tmp =3D conv2.split(" ");=0A=
						if ( tmp[ 1 ] =3D=3D=3D current ) {=0A=
=0A=
							// If prev can be converted to accepted input=0A=
							conv =3D converters[ prev + " " + tmp[ 0 ] ] ||=0A=
								converters[ "* " + tmp[ 0 ] ];=0A=
							if ( conv ) {=0A=
								// Condense equivalence converters=0A=
								if ( conv =3D=3D=3D true ) {=0A=
									conv =3D converters[ conv2 ];=0A=
=0A=
								// Otherwise, insert the intermediate dataType=0A=
								} else if ( converters[ conv2 ] !=3D=3D true ) {=0A=
									current =3D tmp[ 0 ];=0A=
									dataTypes.splice( i--, 0, current );=0A=
								}=0A=
=0A=
								break;=0A=
							}=0A=
						}=0A=
					}=0A=
				}=0A=
=0A=
				// Apply converter (if not an equivalence)=0A=
				if ( conv !=3D=3D true ) {=0A=
=0A=
					// Unless errors are allowed to bubble, catch and return them=0A=
					if ( conv && s["throws"] ) {=0A=
						response =3D conv( response );=0A=
					} else {=0A=
						try {=0A=
							response =3D conv( response );=0A=
						} catch ( e ) {=0A=
							return { state: "parsererror", error: conv ? e : "No conversion =
from " + prev + " to " + current };=0A=
						}=0A=
					}=0A=
				}=0A=
			}=0A=
=0A=
			// Update prev for next iteration=0A=
			prev =3D current;=0A=
		}=0A=
	}=0A=
=0A=
	return { state: "success", data: response };=0A=
}=0A=
// Install script dataType=0A=
jQuery.ajaxSetup({=0A=
	accepts: {=0A=
		script: "text/javascript, application/javascript, =
application/ecmascript, application/x-ecmascript"=0A=
	},=0A=
	contents: {=0A=
		script: /(?:java|ecma)script/=0A=
	},=0A=
	converters: {=0A=
		"text script": function( text ) {=0A=
			jQuery.globalEval( text );=0A=
			return text;=0A=
		}=0A=
	}=0A=
});=0A=
=0A=
// Handle cache's special case and global=0A=
jQuery.ajaxPrefilter( "script", function( s ) {=0A=
	if ( s.cache =3D=3D=3D undefined ) {=0A=
		s.cache =3D false;=0A=
	}=0A=
	if ( s.crossDomain ) {=0A=
		s.type =3D "GET";=0A=
		s.global =3D false;=0A=
	}=0A=
});=0A=
=0A=
// Bind script tag hack transport=0A=
jQuery.ajaxTransport( "script", function(s) {=0A=
=0A=
	// This transport only deals with cross domain requests=0A=
	if ( s.crossDomain ) {=0A=
=0A=
		var script,=0A=
			head =3D document.head || jQuery("head")[0] || =
document.documentElement;=0A=
=0A=
		return {=0A=
=0A=
			send: function( _, callback ) {=0A=
=0A=
				script =3D document.createElement("script");=0A=
=0A=
				script.async =3D true;=0A=
=0A=
				if ( s.scriptCharset ) {=0A=
					script.charset =3D s.scriptCharset;=0A=
				}=0A=
=0A=
				script.src =3D s.url;=0A=
=0A=
				// Attach handlers for all browsers=0A=
				script.onload =3D script.onreadystatechange =3D function( _, isAbort =
) {=0A=
=0A=
					if ( isAbort || !script.readyState || /loaded|complete/.test( =
script.readyState ) ) {=0A=
=0A=
						// Handle memory leak in IE=0A=
						script.onload =3D script.onreadystatechange =3D null;=0A=
=0A=
						// Remove the script=0A=
						if ( script.parentNode ) {=0A=
							script.parentNode.removeChild( script );=0A=
						}=0A=
=0A=
						// Dereference the script=0A=
						script =3D null;=0A=
=0A=
						// Callback if not abort=0A=
						if ( !isAbort ) {=0A=
							callback( 200, "success" );=0A=
						}=0A=
					}=0A=
				};=0A=
=0A=
				// Circumvent IE6 bugs with base elements (#2709 and #4378) by =
prepending=0A=
				// Use native DOM manipulation to avoid our domManip AJAX trickery=0A=
				head.insertBefore( script, head.firstChild );=0A=
			},=0A=
=0A=
			abort: function() {=0A=
				if ( script ) {=0A=
					script.onload( undefined, true );=0A=
				}=0A=
			}=0A=
		};=0A=
	}=0A=
});=0A=
var oldCallbacks =3D [],=0A=
	rjsonp =3D /(=3D)\?(?=3D&|$)|\?\?/;=0A=
=0A=
// Default jsonp settings=0A=
jQuery.ajaxSetup({=0A=
	jsonp: "callback",=0A=
	jsonpCallback: function() {=0A=
		var callback =3D oldCallbacks.pop() || ( jQuery.expando + "_" + ( =
ajax_nonce++ ) );=0A=
		this[ callback ] =3D true;=0A=
		return callback;=0A=
	}=0A=
});=0A=
=0A=
// Detect, normalize options and install callbacks for jsonp requests=0A=
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR =
) {=0A=
=0A=
	var callbackName, overwritten, responseContainer,=0A=
		jsonProp =3D s.jsonp !=3D=3D false && ( rjsonp.test( s.url ) ?=0A=
			"url" :=0A=
			typeof s.data =3D=3D=3D "string" && !( s.contentType || "" =
).indexOf("application/x-www-form-urlencoded") && rjsonp.test( s.data ) =
&& "data"=0A=
		);=0A=
=0A=
	// Handle iff the expected data type is "jsonp" or we have a parameter =
to set=0A=
	if ( jsonProp || s.dataTypes[ 0 ] =3D=3D=3D "jsonp" ) {=0A=
=0A=
		// Get callback name, remembering preexisting value associated with it=0A=
		callbackName =3D s.jsonpCallback =3D jQuery.isFunction( =
s.jsonpCallback ) ?=0A=
			s.jsonpCallback() :=0A=
			s.jsonpCallback;=0A=
=0A=
		// Insert callback into url or form data=0A=
		if ( jsonProp ) {=0A=
			s[ jsonProp ] =3D s[ jsonProp ].replace( rjsonp, "$1" + callbackName =
);=0A=
		} else if ( s.jsonp !=3D=3D false ) {=0A=
			s.url +=3D ( ajax_rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + =
"=3D" + callbackName;=0A=
		}=0A=
=0A=
		// Use data converter to retrieve json after script execution=0A=
		s.converters["script json"] =3D function() {=0A=
			if ( !responseContainer ) {=0A=
				jQuery.error( callbackName + " was not called" );=0A=
			}=0A=
			return responseContainer[ 0 ];=0A=
		};=0A=
=0A=
		// force json dataType=0A=
		s.dataTypes[ 0 ] =3D "json";=0A=
=0A=
		// Install callback=0A=
		overwritten =3D window[ callbackName ];=0A=
		window[ callbackName ] =3D function() {=0A=
			responseContainer =3D arguments;=0A=
		};=0A=
=0A=
		// Clean-up function (fires after converters)=0A=
		jqXHR.always(function() {=0A=
			// Restore preexisting value=0A=
			window[ callbackName ] =3D overwritten;=0A=
=0A=
			// Save back as free=0A=
			if ( s[ callbackName ] ) {=0A=
				// make sure that re-using the options doesn't screw things around=0A=
				s.jsonpCallback =3D originalSettings.jsonpCallback;=0A=
=0A=
				// save the callback name for future use=0A=
				oldCallbacks.push( callbackName );=0A=
			}=0A=
=0A=
			// Call if it was a function and we have a response=0A=
			if ( responseContainer && jQuery.isFunction( overwritten ) ) {=0A=
				overwritten( responseContainer[ 0 ] );=0A=
			}=0A=
=0A=
			responseContainer =3D overwritten =3D undefined;=0A=
		});=0A=
=0A=
		// Delegate to script=0A=
		return "script";=0A=
	}=0A=
});=0A=
var xhrCallbacks, xhrSupported,=0A=
	xhrId =3D 0,=0A=
	// #5280: Internet Explorer will keep connections alive if we don't =
abort on unload=0A=
	xhrOnUnloadAbort =3D window.ActiveXObject && function() {=0A=
		// Abort all pending requests=0A=
		var key;=0A=
		for ( key in xhrCallbacks ) {=0A=
			xhrCallbacks[ key ]( undefined, true );=0A=
		}=0A=
	};=0A=
=0A=
// Functions to create xhrs=0A=
function createStandardXHR() {=0A=
	try {=0A=
		return new window.XMLHttpRequest();=0A=
	} catch( e ) {}=0A=
}=0A=
=0A=
function createActiveXHR() {=0A=
	try {=0A=
		return new window.ActiveXObject("Microsoft.XMLHTTP");=0A=
	} catch( e ) {}=0A=
}=0A=
=0A=
// Create the request object=0A=
// (This is still attached to ajaxSettings for backward compatibility)=0A=
jQuery.ajaxSettings.xhr =3D window.ActiveXObject ?=0A=
	/* Microsoft failed to properly=0A=
	 * implement the XMLHttpRequest in IE7 (can't request local files),=0A=
	 * so we use the ActiveXObject when it is available=0A=
	 * Additionally XMLHttpRequest can be disabled in IE7/IE8 so=0A=
	 * we need a fallback.=0A=
	 */=0A=
	function() {=0A=
		return !this.isLocal && createStandardXHR() || createActiveXHR();=0A=
	} :=0A=
	// For all other browsers, use the standard XMLHttpRequest object=0A=
	createStandardXHR;=0A=
=0A=
// Determine support properties=0A=
xhrSupported =3D jQuery.ajaxSettings.xhr();=0A=
jQuery.support.cors =3D !!xhrSupported && ( "withCredentials" in =
xhrSupported );=0A=
xhrSupported =3D jQuery.support.ajax =3D !!xhrSupported;=0A=
=0A=
// Create transport if the browser can provide an xhr=0A=
if ( xhrSupported ) {=0A=
=0A=
	jQuery.ajaxTransport(function( s ) {=0A=
		// Cross domain only allowed if supported through XMLHttpRequest=0A=
		if ( !s.crossDomain || jQuery.support.cors ) {=0A=
=0A=
			var callback;=0A=
=0A=
			return {=0A=
				send: function( headers, complete ) {=0A=
=0A=
					// Get a new xhr=0A=
					var handle, i,=0A=
						xhr =3D s.xhr();=0A=
=0A=
					// Open the socket=0A=
					// Passing null username, generates a login popup on Opera (#2865)=0A=
					if ( s.username ) {=0A=
						xhr.open( s.type, s.url, s.async, s.username, s.password );=0A=
					} else {=0A=
						xhr.open( s.type, s.url, s.async );=0A=
					}=0A=
=0A=
					// Apply custom fields if provided=0A=
					if ( s.xhrFields ) {=0A=
						for ( i in s.xhrFields ) {=0A=
							xhr[ i ] =3D s.xhrFields[ i ];=0A=
						}=0A=
					}=0A=
=0A=
					// Override mime type if needed=0A=
					if ( s.mimeType && xhr.overrideMimeType ) {=0A=
						xhr.overrideMimeType( s.mimeType );=0A=
					}=0A=
=0A=
					// X-Requested-With header=0A=
					// For cross-domain requests, seeing as conditions for a preflight =
are=0A=
					// akin to a jigsaw puzzle, we simply never set it to be sure.=0A=
					// (it can always be set on a per-request basis or even using =
ajaxSetup)=0A=
					// For same-domain requests, won't change header if already =
provided.=0A=
					if ( !s.crossDomain && !headers["X-Requested-With"] ) {=0A=
						headers["X-Requested-With"] =3D "XMLHttpRequest";=0A=
					}=0A=
=0A=
					// Need an extra try/catch for cross domain requests in Firefox 3=0A=
					try {=0A=
						for ( i in headers ) {=0A=
							xhr.setRequestHeader( i, headers[ i ] );=0A=
						}=0A=
					} catch( err ) {}=0A=
=0A=
					// Do send the request=0A=
					// This may raise an exception which is actually=0A=
					// handled in jQuery.ajax (so no try/catch here)=0A=
					xhr.send( ( s.hasContent && s.data ) || null );=0A=
=0A=
					// Listener=0A=
					callback =3D function( _, isAbort ) {=0A=
						var status, responseHeaders, statusText, responses;=0A=
=0A=
						// Firefox throws exceptions when accessing properties=0A=
						// of an xhr when a network error occurred=0A=
						// =
http://helpful.knobs-dials.com/index.php/Component_returned_failure_code:=
_0x80040111_(NS_ERROR_NOT_AVAILABLE)=0A=
						try {=0A=
=0A=
							// Was never called and is aborted or complete=0A=
							if ( callback && ( isAbort || xhr.readyState =3D=3D=3D 4 ) ) {=0A=
=0A=
								// Only called once=0A=
								callback =3D undefined;=0A=
=0A=
								// Do not keep as active anymore=0A=
								if ( handle ) {=0A=
									xhr.onreadystatechange =3D jQuery.noop;=0A=
									if ( xhrOnUnloadAbort ) {=0A=
										delete xhrCallbacks[ handle ];=0A=
									}=0A=
								}=0A=
=0A=
								// If it's an abort=0A=
								if ( isAbort ) {=0A=
									// Abort it manually if needed=0A=
									if ( xhr.readyState !=3D=3D 4 ) {=0A=
										xhr.abort();=0A=
									}=0A=
								} else {=0A=
									responses =3D {};=0A=
									status =3D xhr.status;=0A=
									responseHeaders =3D xhr.getAllResponseHeaders();=0A=
=0A=
									// When requesting binary data, IE6-9 will throw an exception=0A=
									// on any attempt to access responseText (#11426)=0A=
									if ( typeof xhr.responseText =3D=3D=3D "string" ) {=0A=
										responses.text =3D xhr.responseText;=0A=
									}=0A=
=0A=
									// Firefox throws an exception when accessing=0A=
									// statusText for faulty cross-domain requests=0A=
									try {=0A=
										statusText =3D xhr.statusText;=0A=
									} catch( e ) {=0A=
										// We normalize with Webkit giving an empty statusText=0A=
										statusText =3D "";=0A=
									}=0A=
=0A=
									// Filter status for non standard behaviors=0A=
=0A=
									// If the request is local and we have data: assume a success=0A=
									// (success with no data won't get notified, that's the best we=0A=
									// can do given current implementations)=0A=
									if ( !status && s.isLocal && !s.crossDomain ) {=0A=
										status =3D responses.text ? 200 : 404;=0A=
									// IE - #1450: sometimes returns 1223 when it should be 204=0A=
									} else if ( status =3D=3D=3D 1223 ) {=0A=
										status =3D 204;=0A=
									}=0A=
								}=0A=
							}=0A=
						} catch( firefoxAccessException ) {=0A=
							if ( !isAbort ) {=0A=
								complete( -1, firefoxAccessException );=0A=
							}=0A=
						}=0A=
=0A=
						// Call complete if needed=0A=
						if ( responses ) {=0A=
							complete( status, statusText, responses, responseHeaders );=0A=
						}=0A=
					};=0A=
=0A=
					if ( !s.async ) {=0A=
						// if we're in sync mode we fire the callback=0A=
						callback();=0A=
					} else if ( xhr.readyState =3D=3D=3D 4 ) {=0A=
						// (IE6 & IE7) if it's in cache and has been=0A=
						// retrieved directly we need to fire the callback=0A=
						setTimeout( callback );=0A=
					} else {=0A=
						handle =3D ++xhrId;=0A=
						if ( xhrOnUnloadAbort ) {=0A=
							// Create the active xhrs callbacks list if needed=0A=
							// and attach the unload handler=0A=
							if ( !xhrCallbacks ) {=0A=
								xhrCallbacks =3D {};=0A=
								jQuery( window ).unload( xhrOnUnloadAbort );=0A=
							}=0A=
							// Add to list of active xhrs callbacks=0A=
							xhrCallbacks[ handle ] =3D callback;=0A=
						}=0A=
						xhr.onreadystatechange =3D callback;=0A=
					}=0A=
				},=0A=
=0A=
				abort: function() {=0A=
					if ( callback ) {=0A=
						callback( undefined, true );=0A=
					}=0A=
				}=0A=
			};=0A=
		}=0A=
	});=0A=
}=0A=
var fxNow, timerId,=0A=
	rfxtypes =3D /^(?:toggle|show|hide)$/,=0A=
	rfxnum =3D new RegExp( "^(?:([+-])=3D|)(" + core_pnum + ")([a-z%]*)$", =
"i" ),=0A=
	rrun =3D /queueHooks$/,=0A=
	animationPrefilters =3D [ defaultPrefilter ],=0A=
	tweeners =3D {=0A=
		"*": [function( prop, value ) {=0A=
			var end, unit,=0A=
				tween =3D this.createTween( prop, value ),=0A=
				parts =3D rfxnum.exec( value ),=0A=
				target =3D tween.cur(),=0A=
				start =3D +target || 0,=0A=
				scale =3D 1,=0A=
				maxIterations =3D 20;=0A=
=0A=
			if ( parts ) {=0A=
				end =3D +parts[2];=0A=
				unit =3D parts[3] || ( jQuery.cssNumber[ prop ] ? "" : "px" );=0A=
=0A=
				// We need to compute starting value=0A=
				if ( unit !=3D=3D "px" && start ) {=0A=
					// Iteratively approximate from a nonzero starting point=0A=
					// Prefer the current property, because this process will be =
trivial if it uses the same units=0A=
					// Fallback to end or a simple constant=0A=
					start =3D jQuery.css( tween.elem, prop, true ) || end || 1;=0A=
=0A=
					do {=0A=
						// If previous iteration zeroed out, double until we get =
*something*=0A=
						// Use a string for doubling factor so we don't accidentally see =
scale as unchanged below=0A=
						scale =3D scale || ".5";=0A=
=0A=
						// Adjust and apply=0A=
						start =3D start / scale;=0A=
						jQuery.style( tween.elem, prop, start + unit );=0A=
=0A=
					// Update scale, tolerating zero or NaN from tween.cur()=0A=
					// And breaking the loop if scale is unchanged or perfect, or if =
we've just had enough=0A=
					} while ( scale !=3D=3D (scale =3D tween.cur() / target) && scale =
!=3D=3D 1 && --maxIterations );=0A=
				}=0A=
=0A=
				tween.unit =3D unit;=0A=
				tween.start =3D start;=0A=
				// If a +=3D/-=3D token was provided, we're doing a relative =
animation=0A=
				tween.end =3D parts[1] ? start + ( parts[1] + 1 ) * end : end;=0A=
			}=0A=
			return tween;=0A=
		}]=0A=
	};=0A=
=0A=
// Animations created synchronously will run synchronously=0A=
function createFxNow() {=0A=
	setTimeout(function() {=0A=
		fxNow =3D undefined;=0A=
	});=0A=
	return ( fxNow =3D jQuery.now() );=0A=
}=0A=
=0A=
function createTweens( animation, props ) {=0A=
	jQuery.each( props, function( prop, value ) {=0A=
		var collection =3D ( tweeners[ prop ] || [] ).concat( tweeners[ "*" ] =
),=0A=
			index =3D 0,=0A=
			length =3D collection.length;=0A=
		for ( ; index < length; index++ ) {=0A=
			if ( collection[ index ].call( animation, prop, value ) ) {=0A=
=0A=
				// we're done with this property=0A=
				return;=0A=
			}=0A=
		}=0A=
	});=0A=
}=0A=
=0A=
function Animation( elem, properties, options ) {=0A=
	var result,=0A=
		stopped,=0A=
		index =3D 0,=0A=
		length =3D animationPrefilters.length,=0A=
		deferred =3D jQuery.Deferred().always( function() {=0A=
			// don't match elem in the :animated selector=0A=
			delete tick.elem;=0A=
		}),=0A=
		tick =3D function() {=0A=
			if ( stopped ) {=0A=
				return false;=0A=
			}=0A=
			var currentTime =3D fxNow || createFxNow(),=0A=
				remaining =3D Math.max( 0, animation.startTime + animation.duration =
- currentTime ),=0A=
				// archaic crash bug won't allow us to use 1 - ( 0.5 || 0 ) (#12497)=0A=
				temp =3D remaining / animation.duration || 0,=0A=
				percent =3D 1 - temp,=0A=
				index =3D 0,=0A=
				length =3D animation.tweens.length;=0A=
=0A=
			for ( ; index < length ; index++ ) {=0A=
				animation.tweens[ index ].run( percent );=0A=
			}=0A=
=0A=
			deferred.notifyWith( elem, [ animation, percent, remaining ]);=0A=
=0A=
			if ( percent < 1 && length ) {=0A=
				return remaining;=0A=
			} else {=0A=
				deferred.resolveWith( elem, [ animation ] );=0A=
				return false;=0A=
			}=0A=
		},=0A=
		animation =3D deferred.promise({=0A=
			elem: elem,=0A=
			props: jQuery.extend( {}, properties ),=0A=
			opts: jQuery.extend( true, { specialEasing: {} }, options ),=0A=
			originalProperties: properties,=0A=
			originalOptions: options,=0A=
			startTime: fxNow || createFxNow(),=0A=
			duration: options.duration,=0A=
			tweens: [],=0A=
			createTween: function( prop, end ) {=0A=
				var tween =3D jQuery.Tween( elem, animation.opts, prop, end,=0A=
						animation.opts.specialEasing[ prop ] || animation.opts.easing );=0A=
				animation.tweens.push( tween );=0A=
				return tween;=0A=
			},=0A=
			stop: function( gotoEnd ) {=0A=
				var index =3D 0,=0A=
					// if we are going to the end, we want to run all the tweens=0A=
					// otherwise we skip this part=0A=
					length =3D gotoEnd ? animation.tweens.length : 0;=0A=
				if ( stopped ) {=0A=
					return this;=0A=
				}=0A=
				stopped =3D true;=0A=
				for ( ; index < length ; index++ ) {=0A=
					animation.tweens[ index ].run( 1 );=0A=
				}=0A=
=0A=
				// resolve when we played the last frame=0A=
				// otherwise, reject=0A=
				if ( gotoEnd ) {=0A=
					deferred.resolveWith( elem, [ animation, gotoEnd ] );=0A=
				} else {=0A=
					deferred.rejectWith( elem, [ animation, gotoEnd ] );=0A=
				}=0A=
				return this;=0A=
			}=0A=
		}),=0A=
		props =3D animation.props;=0A=
=0A=
	propFilter( props, animation.opts.specialEasing );=0A=
=0A=
	for ( ; index < length ; index++ ) {=0A=
		result =3D animationPrefilters[ index ].call( animation, elem, props, =
animation.opts );=0A=
		if ( result ) {=0A=
			return result;=0A=
		}=0A=
	}=0A=
=0A=
	createTweens( animation, props );=0A=
=0A=
	if ( jQuery.isFunction( animation.opts.start ) ) {=0A=
		animation.opts.start.call( elem, animation );=0A=
	}=0A=
=0A=
	jQuery.fx.timer(=0A=
		jQuery.extend( tick, {=0A=
			elem: elem,=0A=
			anim: animation,=0A=
			queue: animation.opts.queue=0A=
		})=0A=
	);=0A=
=0A=
	// attach callbacks from options=0A=
	return animation.progress( animation.opts.progress )=0A=
		.done( animation.opts.done, animation.opts.complete )=0A=
		.fail( animation.opts.fail )=0A=
		.always( animation.opts.always );=0A=
}=0A=
=0A=
function propFilter( props, specialEasing ) {=0A=
	var value, name, index, easing, hooks;=0A=
=0A=
	// camelCase, specialEasing and expand cssHook pass=0A=
	for ( index in props ) {=0A=
		name =3D jQuery.camelCase( index );=0A=
		easing =3D specialEasing[ name ];=0A=
		value =3D props[ index ];=0A=
		if ( jQuery.isArray( value ) ) {=0A=
			easing =3D value[ 1 ];=0A=
			value =3D props[ index ] =3D value[ 0 ];=0A=
		}=0A=
=0A=
		if ( index !=3D=3D name ) {=0A=
			props[ name ] =3D value;=0A=
			delete props[ index ];=0A=
		}=0A=
=0A=
		hooks =3D jQuery.cssHooks[ name ];=0A=
		if ( hooks && "expand" in hooks ) {=0A=
			value =3D hooks.expand( value );=0A=
			delete props[ name ];=0A=
=0A=
			// not quite $.extend, this wont overwrite keys already present.=0A=
			// also - reusing 'index' from above because we have the correct =
"name"=0A=
			for ( index in value ) {=0A=
				if ( !( index in props ) ) {=0A=
					props[ index ] =3D value[ index ];=0A=
					specialEasing[ index ] =3D easing;=0A=
				}=0A=
			}=0A=
		} else {=0A=
			specialEasing[ name ] =3D easing;=0A=
		}=0A=
	}=0A=
}=0A=
=0A=
jQuery.Animation =3D jQuery.extend( Animation, {=0A=
=0A=
	tweener: function( props, callback ) {=0A=
		if ( jQuery.isFunction( props ) ) {=0A=
			callback =3D props;=0A=
			props =3D [ "*" ];=0A=
		} else {=0A=
			props =3D props.split(" ");=0A=
		}=0A=
=0A=
		var prop,=0A=
			index =3D 0,=0A=
			length =3D props.length;=0A=
=0A=
		for ( ; index < length ; index++ ) {=0A=
			prop =3D props[ index ];=0A=
			tweeners[ prop ] =3D tweeners[ prop ] || [];=0A=
			tweeners[ prop ].unshift( callback );=0A=
		}=0A=
	},=0A=
=0A=
	prefilter: function( callback, prepend ) {=0A=
		if ( prepend ) {=0A=
			animationPrefilters.unshift( callback );=0A=
		} else {=0A=
			animationPrefilters.push( callback );=0A=
		}=0A=
	}=0A=
});=0A=
=0A=
function defaultPrefilter( elem, props, opts ) {=0A=
	/*jshint validthis:true */=0A=
	var prop, index, length,=0A=
		value, dataShow, toggle,=0A=
		tween, hooks, oldfire,=0A=
		anim =3D this,=0A=
		style =3D elem.style,=0A=
		orig =3D {},=0A=
		handled =3D [],=0A=
		hidden =3D elem.nodeType && isHidden( elem );=0A=
=0A=
	// handle queue: false promises=0A=
	if ( !opts.queue ) {=0A=
		hooks =3D jQuery._queueHooks( elem, "fx" );=0A=
		if ( hooks.unqueued =3D=3D null ) {=0A=
			hooks.unqueued =3D 0;=0A=
			oldfire =3D hooks.empty.fire;=0A=
			hooks.empty.fire =3D function() {=0A=
				if ( !hooks.unqueued ) {=0A=
					oldfire();=0A=
				}=0A=
			};=0A=
		}=0A=
		hooks.unqueued++;=0A=
=0A=
		anim.always(function() {=0A=
			// doing this makes sure that the complete handler will be called=0A=
			// before this completes=0A=
			anim.always(function() {=0A=
				hooks.unqueued--;=0A=
				if ( !jQuery.queue( elem, "fx" ).length ) {=0A=
					hooks.empty.fire();=0A=
				}=0A=
			});=0A=
		});=0A=
	}=0A=
=0A=
	// height/width overflow pass=0A=
	if ( elem.nodeType =3D=3D=3D 1 && ( "height" in props || "width" in =
props ) ) {=0A=
		// Make sure that nothing sneaks out=0A=
		// Record all 3 overflow attributes because IE does not=0A=
		// change the overflow attribute when overflowX and=0A=
		// overflowY are set to the same value=0A=
		opts.overflow =3D [ style.overflow, style.overflowX, style.overflowY ];=0A=
=0A=
		// Set display property to inline-block for height/width=0A=
		// animations on inline elements that are having width/height animated=0A=
		if ( jQuery.css( elem, "display" ) =3D=3D=3D "inline" &&=0A=
				jQuery.css( elem, "float" ) =3D=3D=3D "none" ) {=0A=
=0A=
			// inline-level elements accept inline-block;=0A=
			// block-level elements need to be inline with layout=0A=
			if ( !jQuery.support.inlineBlockNeedsLayout || css_defaultDisplay( =
elem.nodeName ) =3D=3D=3D "inline" ) {=0A=
				style.display =3D "inline-block";=0A=
=0A=
			} else {=0A=
				style.zoom =3D 1;=0A=
			}=0A=
		}=0A=
	}=0A=
=0A=
	if ( opts.overflow ) {=0A=
		style.overflow =3D "hidden";=0A=
		if ( !jQuery.support.shrinkWrapBlocks ) {=0A=
			anim.always(function() {=0A=
				style.overflow =3D opts.overflow[ 0 ];=0A=
				style.overflowX =3D opts.overflow[ 1 ];=0A=
				style.overflowY =3D opts.overflow[ 2 ];=0A=
			});=0A=
		}=0A=
	}=0A=
=0A=
=0A=
	// show/hide pass=0A=
	for ( index in props ) {=0A=
		value =3D props[ index ];=0A=
		if ( rfxtypes.exec( value ) ) {=0A=
			delete props[ index ];=0A=
			toggle =3D toggle || value =3D=3D=3D "toggle";=0A=
			if ( value =3D=3D=3D ( hidden ? "hide" : "show" ) ) {=0A=
				continue;=0A=
			}=0A=
			handled.push( index );=0A=
		}=0A=
	}=0A=
=0A=
	length =3D handled.length;=0A=
	if ( length ) {=0A=
		dataShow =3D jQuery._data( elem, "fxshow" ) || jQuery._data( elem, =
"fxshow", {} );=0A=
		if ( "hidden" in dataShow ) {=0A=
			hidden =3D dataShow.hidden;=0A=
		}=0A=
=0A=
		// store state if its toggle - enables .stop().toggle() to "reverse"=0A=
		if ( toggle ) {=0A=
			dataShow.hidden =3D !hidden;=0A=
		}=0A=
		if ( hidden ) {=0A=
			jQuery( elem ).show();=0A=
		} else {=0A=
			anim.done(function() {=0A=
				jQuery( elem ).hide();=0A=
			});=0A=
		}=0A=
		anim.done(function() {=0A=
			var prop;=0A=
			jQuery._removeData( elem, "fxshow" );=0A=
			for ( prop in orig ) {=0A=
				jQuery.style( elem, prop, orig[ prop ] );=0A=
			}=0A=
		});=0A=
		for ( index =3D 0 ; index < length ; index++ ) {=0A=
			prop =3D handled[ index ];=0A=
			tween =3D anim.createTween( prop, hidden ? dataShow[ prop ] : 0 );=0A=
			orig[ prop ] =3D dataShow[ prop ] || jQuery.style( elem, prop );=0A=
=0A=
			if ( !( prop in dataShow ) ) {=0A=
				dataShow[ prop ] =3D tween.start;=0A=
				if ( hidden ) {=0A=
					tween.end =3D tween.start;=0A=
					tween.start =3D prop =3D=3D=3D "width" || prop =3D=3D=3D "height" ? =
1 : 0;=0A=
				}=0A=
			}=0A=
		}=0A=
	}=0A=
}=0A=
=0A=
function Tween( elem, options, prop, end, easing ) {=0A=
	return new Tween.prototype.init( elem, options, prop, end, easing );=0A=
}=0A=
jQuery.Tween =3D Tween;=0A=
=0A=
Tween.prototype =3D {=0A=
	constructor: Tween,=0A=
	init: function( elem, options, prop, end, easing, unit ) {=0A=
		this.elem =3D elem;=0A=
		this.prop =3D prop;=0A=
		this.easing =3D easing || "swing";=0A=
		this.options =3D options;=0A=
		this.start =3D this.now =3D this.cur();=0A=
		this.end =3D end;=0A=
		this.unit =3D unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );=0A=
	},=0A=
	cur: function() {=0A=
		var hooks =3D Tween.propHooks[ this.prop ];=0A=
=0A=
		return hooks && hooks.get ?=0A=
			hooks.get( this ) :=0A=
			Tween.propHooks._default.get( this );=0A=
	},=0A=
	run: function( percent ) {=0A=
		var eased,=0A=
			hooks =3D Tween.propHooks[ this.prop ];=0A=
=0A=
		if ( this.options.duration ) {=0A=
			this.pos =3D eased =3D jQuery.easing[ this.easing ](=0A=
				percent, this.options.duration * percent, 0, 1, this.options.duration=0A=
			);=0A=
		} else {=0A=
			this.pos =3D eased =3D percent;=0A=
		}=0A=
		this.now =3D ( this.end - this.start ) * eased + this.start;=0A=
=0A=
		if ( this.options.step ) {=0A=
			this.options.step.call( this.elem, this.now, this );=0A=
		}=0A=
=0A=
		if ( hooks && hooks.set ) {=0A=
			hooks.set( this );=0A=
		} else {=0A=
			Tween.propHooks._default.set( this );=0A=
		}=0A=
		return this;=0A=
	}=0A=
};=0A=
=0A=
Tween.prototype.init.prototype =3D Tween.prototype;=0A=
=0A=
Tween.propHooks =3D {=0A=
	_default: {=0A=
		get: function( tween ) {=0A=
			var result;=0A=
=0A=
			if ( tween.elem[ tween.prop ] !=3D null &&=0A=
				(!tween.elem.style || tween.elem.style[ tween.prop ] =3D=3D null) ) {=0A=
				return tween.elem[ tween.prop ];=0A=
			}=0A=
=0A=
			// passing an empty string as a 3rd parameter to .css will =
automatically=0A=
			// attempt a parseFloat and fallback to a string if the parse fails=0A=
			// so, simple values such as "10px" are parsed to Float.=0A=
			// complex values such as "rotate(1rad)" are returned as is.=0A=
			result =3D jQuery.css( tween.elem, tween.prop, "" );=0A=
			// Empty strings, null, undefined and "auto" are converted to 0.=0A=
			return !result || result =3D=3D=3D "auto" ? 0 : result;=0A=
		},=0A=
		set: function( tween ) {=0A=
			// use step hook for back compat - use cssHook if its there - use =
.style if its=0A=
			// available and use plain properties where available=0A=
			if ( jQuery.fx.step[ tween.prop ] ) {=0A=
				jQuery.fx.step[ tween.prop ]( tween );=0A=
			} else if ( tween.elem.style && ( tween.elem.style[ jQuery.cssProps[ =
tween.prop ] ] !=3D null || jQuery.cssHooks[ tween.prop ] ) ) {=0A=
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );=0A=
			} else {=0A=
				tween.elem[ tween.prop ] =3D tween.now;=0A=
			}=0A=
		}=0A=
	}=0A=
};=0A=
=0A=
// Remove in 2.0 - this supports IE8's panic based approach=0A=
// to setting things on disconnected nodes=0A=
=0A=
Tween.propHooks.scrollTop =3D Tween.propHooks.scrollLeft =3D {=0A=
	set: function( tween ) {=0A=
		if ( tween.elem.nodeType && tween.elem.parentNode ) {=0A=
			tween.elem[ tween.prop ] =3D tween.now;=0A=
		}=0A=
	}=0A=
};=0A=
=0A=
jQuery.each([ "toggle", "show", "hide" ], function( i, name ) {=0A=
	var cssFn =3D jQuery.fn[ name ];=0A=
	jQuery.fn[ name ] =3D function( speed, easing, callback ) {=0A=
		return speed =3D=3D null || typeof speed =3D=3D=3D "boolean" ?=0A=
			cssFn.apply( this, arguments ) :=0A=
			this.animate( genFx( name, true ), speed, easing, callback );=0A=
	};=0A=
});=0A=
=0A=
jQuery.fn.extend({=0A=
	fadeTo: function( speed, to, easing, callback ) {=0A=
=0A=
		// show any hidden elements after setting opacity to 0=0A=
		return this.filter( isHidden ).css( "opacity", 0 ).show()=0A=
=0A=
			// animate to the value specified=0A=
			.end().animate({ opacity: to }, speed, easing, callback );=0A=
	},=0A=
	animate: function( prop, speed, easing, callback ) {=0A=
		var empty =3D jQuery.isEmptyObject( prop ),=0A=
			optall =3D jQuery.speed( speed, easing, callback ),=0A=
			doAnimation =3D function() {=0A=
				// Operate on a copy of prop so per-property easing won't be lost=0A=
				var anim =3D Animation( this, jQuery.extend( {}, prop ), optall );=0A=
				doAnimation.finish =3D function() {=0A=
					anim.stop( true );=0A=
				};=0A=
				// Empty animations, or finishing resolves immediately=0A=
				if ( empty || jQuery._data( this, "finish" ) ) {=0A=
					anim.stop( true );=0A=
				}=0A=
			};=0A=
			doAnimation.finish =3D doAnimation;=0A=
=0A=
		return empty || optall.queue =3D=3D=3D false ?=0A=
			this.each( doAnimation ) :=0A=
			this.queue( optall.queue, doAnimation );=0A=
	},=0A=
	stop: function( type, clearQueue, gotoEnd ) {=0A=
		var stopQueue =3D function( hooks ) {=0A=
			var stop =3D hooks.stop;=0A=
			delete hooks.stop;=0A=
			stop( gotoEnd );=0A=
		};=0A=
=0A=
		if ( typeof type !=3D=3D "string" ) {=0A=
			gotoEnd =3D clearQueue;=0A=
			clearQueue =3D type;=0A=
			type =3D undefined;=0A=
		}=0A=
		if ( clearQueue && type !=3D=3D false ) {=0A=
			this.queue( type || "fx", [] );=0A=
		}=0A=
=0A=
		return this.each(function() {=0A=
			var dequeue =3D true,=0A=
				index =3D type !=3D null && type + "queueHooks",=0A=
				timers =3D jQuery.timers,=0A=
				data =3D jQuery._data( this );=0A=
=0A=
			if ( index ) {=0A=
				if ( data[ index ] && data[ index ].stop ) {=0A=
					stopQueue( data[ index ] );=0A=
				}=0A=
			} else {=0A=
				for ( index in data ) {=0A=
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {=0A=
						stopQueue( data[ index ] );=0A=
					}=0A=
				}=0A=
			}=0A=
=0A=
			for ( index =3D timers.length; index--; ) {=0A=
				if ( timers[ index ].elem =3D=3D=3D this && (type =3D=3D null || =
timers[ index ].queue =3D=3D=3D type) ) {=0A=
					timers[ index ].anim.stop( gotoEnd );=0A=
					dequeue =3D false;=0A=
					timers.splice( index, 1 );=0A=
				}=0A=
			}=0A=
=0A=
			// start the next in the queue if the last step wasn't forced=0A=
			// timers currently will call their complete callbacks, which will =
dequeue=0A=
			// but only if they were gotoEnd=0A=
			if ( dequeue || !gotoEnd ) {=0A=
				jQuery.dequeue( this, type );=0A=
			}=0A=
		});=0A=
	},=0A=
	finish: function( type ) {=0A=
		if ( type !=3D=3D false ) {=0A=
			type =3D type || "fx";=0A=
		}=0A=
		return this.each(function() {=0A=
			var index,=0A=
				data =3D jQuery._data( this ),=0A=
				queue =3D data[ type + "queue" ],=0A=
				hooks =3D data[ type + "queueHooks" ],=0A=
				timers =3D jQuery.timers,=0A=
				length =3D queue ? queue.length : 0;=0A=
=0A=
			// enable finishing flag on private data=0A=
			data.finish =3D true;=0A=
=0A=
			// empty the queue first=0A=
			jQuery.queue( this, type, [] );=0A=
=0A=
			if ( hooks && hooks.cur && hooks.cur.finish ) {=0A=
				hooks.cur.finish.call( this );=0A=
			}=0A=
=0A=
			// look for any active animations, and finish them=0A=
			for ( index =3D timers.length; index--; ) {=0A=
				if ( timers[ index ].elem =3D=3D=3D this && timers[ index ].queue =
=3D=3D=3D type ) {=0A=
					timers[ index ].anim.stop( true );=0A=
					timers.splice( index, 1 );=0A=
				}=0A=
			}=0A=
=0A=
			// look for any animations in the old queue and finish them=0A=
			for ( index =3D 0; index < length; index++ ) {=0A=
				if ( queue[ index ] && queue[ index ].finish ) {=0A=
					queue[ index ].finish.call( this );=0A=
				}=0A=
			}=0A=
=0A=
			// turn off finishing flag=0A=
			delete data.finish;=0A=
		});=0A=
	}=0A=
});=0A=
=0A=
// Generate parameters to create a standard animation=0A=
function genFx( type, includeWidth ) {=0A=
	var which,=0A=
		attrs =3D { height: type },=0A=
		i =3D 0;=0A=
=0A=
	// if we include width, step value is 1 to do all cssExpand values,=0A=
	// if we don't include width, step value is 2 to skip over Left and =
Right=0A=
	includeWidth =3D includeWidth? 1 : 0;=0A=
	for( ; i < 4 ; i +=3D 2 - includeWidth ) {=0A=
		which =3D cssExpand[ i ];=0A=
		attrs[ "margin" + which ] =3D attrs[ "padding" + which ] =3D type;=0A=
	}=0A=
=0A=
	if ( includeWidth ) {=0A=
		attrs.opacity =3D attrs.width =3D type;=0A=
	}=0A=
=0A=
	return attrs;=0A=
}=0A=
=0A=
// Generate shortcuts for custom animations=0A=
jQuery.each({=0A=
	slideDown: genFx("show"),=0A=
	slideUp: genFx("hide"),=0A=
	slideToggle: genFx("toggle"),=0A=
	fadeIn: { opacity: "show" },=0A=
	fadeOut: { opacity: "hide" },=0A=
	fadeToggle: { opacity: "toggle" }=0A=
}, function( name, props ) {=0A=
	jQuery.fn[ name ] =3D function( speed, easing, callback ) {=0A=
		return this.animate( props, speed, easing, callback );=0A=
	};=0A=
});=0A=
=0A=
jQuery.speed =3D function( speed, easing, fn ) {=0A=
	var opt =3D speed && typeof speed =3D=3D=3D "object" ? jQuery.extend( =
{}, speed ) : {=0A=
		complete: fn || !fn && easing ||=0A=
			jQuery.isFunction( speed ) && speed,=0A=
		duration: speed,=0A=
		easing: fn && easing || easing && !jQuery.isFunction( easing ) && =
easing=0A=
	};=0A=
=0A=
	opt.duration =3D jQuery.fx.off ? 0 : typeof opt.duration =3D=3D=3D =
"number" ? opt.duration :=0A=
		opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : =
jQuery.fx.speeds._default;=0A=
=0A=
	// normalize opt.queue - true/undefined/null -> "fx"=0A=
	if ( opt.queue =3D=3D null || opt.queue =3D=3D=3D true ) {=0A=
		opt.queue =3D "fx";=0A=
	}=0A=
=0A=
	// Queueing=0A=
	opt.old =3D opt.complete;=0A=
=0A=
	opt.complete =3D function() {=0A=
		if ( jQuery.isFunction( opt.old ) ) {=0A=
			opt.old.call( this );=0A=
		}=0A=
=0A=
		if ( opt.queue ) {=0A=
			jQuery.dequeue( this, opt.queue );=0A=
		}=0A=
	};=0A=
=0A=
	return opt;=0A=
};=0A=
=0A=
jQuery.easing =3D {=0A=
	linear: function( p ) {=0A=
		return p;=0A=
	},=0A=
	swing: function( p ) {=0A=
		return 0.5 - Math.cos( p*Math.PI ) / 2;=0A=
	}=0A=
};=0A=
=0A=
jQuery.timers =3D [];=0A=
jQuery.fx =3D Tween.prototype.init;=0A=
jQuery.fx.tick =3D function() {=0A=
	var timer,=0A=
		timers =3D jQuery.timers,=0A=
		i =3D 0;=0A=
=0A=
	fxNow =3D jQuery.now();=0A=
=0A=
	for ( ; i < timers.length; i++ ) {=0A=
		timer =3D timers[ i ];=0A=
		// Checks the timer has not already been removed=0A=
		if ( !timer() && timers[ i ] =3D=3D=3D timer ) {=0A=
			timers.splice( i--, 1 );=0A=
		}=0A=
	}=0A=
=0A=
	if ( !timers.length ) {=0A=
		jQuery.fx.stop();=0A=
	}=0A=
	fxNow =3D undefined;=0A=
};=0A=
=0A=
jQuery.fx.timer =3D function( timer ) {=0A=
	if ( timer() && jQuery.timers.push( timer ) ) {=0A=
		jQuery.fx.start();=0A=
	}=0A=
};=0A=
=0A=
jQuery.fx.interval =3D 13;=0A=
=0A=
jQuery.fx.start =3D function() {=0A=
	if ( !timerId ) {=0A=
		timerId =3D setInterval( jQuery.fx.tick, jQuery.fx.interval );=0A=
	}=0A=
};=0A=
=0A=
jQuery.fx.stop =3D function() {=0A=
	clearInterval( timerId );=0A=
	timerId =3D null;=0A=
};=0A=
=0A=
jQuery.fx.speeds =3D {=0A=
	slow: 600,=0A=
	fast: 200,=0A=
	// Default speed=0A=
	_default: 400=0A=
};=0A=
=0A=
// Back Compat <1.8 extension point=0A=
jQuery.fx.step =3D {};=0A=
=0A=
if ( jQuery.expr && jQuery.expr.filters ) {=0A=
	jQuery.expr.filters.animated =3D function( elem ) {=0A=
		return jQuery.grep(jQuery.timers, function( fn ) {=0A=
			return elem =3D=3D=3D fn.elem;=0A=
		}).length;=0A=
	};=0A=
}=0A=
jQuery.fn.offset =3D function( options ) {=0A=
	if ( arguments.length ) {=0A=
		return options =3D=3D=3D undefined ?=0A=
			this :=0A=
			this.each(function( i ) {=0A=
				jQuery.offset.setOffset( this, options, i );=0A=
			});=0A=
	}=0A=
=0A=
	var docElem, win,=0A=
		box =3D { top: 0, left: 0 },=0A=
		elem =3D this[ 0 ],=0A=
		doc =3D elem && elem.ownerDocument;=0A=
=0A=
	if ( !doc ) {=0A=
		return;=0A=
	}=0A=
=0A=
	docElem =3D doc.documentElement;=0A=
=0A=
	// Make sure it's not a disconnected DOM node=0A=
	if ( !jQuery.contains( docElem, elem ) ) {=0A=
		return box;=0A=
	}=0A=
=0A=
	// If we don't have gBCR, just use 0,0 rather than error=0A=
	// BlackBerry 5, iOS 3 (original iPhone)=0A=
	if ( typeof elem.getBoundingClientRect !=3D=3D core_strundefined ) {=0A=
		box =3D elem.getBoundingClientRect();=0A=
	}=0A=
	win =3D getWindow( doc );=0A=
	return {=0A=
		top: box.top  + ( win.pageYOffset || docElem.scrollTop )  - ( =
docElem.clientTop  || 0 ),=0A=
		left: box.left + ( win.pageXOffset || docElem.scrollLeft ) - ( =
docElem.clientLeft || 0 )=0A=
	};=0A=
};=0A=
=0A=
jQuery.offset =3D {=0A=
=0A=
	setOffset: function( elem, options, i ) {=0A=
		var position =3D jQuery.css( elem, "position" );=0A=
=0A=
		// set position first, in-case top/left are set even on static elem=0A=
		if ( position =3D=3D=3D "static" ) {=0A=
			elem.style.position =3D "relative";=0A=
		}=0A=
=0A=
		var curElem =3D jQuery( elem ),=0A=
			curOffset =3D curElem.offset(),=0A=
			curCSSTop =3D jQuery.css( elem, "top" ),=0A=
			curCSSLeft =3D jQuery.css( elem, "left" ),=0A=
			calculatePosition =3D ( position =3D=3D=3D "absolute" || position =
=3D=3D=3D "fixed" ) && jQuery.inArray("auto", [curCSSTop, curCSSLeft]) > =
-1,=0A=
			props =3D {}, curPosition =3D {}, curTop, curLeft;=0A=
=0A=
		// need to be able to calculate position if either top or left is auto =
and position is either absolute or fixed=0A=
		if ( calculatePosition ) {=0A=
			curPosition =3D curElem.position();=0A=
			curTop =3D curPosition.top;=0A=
			curLeft =3D curPosition.left;=0A=
		} else {=0A=
			curTop =3D parseFloat( curCSSTop ) || 0;=0A=
			curLeft =3D parseFloat( curCSSLeft ) || 0;=0A=
		}=0A=
=0A=
		if ( jQuery.isFunction( options ) ) {=0A=
			options =3D options.call( elem, i, curOffset );=0A=
		}=0A=
=0A=
		if ( options.top !=3D null ) {=0A=
			props.top =3D ( options.top - curOffset.top ) + curTop;=0A=
		}=0A=
		if ( options.left !=3D null ) {=0A=
			props.left =3D ( options.left - curOffset.left ) + curLeft;=0A=
		}=0A=
=0A=
		if ( "using" in options ) {=0A=
			options.using.call( elem, props );=0A=
		} else {=0A=
			curElem.css( props );=0A=
		}=0A=
	}=0A=
};=0A=
=0A=
=0A=
jQuery.fn.extend({=0A=
=0A=
	position: function() {=0A=
		if ( !this[ 0 ] ) {=0A=
			return;=0A=
		}=0A=
=0A=
		var offsetParent, offset,=0A=
			parentOffset =3D { top: 0, left: 0 },=0A=
			elem =3D this[ 0 ];=0A=
=0A=
		// fixed elements are offset from window (parentOffset =3D {top:0, =
left: 0}, because it is it's only offset parent=0A=
		if ( jQuery.css( elem, "position" ) =3D=3D=3D "fixed" ) {=0A=
			// we assume that getBoundingClientRect is available when computed =
position is fixed=0A=
			offset =3D elem.getBoundingClientRect();=0A=
		} else {=0A=
			// Get *real* offsetParent=0A=
			offsetParent =3D this.offsetParent();=0A=
=0A=
			// Get correct offsets=0A=
			offset =3D this.offset();=0A=
			if ( !jQuery.nodeName( offsetParent[ 0 ], "html" ) ) {=0A=
				parentOffset =3D offsetParent.offset();=0A=
			}=0A=
=0A=
			// Add offsetParent borders=0A=
			parentOffset.top  +=3D jQuery.css( offsetParent[ 0 ], =
"borderTopWidth", true );=0A=
			parentOffset.left +=3D jQuery.css( offsetParent[ 0 ], =
"borderLeftWidth", true );=0A=
		}=0A=
=0A=
		// Subtract parent offsets and element margins=0A=
		// note: when an element has margin: auto the offsetLeft and marginLeft=0A=
		// are the same in Safari causing offset.left to incorrectly be 0=0A=
		return {=0A=
			top:  offset.top  - parentOffset.top - jQuery.css( elem, "marginTop", =
true ),=0A=
			left: offset.left - parentOffset.left - jQuery.css( elem, =
"marginLeft", true)=0A=
		};=0A=
	},=0A=
=0A=
	offsetParent: function() {=0A=
		return this.map(function() {=0A=
			var offsetParent =3D this.offsetParent || document.documentElement;=0A=
			while ( offsetParent && ( !jQuery.nodeName( offsetParent, "html" ) && =
jQuery.css( offsetParent, "position") =3D=3D=3D "static" ) ) {=0A=
				offsetParent =3D offsetParent.offsetParent;=0A=
			}=0A=
			return offsetParent || document.documentElement;=0A=
		});=0A=
	}=0A=
});=0A=
=0A=
=0A=
// Create scrollLeft and scrollTop methods=0A=
jQuery.each( {scrollLeft: "pageXOffset", scrollTop: "pageYOffset"}, =
function( method, prop ) {=0A=
	var top =3D /Y/.test( prop );=0A=
=0A=
	jQuery.fn[ method ] =3D function( val ) {=0A=
		return jQuery.access( this, function( elem, method, val ) {=0A=
			var win =3D getWindow( elem );=0A=
=0A=
			if ( val =3D=3D=3D undefined ) {=0A=
				return win ? (prop in win) ? win[ prop ] :=0A=
					win.document.documentElement[ method ] :=0A=
					elem[ method ];=0A=
			}=0A=
=0A=
			if ( win ) {=0A=
				win.scrollTo(=0A=
					!top ? val : jQuery( win ).scrollLeft(),=0A=
					top ? val : jQuery( win ).scrollTop()=0A=
				);=0A=
=0A=
			} else {=0A=
				elem[ method ] =3D val;=0A=
			}=0A=
		}, method, val, arguments.length, null );=0A=
	};=0A=
});=0A=
=0A=
function getWindow( elem ) {=0A=
	return jQuery.isWindow( elem ) ?=0A=
		elem :=0A=
		elem.nodeType =3D=3D=3D 9 ?=0A=
			elem.defaultView || elem.parentWindow :=0A=
			false;=0A=
}=0A=
// Create innerHeight, innerWidth, height, width, outerHeight and =
outerWidth methods=0A=
jQuery.each( { Height: "height", Width: "width" }, function( name, type =
) {=0A=
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + =
name }, function( defaultExtra, funcName ) {=0A=
		// margin is only for outerHeight, outerWidth=0A=
		jQuery.fn[ funcName ] =3D function( margin, value ) {=0A=
			var chainable =3D arguments.length && ( defaultExtra || typeof margin =
!=3D=3D "boolean" ),=0A=
				extra =3D defaultExtra || ( margin =3D=3D=3D true || value =3D=3D=3D =
true ? "margin" : "border" );=0A=
=0A=
			return jQuery.access( this, function( elem, type, value ) {=0A=
				var doc;=0A=
=0A=
				if ( jQuery.isWindow( elem ) ) {=0A=
					// As of 5/8/2012 this will yield incorrect results for Mobile =
Safari, but there=0A=
					// isn't a whole lot we can do. See pull request at this URL for =
discussion:=0A=
					// https://github.com/jquery/jquery/pull/764=0A=
					return elem.document.documentElement[ "client" + name ];=0A=
				}=0A=
=0A=
				// Get document width or height=0A=
				if ( elem.nodeType =3D=3D=3D 9 ) {=0A=
					doc =3D elem.documentElement;=0A=
=0A=
					// Either scroll[Width/Height] or offset[Width/Height] or =
client[Width/Height], whichever is greatest=0A=
					// unfortunately, this causes bug #3838 in IE6/8 only, but there is =
currently no good, small way to fix it.=0A=
					return Math.max(=0A=
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],=0A=
						elem.body[ "offset" + name ], doc[ "offset" + name ],=0A=
						doc[ "client" + name ]=0A=
					);=0A=
				}=0A=
=0A=
				return value =3D=3D=3D undefined ?=0A=
					// Get width or height on the element, requesting but not forcing =
parseFloat=0A=
					jQuery.css( elem, type, extra ) :=0A=
=0A=
					// Set width or height on the element=0A=
					jQuery.style( elem, type, value, extra );=0A=
			}, type, chainable ? margin : undefined, chainable, null );=0A=
		};=0A=
	});=0A=
});=0A=
// Limit scope pollution from any deprecated API=0A=
// (function() {=0A=
=0A=
// })();=0A=
// Expose jQuery to the global object=0A=
window.jQuery =3D window.$ =3D jQuery;=0A=
=0A=
// Expose jQuery as an AMD module, but only for AMD loaders that=0A=
// understand the issues with loading multiple versions of jQuery=0A=
// in a page that all might call define(). The loader will indicate=0A=
// they have special allowances for multiple jQuery versions by=0A=
// specifying define.amd.jQuery =3D true. Register as a named module,=0A=
// since jQuery can be concatenated with other files that may use define,=0A=
// but not use a proper concatenation script that understands anonymous=0A=
// AMD modules. A named AMD is safest and most robust way to register.=0A=
// Lowercase jquery is used because AMD module names are derived from=0A=
// file names, and jQuery is normally delivered in a lowercase file name.=0A=
// Do this after creating the global so that if an AMD module wants to =
call=0A=
// noConflict to hide this version of jQuery, it will work.=0A=
if ( typeof define =3D=3D=3D "function" && define.amd && =
define.amd.jQuery ) {=0A=
	define( "jquery", [], function () { return jQuery; } );=0A=
}=0A=
=0A=
})( window );=0A=
jQuery.noConflict();=0A=
;=0A=
/*!
 * jQuery Migrate - v1.1.1 - 2013-02-16
 * https://github.com/jquery/jquery-migrate
 * Copyright 2005, 2013 jQuery Foundation, Inc. and other contributors; =
Licensed MIT
 */
(function( jQuery, window, undefined ) {
// See http://bugs.jquery.com/ticket/13335
// "use strict";


var warnedAbout =3D {};

// List of warnings already given; public read only
jQuery.migrateWarnings =3D [];

// Set to true to prevent console output; migrateWarnings still =
maintained
// jQuery.migrateMute =3D false;

// Show a message on the console so devs know we're active
if ( !jQuery.migrateMute && window.console && console.log ) {
	console.log("JQMIGRATE: Logging is active");
}

// Set to false to disable traces that appear with warnings
if ( jQuery.migrateTrace =3D=3D=3D undefined ) {
	jQuery.migrateTrace =3D true;
}

// Forget any warnings we've already given; public
jQuery.migrateReset =3D function() {
	warnedAbout =3D {};
	jQuery.migrateWarnings.length =3D 0;
};

function migrateWarn( msg) {
	if ( !warnedAbout[ msg ] ) {
		warnedAbout[ msg ] =3D true;
		jQuery.migrateWarnings.push( msg );
		if ( window.console && console.warn && !jQuery.migrateMute ) {
			console.warn( "JQMIGRATE: " + msg );
			if ( jQuery.migrateTrace && console.trace ) {
				console.trace();
			}
		}
	}
}

function migrateWarnProp( obj, prop, value, msg ) {
	if ( Object.defineProperty ) {
		// On ES5 browsers (non-oldIE), warn if the code tries to get prop;
		// allow property to be overwritten in case some other plugin wants it
		try {
			Object.defineProperty( obj, prop, {
				configurable: true,
				enumerable: true,
				get: function() {
					migrateWarn( msg );
					return value;
				},
				set: function( newValue ) {
					migrateWarn( msg );
					value =3D newValue;
				}
			});
			return;
		} catch( err ) {
			// IE8 is a dope about Object.defineProperty, can't warn there
		}
	}

	// Non-ES5 (or broken) browser; just set the property
	jQuery._definePropertyBroken =3D true;
	obj[ prop ] =3D value;
}

if ( document.compatMode =3D=3D=3D "BackCompat" ) {
	// jQuery has never supported or tested Quirks Mode
	migrateWarn( "jQuery is not compatible with Quirks Mode" );
}


var attrFn =3D jQuery( "<input/>", { size: 1 } ).attr("size") && =
jQuery.attrFn,
	oldAttr =3D jQuery.attr,
	valueAttrGet =3D jQuery.attrHooks.value && jQuery.attrHooks.value.get =
||
		function() { return null; },
	valueAttrSet =3D jQuery.attrHooks.value && jQuery.attrHooks.value.set =
||
		function() { return undefined; },
	rnoType =3D /^(?:input|button)$/i,
	rnoAttrNodeType =3D /^[238]$/,
	rboolean =3D =
/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop=
|multiple|open|readonly|required|scoped|selected)$/i,
	ruseDefault =3D /^(?:checked|selected)$/i;

// jQuery.attrFn
migrateWarnProp( jQuery, "attrFn", attrFn || {}, "jQuery.attrFn is =
deprecated" );

jQuery.attr =3D function( elem, name, value, pass ) {
	var lowerName =3D name.toLowerCase(),
		nType =3D elem && elem.nodeType;

	if ( pass ) {
		// Since pass is used internally, we only warn for new jQuery
		// versions where there isn't a pass arg in the formal params
		if ( oldAttr.length < 4 ) {
			migrateWarn("jQuery.fn.attr( props, pass ) is deprecated");
		}
		if ( elem && !rnoAttrNodeType.test( nType ) &&
			(attrFn ? name in attrFn : jQuery.isFunction(jQuery.fn[name])) ) {
			return jQuery( elem )[ name ]( value );
		}
	}

	// Warn if user tries to set `type`, since it breaks on IE 6/7/8; by =
checking
	// for disconnected elements we don't warn on $( "<button>", { type: =
"button" } ).
	if ( name =3D=3D=3D "type" && value !=3D=3D undefined && rnoType.test( =
elem.nodeName ) && elem.parentNode ) {
		migrateWarn("Can't change the 'type' of an input or button in IE =
6/7/8");
	}

	// Restore boolHook for boolean property/attribute synchronization
	if ( !jQuery.attrHooks[ lowerName ] && rboolean.test( lowerName ) ) {
		jQuery.attrHooks[ lowerName ] =3D {
			get: function( elem, name ) {
				// Align boolean attributes with corresponding properties
				// Fall back to attribute presence where some booleans are not =
supported
				var attrNode,
					property =3D jQuery.prop( elem, name );
				return property =3D=3D=3D true || typeof property !=3D=3D "boolean" =
&&
					( attrNode =3D elem.getAttributeNode(name) ) && attrNode.nodeValue =
!=3D=3D false ?

					name.toLowerCase() :
					undefined;
			},
			set: function( elem, value, name ) {
				var propName;
				if ( value =3D=3D=3D false ) {
					// Remove boolean attributes when set to false
					jQuery.removeAttr( elem, name );
				} else {
					// value is true since we know at this point it's type boolean and =
not false
					// Set boolean attributes to the same name and set the DOM property
					propName =3D jQuery.propFix[ name ] || name;
					if ( propName in elem ) {
						// Only set the IDL specifically if it already exists on the =
element
						elem[ propName ] =3D true;
					}

					elem.setAttribute( name, name.toLowerCase() );
				}
				return name;
			}
		};

		// Warn only for attributes that can remain distinct from their =
properties post-1.9
		if ( ruseDefault.test( lowerName ) ) {
			migrateWarn( "jQuery.fn.attr('" + lowerName + "') may use property =
instead of attribute" );
		}
	}

	return oldAttr.call( jQuery, elem, name, value );
};

// attrHooks: value
jQuery.attrHooks.value =3D {
	get: function( elem, name ) {
		var nodeName =3D ( elem.nodeName || "" ).toLowerCase();
		if ( nodeName =3D=3D=3D "button" ) {
			return valueAttrGet.apply( this, arguments );
		}
		if ( nodeName !=3D=3D "input" && nodeName !=3D=3D "option" ) {
			migrateWarn("jQuery.fn.attr('value') no longer gets properties");
		}
		return name in elem ?
			elem.value :
			null;
	},
	set: function( elem, value ) {
		var nodeName =3D ( elem.nodeName || "" ).toLowerCase();
		if ( nodeName =3D=3D=3D "button" ) {
			return valueAttrSet.apply( this, arguments );
		}
		if ( nodeName !=3D=3D "input" && nodeName !=3D=3D "option" ) {
			migrateWarn("jQuery.fn.attr('value', val) no longer sets =
properties");
		}
		// Does not return so that setAttribute is also used
		elem.value =3D value;
	}
};


var matched, browser,
	oldInit =3D jQuery.fn.init,
	oldParseJSON =3D jQuery.parseJSON,
	// Note this does NOT include the #9521 XSS fix from 1.7!
	rquickExpr =3D /^(?:[^<]*(<[\w\W]+>)[^>]*|#([\w\-]*))$/;

// $(html) "looks like html" rule change
jQuery.fn.init =3D function( selector, context, rootjQuery ) {
	var match;

	if ( selector && typeof selector =3D=3D=3D "string" && =
!jQuery.isPlainObject( context ) &&
			(match =3D rquickExpr.exec( selector )) && match[1] ) {
		// This is an HTML string according to the "old" rules; is it still?
		if ( selector.charAt( 0 ) !=3D=3D "<" ) {
			migrateWarn("$(html) HTML strings must start with '<' character");
		}
		// Now process using loose rules; let pre-1.8 play too
		if ( context && context.context ) {
			// jQuery object as context; parseHTML expects a DOM object
			context =3D context.context;
		}
		if ( jQuery.parseHTML ) {
			return oldInit.call( this, jQuery.parseHTML( jQuery.trim(selector), =
context, true ),
					context, rootjQuery );
		}
	}
	return oldInit.apply( this, arguments );
};
jQuery.fn.init.prototype =3D jQuery.fn;

// Let $.parseJSON(falsy_value) return null
jQuery.parseJSON =3D function( json ) {
	if ( !json && json !=3D=3D null ) {
		migrateWarn("jQuery.parseJSON requires a valid JSON string");
		return null;
	}
	return oldParseJSON.apply( this, arguments );
};

jQuery.uaMatch =3D function( ua ) {
	ua =3D ua.toLowerCase();

	var match =3D /(chrome)[ \/]([\w.]+)/.exec( ua ) ||
		/(webkit)[ \/]([\w.]+)/.exec( ua ) ||
		/(opera)(?:.*version|)[ \/]([\w.]+)/.exec( ua ) ||
		/(msie) ([\w.]+)/.exec( ua ) ||
		ua.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec( =
ua ) ||
		[];

	return {
		browser: match[ 1 ] || "",
		version: match[ 2 ] || "0"
	};
};

// Don't clobber any existing jQuery.browser in case it's different
if ( !jQuery.browser ) {
	matched =3D jQuery.uaMatch( navigator.userAgent );
	browser =3D {};

	if ( matched.browser ) {
		browser[ matched.browser ] =3D true;
		browser.version =3D matched.version;
	}

	// Chrome is Webkit, but Webkit is also Safari.
	if ( browser.chrome ) {
		browser.webkit =3D true;
	} else if ( browser.webkit ) {
		browser.safari =3D true;
	}

	jQuery.browser =3D browser;
}

// Warn if the code tries to get jQuery.browser
migrateWarnProp( jQuery, "browser", jQuery.browser, "jQuery.browser is =
deprecated" );

jQuery.sub =3D function() {
	function jQuerySub( selector, context ) {
		return new jQuerySub.fn.init( selector, context );
	}
	jQuery.extend( true, jQuerySub, this );
	jQuerySub.superclass =3D this;
	jQuerySub.fn =3D jQuerySub.prototype =3D this();
	jQuerySub.fn.constructor =3D jQuerySub;
	jQuerySub.sub =3D this.sub;
	jQuerySub.fn.init =3D function init( selector, context ) {
		if ( context && context instanceof jQuery && !(context instanceof =
jQuerySub) ) {
			context =3D jQuerySub( context );
		}

		return jQuery.fn.init.call( this, selector, context, rootjQuerySub );
	};
	jQuerySub.fn.init.prototype =3D jQuerySub.fn;
	var rootjQuerySub =3D jQuerySub(document);
	migrateWarn( "jQuery.sub() is deprecated" );
	return jQuerySub;
};


// Ensure that $.ajax gets the new parseJSON defined in core.js
jQuery.ajaxSetup({
	converters: {
		"text json": jQuery.parseJSON
	}
});


var oldFnData =3D jQuery.fn.data;

jQuery.fn.data =3D function( name ) {
	var ret, evt,
		elem =3D this[0];

	// Handles 1.7 which has this behavior and 1.8 which doesn't
	if ( elem && name =3D=3D=3D "events" && arguments.length =3D=3D=3D 1 ) =
{
		ret =3D jQuery.data( elem, name );
		evt =3D jQuery._data( elem, name );
		if ( ( ret =3D=3D=3D undefined || ret =3D=3D=3D evt ) && evt !=3D=3D =
undefined ) {
			migrateWarn("Use of jQuery.fn.data('events') is deprecated");
			return evt;
		}
	}
	return oldFnData.apply( this, arguments );
};


var rscriptType =3D /\/(java|ecma)script/i,
	oldSelf =3D jQuery.fn.andSelf || jQuery.fn.addBack;

jQuery.fn.andSelf =3D function() {
	migrateWarn("jQuery.fn.andSelf() replaced by jQuery.fn.addBack()");
	return oldSelf.apply( this, arguments );
};

// Since jQuery.clean is used internally on older versions, we only shim =
if it's missing
if ( !jQuery.clean ) {
	jQuery.clean =3D function( elems, context, fragment, scripts ) {
		// Set context per 1.8 logic
		context =3D context || document;
		context =3D !context.nodeType && context[0] || context;
		context =3D context.ownerDocument || context;

		migrateWarn("jQuery.clean() is deprecated");

		var i, elem, handleScript, jsTags,
			ret =3D [];

		jQuery.merge( ret, jQuery.buildFragment( elems, context ).childNodes =
);

		// Complex logic lifted directly from jQuery 1.8
		if ( fragment ) {
			// Special handling of each script element
			handleScript =3D function( elem ) {
				// Check if we consider it executable
				if ( !elem.type || rscriptType.test( elem.type ) ) {
					// Detach the script and store it in the scripts array (if =
provided) or the fragment
					// Return truthy to indicate that it has been handled
					return scripts ?
						scripts.push( elem.parentNode ? elem.parentNode.removeChild( elem =
) : elem ) :
						fragment.appendChild( elem );
				}
			};

			for ( i =3D 0; (elem =3D ret[i]) !=3D null; i++ ) {
				// Check if we're done after handling an executable script
				if ( !( jQuery.nodeName( elem, "script" ) && handleScript( elem ) ) =
) {
					// Append to fragment and handle embedded scripts
					fragment.appendChild( elem );
					if ( typeof elem.getElementsByTagName !=3D=3D "undefined" ) {
						// handleScript alters the DOM, so use jQuery.merge to ensure =
snapshot iteration
						jsTags =3D jQuery.grep( jQuery.merge( [], =
elem.getElementsByTagName("script") ), handleScript );

						// Splice the scripts into ret after their former ancestor and =
advance our index beyond them
						ret.splice.apply( ret, [i + 1, 0].concat( jsTags ) );
						i +=3D jsTags.length;
					}
				}
			}
		}

		return ret;
	};
}

var eventAdd =3D jQuery.event.add,
	eventRemove =3D jQuery.event.remove,
	eventTrigger =3D jQuery.event.trigger,
	oldToggle =3D jQuery.fn.toggle,
	oldLive =3D jQuery.fn.live,
	oldDie =3D jQuery.fn.die,
	ajaxEvents =3D =
"ajaxStart|ajaxStop|ajaxSend|ajaxComplete|ajaxError|ajaxSuccess",
	rajaxEvent =3D new RegExp( "\\b(?:" + ajaxEvents + ")\\b" ),
	rhoverHack =3D /(?:^|\s)hover(\.\S+|)\b/,
	hoverHack =3D function( events ) {
		if ( typeof( events ) !=3D=3D "string" || jQuery.event.special.hover ) =
{
			return events;
		}
		if ( rhoverHack.test( events ) ) {
			migrateWarn("'hover' pseudo-event is deprecated, use 'mouseenter =
mouseleave'");
		}
		return events && events.replace( rhoverHack, "mouseenter$1 =
mouseleave$1" );
	};

// Event props removed in 1.9, put them back if needed; no practical way =
to warn them
if ( jQuery.event.props && jQuery.event.props[ 0 ] !=3D=3D "attrChange" =
) {
	jQuery.event.props.unshift( "attrChange", "attrName", "relatedNode", =
"srcElement" );
}

// Undocumented jQuery.event.handle was "deprecated" in jQuery 1.7
if ( jQuery.event.dispatch ) {
	migrateWarnProp( jQuery.event, "handle", jQuery.event.dispatch, =
"jQuery.event.handle is undocumented and deprecated" );
}

// Support for 'hover' pseudo-event and ajax event warnings
jQuery.event.add =3D function( elem, types, handler, data, selector ){
	if ( elem !=3D=3D document && rajaxEvent.test( types ) ) {
		migrateWarn( "AJAX events should be attached to document: " + types );
	}
	eventAdd.call( this, elem, hoverHack( types || "" ), handler, data, =
selector );
};
jQuery.event.remove =3D function( elem, types, handler, selector, =
mappedTypes ){
	eventRemove.call( this, elem, hoverHack( types ) || "", handler, =
selector, mappedTypes );
};

jQuery.fn.error =3D function() {
	var args =3D Array.prototype.slice.call( arguments, 0);
	migrateWarn("jQuery.fn.error() is deprecated");
	args.splice( 0, 0, "error" );
	if ( arguments.length ) {
		return this.bind.apply( this, args );
	}
	// error event should not bubble to window, although it does pre-1.7
	this.triggerHandler.apply( this, args );
	return this;
};

jQuery.fn.toggle =3D function( fn, fn2 ) {

	// Don't mess with animation or css toggles
	if ( !jQuery.isFunction( fn ) || !jQuery.isFunction( fn2 ) ) {
		return oldToggle.apply( this, arguments );
	}
	migrateWarn("jQuery.fn.toggle(handler, handler...) is deprecated");

	// Save reference to arguments for access in closure
	var args =3D arguments,
		guid =3D fn.guid || jQuery.guid++,
		i =3D 0,
		toggler =3D function( event ) {
			// Figure out which function to execute
			var lastToggle =3D ( jQuery._data( this, "lastToggle" + fn.guid ) || =
0 ) % i;
			jQuery._data( this, "lastToggle" + fn.guid, lastToggle + 1 );

			// Make sure that clicks stop
			event.preventDefault();

			// and execute the function
			return args[ lastToggle ].apply( this, arguments ) || false;
		};

	// link all the functions, so any of them can unbind this click handler
	toggler.guid =3D guid;
	while ( i < args.length ) {
		args[ i++ ].guid =3D guid;
	}

	return this.click( toggler );
};

jQuery.fn.live =3D function( types, data, fn ) {
	migrateWarn("jQuery.fn.live() is deprecated");
	if ( oldLive ) {
		return oldLive.apply( this, arguments );
	}
	jQuery( this.context ).on( types, this.selector, data, fn );
	return this;
};

jQuery.fn.die =3D function( types, fn ) {
	migrateWarn("jQuery.fn.die() is deprecated");
	if ( oldDie ) {
		return oldDie.apply( this, arguments );
	}
	jQuery( this.context ).off( types, this.selector || "**", fn );
	return this;
};

// Turn global events into document-triggered events
jQuery.event.trigger =3D function( event, data, elem, onlyHandlers  ){
	if ( !elem && !rajaxEvent.test( event ) ) {
		migrateWarn( "Global events are undocumented and deprecated" );
	}
	return eventTrigger.call( this,  event, data, elem || document, =
onlyHandlers  );
};
jQuery.each( ajaxEvents.split("|"),
	function( _, name ) {
		jQuery.event.special[ name ] =3D {
			setup: function() {
				var elem =3D this;

				// The document needs no shimming; must be !=3D=3D for oldIE
				if ( elem !=3D=3D document ) {
					jQuery.event.add( document, name + "." + jQuery.guid, function() {
						jQuery.event.trigger( name, null, elem, true );
					});
					jQuery._data( this, name, jQuery.guid++ );
				}
				return false;
			},
			teardown: function() {
				if ( this !=3D=3D document ) {
					jQuery.event.remove( document, name + "." + jQuery._data( this, =
name ) );
				}
				return false;
			}
		};
	}
);


})( jQuery, window );
;=0A=
/**=0A=
 The MIT License=0A=
=0A=
 Copyright (c) 2010 Daniel Park (http://metaweb.com, =
http://postmessage.freebaseapps.com)=0A=
=0A=
 Permission is hereby granted, free of charge, to any person obtaining a =
copy=0A=
 of this software and associated documentation files (the "Software"), =
to deal=0A=
 in the Software without restriction, including without limitation the =
rights=0A=
 to use, copy, modify, merge, publish, distribute, sublicense, and/or =
sell=0A=
 copies of the Software, and to permit persons to whom the Software is=0A=
 furnished to do so, subject to the following conditions:=0A=
=0A=
 The above copyright notice and this permission notice shall be included =
in=0A=
 all copies or substantial portions of the Software.=0A=
=0A=
 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS =
OR=0A=
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,=0A=
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL =
THE=0A=
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER=0A=
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING =
FROM,=0A=
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS =
IN=0A=
 THE SOFTWARE.=0A=
 **/=0A=
var NO_JQUERY =3D {};=0A=
(function(window, $, undefined) {=0A=
=0A=
     if (!("console" in window)) {=0A=
         var c =3D window.console =3D {};=0A=
         c.log =3D c.warn =3D c.error =3D c.debug =3D function(){};=0A=
     }=0A=
=0A=
     if ($ =3D=3D=3D NO_JQUERY) {=0A=
         // jQuery is optional=0A=
         $ =3D {=0A=
             fn: {},=0A=
             extend: function() {=0A=
                 var a =3D arguments[0];=0A=
                 for (var i=3D1,len=3Darguments.length; i<len; i++) {=0A=
                     var b =3D arguments[i];=0A=
                     for (var prop in b) {=0A=
                         a[prop] =3D b[prop];=0A=
                     }=0A=
                 }=0A=
                 return a;=0A=
             }=0A=
         };=0A=
     }=0A=
=0A=
     $.fn.pm =3D function() {=0A=
         console.log("usage: \nto send:    $.pm(options)\nto receive: =
$.pm.bind(type, fn, [origin])");=0A=
         return this;=0A=
     };=0A=
=0A=
     // send postmessage=0A=
     $.pm =3D window.pm =3D function(options) {=0A=
         pm.send(options);=0A=
     };=0A=
=0A=
     // bind postmessage handler=0A=
     $.pm.bind =3D window.pm.bind =3D function(type, fn, origin, hash, =
async_reply) {=0A=
         pm.bind(type, fn, origin, hash, async_reply =3D=3D=3D true);=0A=
     };=0A=
=0A=
     // unbind postmessage handler=0A=
     $.pm.unbind =3D window.pm.unbind =3D function(type, fn) {=0A=
         pm.unbind(type, fn);=0A=
     };=0A=
=0A=
     // default postmessage origin on bind=0A=
     $.pm.origin =3D window.pm.origin =3D null;=0A=
=0A=
     // default postmessage polling if using location hash to pass =
postmessages=0A=
     $.pm.poll =3D window.pm.poll =3D 200;=0A=
=0A=
     var pm =3D {=0A=
=0A=
         send: function(options) {=0A=
             var o =3D $.extend({}, pm.defaults, options),=0A=
             target =3D o.target;=0A=
             if (!o.target) {=0A=
                 console.warn("postmessage target window required");=0A=
                 return;=0A=
             }=0A=
             if (!o.type) {=0A=
                 console.warn("postmessage type required");=0A=
                 return;=0A=
             }=0A=
             var msg =3D {data:o.data, type:o.type};=0A=
             if (o.success) {=0A=
                 msg.callback =3D pm._callback(o.success);=0A=
             }=0A=
             if (o.error) {=0A=
                 msg.errback =3D pm._callback(o.error);=0A=
             }=0A=
             if (("postMessage" in target) && !o.hash) {=0A=
                 pm._bind();=0A=
                 target.postMessage(JSON.stringify(msg), o.origin || =
'*');=0A=
             }=0A=
             else {=0A=
                 pm.hash._bind();=0A=
                 pm.hash.send(o, msg);=0A=
             }=0A=
         },=0A=
=0A=
         bind: function(type, fn, origin, hash, async_reply) {=0A=
           pm._replyBind ( type, fn, origin, hash, async_reply );=0A=
         },=0A=
       =0A=
         _replyBind: function(type, fn, origin, hash, isCallback) {=0A=
           if (("postMessage" in window) && !hash) {=0A=
               pm._bind();=0A=
           }=0A=
           else {=0A=
               pm.hash._bind();=0A=
           }=0A=
           var l =3D pm.data("listeners.postmessage");=0A=
           if (!l) {=0A=
               l =3D {};=0A=
               pm.data("listeners.postmessage", l);=0A=
           }=0A=
           var fns =3D l[type];=0A=
           if (!fns) {=0A=
               fns =3D [];=0A=
               l[type] =3D fns;=0A=
           }=0A=
           fns.push({fn:fn, callback: isCallback, origin:origin || =
$.pm.origin});=0A=
         },=0A=
=0A=
         unbind: function(type, fn) {=0A=
             var l =3D pm.data("listeners.postmessage");=0A=
             if (l) {=0A=
                 if (type) {=0A=
                     if (fn) {=0A=
                         // remove specific listener=0A=
                         var fns =3D l[type];=0A=
                         if (fns) {=0A=
                             var m =3D [];=0A=
                             for (var i=3D0,len=3Dfns.length; i<len; =
i++) {=0A=
                                 var o =3D fns[i];=0A=
                                 if (o.fn !=3D=3D fn) {=0A=
                                     m.push(o);=0A=
                                 }=0A=
                             }=0A=
                             l[type] =3D m;=0A=
                         }=0A=
                     }=0A=
                     else {=0A=
                         // remove all listeners by type=0A=
                         delete l[type];=0A=
                     }=0A=
                 }=0A=
                 else {=0A=
                     // unbind all listeners of all type=0A=
                     for (var i in l) {=0A=
                       delete l[i];=0A=
                     }=0A=
                 }=0A=
             }=0A=
         },=0A=
=0A=
         data: function(k, v) {=0A=
             if (v =3D=3D=3D undefined) {=0A=
                 return pm._data[k];=0A=
             }=0A=
             pm._data[k] =3D v;=0A=
             return v;=0A=
         },=0A=
=0A=
         _data: {},=0A=
=0A=
         _CHARS: =
'0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split(''=
),=0A=
=0A=
         _random: function() {=0A=
             var r =3D [];=0A=
             for (var i=3D0; i<32; i++) {=0A=
                 r[i] =3D pm._CHARS[0 | Math.random() * 32];=0A=
             };=0A=
             return r.join("");=0A=
         },=0A=
=0A=
         _callback: function(fn) {=0A=
             var cbs =3D pm.data("callbacks.postmessage");=0A=
             if (!cbs) {=0A=
                 cbs =3D {};=0A=
                 pm.data("callbacks.postmessage", cbs);=0A=
             }=0A=
             var r =3D pm._random();=0A=
             cbs[r] =3D fn;=0A=
             return r;=0A=
         },=0A=
=0A=
         _bind: function() {=0A=
             // are we already listening to message events on this w?=0A=
             if (!pm.data("listening.postmessage")) {=0A=
                 if (window.addEventListener) {=0A=
                     window.addEventListener("message", pm._dispatch, =
false);=0A=
                 }=0A=
                 else if (window.attachEvent) {=0A=
                     window.attachEvent("onmessage", pm._dispatch);=0A=
                 }=0A=
                 pm.data("listening.postmessage", 1);=0A=
             }=0A=
         },=0A=
=0A=
         _dispatch: function(e) {=0A=
             //console.log("$.pm.dispatch", e, this);=0A=
             try {=0A=
                 var msg =3D JSON.parse(e.data);=0A=
             }=0A=
             catch (ex) {=0A=
                 //console.warn("postmessage data invalid json: ", ex); =
//message wasn't meant for pm=0A=
                 return;=0A=
             }=0A=
             if (!msg.type) {=0A=
                 //console.warn("postmessage message type required"); =
//message wasn't meant for pm=0A=
                 return;=0A=
             }=0A=
             var cbs =3D pm.data("callbacks.postmessage") || {},=0A=
             cb =3D cbs[msg.type];=0A=
             if (cb) {=0A=
                 cb(msg.data);=0A=
             }=0A=
             else {=0A=
                 var l =3D pm.data("listeners.postmessage") || {};=0A=
                 var fns =3D l[msg.type] || [];=0A=
                 for (var i=3D0,len=3Dfns.length; i<len; i++) {=0A=
                     var o =3D fns[i];=0A=
                     if (o.origin && o.origin !=3D=3D '*' && e.origin =
!=3D=3D o.origin) {=0A=
                         console.warn("postmessage message origin =
mismatch", e.origin, o.origin);=0A=
                         if (msg.errback) {=0A=
                             // notify post message errback=0A=
                             var error =3D {=0A=
                                 message: "postmessage origin mismatch",=0A=
                                 origin: [e.origin, o.origin]=0A=
                             };=0A=
                             pm.send({target:e.source, data:error, =
type:msg.errback});=0A=
                         }=0A=
                         continue;=0A=
                     }=0A=
=0A=
                     function sendReply ( data ) {=0A=
                       if (msg.callback) {=0A=
                           pm.send({target:e.source, data:data, =
type:msg.callback});=0A=
                       }=0A=
                     }=0A=
                     =0A=
                     try {=0A=
                         if ( o.callback ) {=0A=
                           o.fn(msg.data, sendReply, e);=0A=
                         } else {=0A=
                           sendReply ( o.fn(msg.data, e) );=0A=
                         }=0A=
                     }=0A=
                     catch (ex) {=0A=
                         if (msg.errback) {=0A=
                             // notify post message errback=0A=
                             pm.send({target:e.source, data:ex, =
type:msg.errback});=0A=
                         } else {=0A=
                             throw ex;=0A=
                         }=0A=
                     }=0A=
                 };=0A=
             }=0A=
         }=0A=
     };=0A=
=0A=
     // location hash polling=0A=
     pm.hash =3D {=0A=
=0A=
         send: function(options, msg) {=0A=
             //console.log("hash.send", target_window, options, msg);=0A=
             var target_window =3D options.target,=0A=
             target_url =3D options.url;=0A=
             if (!target_url) {=0A=
                 console.warn("postmessage target window url is =
required");=0A=
                 return;=0A=
             }=0A=
             target_url =3D pm.hash._url(target_url);=0A=
             var source_window,=0A=
             source_url =3D pm.hash._url(window.location.href);=0A=
             if (window =3D=3D target_window.parent) {=0A=
                 source_window =3D "parent";=0A=
             }=0A=
             else {=0A=
                 try {=0A=
                     for (var i=3D0,len=3Dparent.frames.length; i<len; =
i++) {=0A=
                         var f =3D parent.frames[i];=0A=
                         if (f =3D=3D window) {=0A=
                             source_window =3D i;=0A=
                             break;=0A=
                         }=0A=
                     };=0A=
                 }=0A=
                 catch(ex) {=0A=
                     // Opera: security error trying to access =
parent.frames x-origin=0A=
                     // juse use window.name=0A=
                     source_window =3D window.name;=0A=
                 }=0A=
             }=0A=
             if (source_window =3D=3D null) {=0A=
                 console.warn("postmessage windows must be direct =
parent/child windows and the child must be available through the parent =
window.frames list");=0A=
                 return;=0A=
             }=0A=
             var hashmessage =3D {=0A=
                 "x-requested-with": "postmessage",=0A=
                 source: {=0A=
                     name: source_window,=0A=
                     url: source_url=0A=
                 },=0A=
                 postmessage: msg=0A=
             };=0A=
             var hash_id =3D "#x-postmessage-id=3D" + pm._random();=0A=
             target_window.location =3D target_url + hash_id + =
encodeURIComponent(JSON.stringify(hashmessage));=0A=
         },=0A=
=0A=
         _regex: /^\#x\-postmessage\-id\=3D(\w{32})/,=0A=
=0A=
         _regex_len: "#x-postmessage-id=3D".length + 32,=0A=
=0A=
         _bind: function() {=0A=
             // are we already listening to message events on this w?=0A=
             if (!pm.data("polling.postmessage")) {=0A=
                 setInterval(function() {=0A=
                                 var hash =3D "" + window.location.hash,=0A=
                                 m =3D pm.hash._regex.exec(hash);=0A=
                                 if (m) {=0A=
                                     var id =3D m[1];=0A=
                                     if (pm.hash._last !=3D=3D id) {=0A=
                                         pm.hash._last =3D id;=0A=
                                         =
pm.hash._dispatch(hash.substring(pm.hash._regex_len));=0A=
                                     }=0A=
                                 }=0A=
                             }, $.pm.poll || 200);=0A=
                 pm.data("polling.postmessage", 1);=0A=
             }=0A=
         },=0A=
=0A=
         _dispatch: function(hash) {=0A=
             if (!hash) {=0A=
                 return;=0A=
             }=0A=
             try {=0A=
                 hash =3D JSON.parse(decodeURIComponent(hash));=0A=
                 if (!(hash['x-requested-with'] =3D=3D=3D 'postmessage' =
&&=0A=
                       hash.source && hash.source.name !=3D null && =
hash.source.url && hash.postmessage)) {=0A=
                     // ignore since hash could've come from somewhere =
else=0A=
                     return;=0A=
                 }=0A=
             }=0A=
             catch (ex) {=0A=
                 // ignore since hash could've come from somewhere else=0A=
                 return;=0A=
             }=0A=
             var msg =3D hash.postmessage,=0A=
             cbs =3D pm.data("callbacks.postmessage") || {},=0A=
             cb =3D cbs[msg.type];=0A=
             if (cb) {=0A=
                 cb(msg.data);=0A=
             }=0A=
             else {=0A=
                 var source_window;=0A=
                 if (hash.source.name =3D=3D=3D "parent") {=0A=
                     source_window =3D window.parent;=0A=
                 }=0A=
                 else {=0A=
                     source_window =3D window.frames[hash.source.name];=0A=
                 }=0A=
                 var l =3D pm.data("listeners.postmessage") || {};=0A=
                 var fns =3D l[msg.type] || [];=0A=
                 for (var i=3D0,len=3Dfns.length; i<len; i++) {=0A=
                     var o =3D fns[i];=0A=
                     if (o.origin) {=0A=
                         var origin =3D =
/https?\:\/\/[^\/]*/.exec(hash.source.url)[0];=0A=
                         if (o.origin !=3D=3D '*' && origin !=3D=3D =
o.origin) {=0A=
                             console.warn("postmessage message origin =
mismatch", origin, o.origin);=0A=
                             if (msg.errback) {=0A=
                                 // notify post message errback=0A=
                                 var error =3D {=0A=
                                     message: "postmessage origin =
mismatch",=0A=
                                     origin: [origin, o.origin]=0A=
                                 };=0A=
                                 pm.send({target:source_window, =
data:error, type:msg.errback, hash:true, url:hash.source.url});=0A=
                             }=0A=
                             continue;=0A=
                         }=0A=
                     }=0A=
=0A=
                     function sendReply ( data ) {=0A=
                       if (msg.callback) {=0A=
                         pm.send({target:source_window, data:data, =
type:msg.callback, hash:true, url:hash.source.url});=0A=
                       }=0A=
                     }=0A=
                     =0A=
                     try {=0A=
                         if ( o.callback ) {=0A=
                           o.fn(msg.data, sendReply);=0A=
                         } else {=0A=
                           sendReply ( o.fn(msg.data) );=0A=
                         }=0A=
                     }=0A=
                     catch (ex) {=0A=
                         if (msg.errback) {=0A=
                             // notify post message errback=0A=
                             pm.send({target:source_window, data:ex, =
type:msg.errback, hash:true, url:hash.source.url});=0A=
                         } else {=0A=
                             throw ex;=0A=
                         }=0A=
                     }=0A=
                 };=0A=
             }=0A=
         },=0A=
=0A=
         _url: function(url) {=0A=
             // url minus hash part=0A=
             return (""+url).replace(/#.*$/, "");=0A=
         }=0A=
=0A=
     };=0A=
=0A=
     $.extend(pm, {=0A=
                  defaults: {=0A=
                      target: null,  /* target window (required) */=0A=
                      url: null,     /* target window url (required if =
no window.postMessage or hash =3D=3D true) */=0A=
                      type: null,    /* message type (required) */=0A=
                      data: null,    /* message data (required) */=0A=
                      success: null, /* success callback (optional) */=0A=
                      error: null,   /* error callback (optional) */=0A=
                      origin: "*",   /* postmessage origin (optional) */=0A=
                      hash: false    /* use location hash for message =
passing (optional) */=0A=
                  }=0A=
              });=0A=
=0A=
 })(this, typeof jQuery =3D=3D=3D "undefined" ? NO_JQUERY : jQuery);=0A=
=0A=
/**=0A=
 * http://www.JSON.org/json2.js=0A=
 **/=0A=
if (! ("JSON" in window && window.JSON)){JSON=3D{}}(function(){function =
f(n){return n<10?"0"+n:n}if(typeof =
Date.prototype.toJSON!=3D=3D"function"){Date.prototype.toJSON=3Dfunction(=
key){return =
this.getUTCFullYear()+"-"+f(this.getUTCMonth()+1)+"-"+f(this.getUTCDate()=
)+"T"+f(this.getUTCHours())+":"+f(this.getUTCMinutes())+":"+f(this.getUTC=
Seconds())+"Z"};String.prototype.toJSON=3DNumber.prototype.toJSON=3DBoole=
an.prototype.toJSON=3Dfunction(key){return this.valueOf()}}var =
cx=3D/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u2=
02f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=3D/[\\\"\x00-\x1f\x7f-\x=
9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\=
u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta=3D{"\b":"\\b","\t":"\\t","\n"=
:"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"},rep;function =
quote(string){escapable.lastIndex=3D0;return =
escapable.test(string)?'"'+string.replace(escapable,function(a){var =
c=3Dmeta[a];return typeof =
c=3D=3D=3D"string"?c:"\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4=
)})+'"':'"'+string+'"'}function str(key,holder){var =
i,k,v,length,mind=3Dgap,partial,value=3Dholder[key];if(value&&typeof =
value=3D=3D=3D"object"&&typeof =
value.toJSON=3D=3D=3D"function"){value=3Dvalue.toJSON(key)}if(typeof =
rep=3D=3D=3D"function"){value=3Drep.call(holder,key,value)}switch(typeof =
value){case"string":return quote(value);case"number":return =
isFinite(value)?String(value):"null";case"boolean":case"null":return =
String(value);case"object":if(!value){return"null"}gap+=3Dindent;partial=3D=
[];if(Object.prototype.toString.apply(value)=3D=3D=3D"[object =
Array]"){length=3Dvalue.length;for(i=3D0;i<length;i+=3D1){partial[i]=3Dst=
r(i,value)||"null"}v=3Dpartial.length=3D=3D=3D0?"[]":gap?"[\n"+gap+partia=
l.join(",\n"+gap)+"\n"+mind+"]":"["+partial.join(",")+"]";gap=3Dmind;retu=
rn v}if(rep&&typeof =
rep=3D=3D=3D"object"){length=3Drep.length;for(i=3D0;i<length;i+=3D1){k=3D=
rep[i];if(typeof =
k=3D=3D=3D"string"){v=3Dstr(k,value);if(v){partial.push(quote(k)+(gap?": =
":":")+v)}}}}else{for(k in =
value){if(Object.hasOwnProperty.call(value,k)){v=3Dstr(k,value);if(v){par=
tial.push(quote(k)+(gap?": =
":":")+v)}}}}v=3Dpartial.length=3D=3D=3D0?"{}":gap?"{\n"+gap+partial.join=
(",\n"+gap)+"\n"+mind+"}":"{"+partial.join(",")+"}";gap=3Dmind;return =
v}}if(typeof =
JSON.stringify!=3D=3D"function"){JSON.stringify=3Dfunction(value,replacer=
,space){var i;gap=3D"";indent=3D"";if(typeof =
space=3D=3D=3D"number"){for(i=3D0;i<space;i+=3D1){indent+=3D" =
"}}else{if(typeof =
space=3D=3D=3D"string"){indent=3Dspace}}rep=3Dreplacer;if(replacer&&typeo=
f replacer!=3D=3D"function"&&(typeof replacer!=3D=3D"object"||typeof =
replacer.length!=3D=3D"number")){throw new =
Error("JSON.stringify")}return str("",{"":value})}}if(typeof =
JSON.parse!=3D=3D"function"){JSON.parse=3Dfunction(text,reviver){var =
j;function walk(holder,key){var k,v,value=3Dholder[key];if(value&&typeof =
value=3D=3D=3D"object"){for(k in =
value){if(Object.hasOwnProperty.call(value,k)){v=3Dwalk(value,k);if(v!=3D=
=3Dundefined){value[k]=3Dv}else{delete value[k]}}}}return =
reviver.call(holder,key,value)}cx.lastIndex=3D0;if(cx.test(text)){text=3D=
text.replace(cx,function(a){return"\\u"+("0000"+a.charCodeAt(0).toString(=
16)).slice(-4)})}if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|=
u[0-9a-fA-F]{4})/g,"@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.=
\d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:\s*\[)+/g,""))){j=3De=
val("("+text+")");return typeof =
reviver=3D=3D=3D"function"?walk({"":j},""):j}throw new =
SyntaxError("JSON.parse")}}}());=0A=
;=0A=
/**=0A=
 * author Christopher Blum=0A=
 *    - based on the idea of Remy Sharp, =
http://remysharp.com/2009/01/26/element-in-view-event-plugin/=0A=
 *    - forked from http://github.com/zuk/jquery.inview/=0A=
 */=0A=
(function ($) {=0A=
  var inviewObjects =3D {}, viewportSize, viewportOffset,=0A=
      d =3D document, w =3D window, documentElement =3D =
d.documentElement, expando =3D $.expando;=0A=
=0A=
  $.event.special.inview =3D {=0A=
    add: function(data) {=0A=
      inviewObjects[data.guid + "-" + this[expando]] =3D { data: data, =
$element: $(this) };=0A=
    },=0A=
=0A=
    remove: function(data) {=0A=
      try { delete inviewObjects[data.guid + "-" + this[expando]]; } =
catch(e) {}=0A=
    }=0A=
  };=0A=
=0A=
  function getViewportSize() {=0A=
    var mode, domObject, size =3D { height: w.innerHeight, width: =
w.innerWidth };=0A=
=0A=
    // if this is correct then return it. iPad has compat Mode, so will=0A=
    // go into check clientHeight/clientWidth (which has the wrong =
value).=0A=
    if (!size.height) {=0A=
      mode =3D d.compatMode;=0A=
      if (mode || !$.support.boxModel) { // IE, Gecko=0A=
        domObject =3D mode =3D=3D=3D 'CSS1Compat' ?=0A=
          documentElement : // Standards=0A=
          d.body; // Quirks=0A=
        size =3D {=0A=
          height: domObject.clientHeight,=0A=
          width:  domObject.clientWidth=0A=
        };=0A=
      }=0A=
    }=0A=
=0A=
    return size;=0A=
  }=0A=
=0A=
  function getViewportOffset() {=0A=
    return {=0A=
      top:  w.pageYOffset || documentElement.scrollTop   || =
d.body.scrollTop,=0A=
      left: w.pageXOffset || documentElement.scrollLeft  || =
d.body.scrollLeft=0A=
    };=0A=
  }=0A=
=0A=
  function checkInView() {=0A=
    var $elements =3D $(), elementsLength, i =3D 0;=0A=
=0A=
    $.each(inviewObjects, function(i, inviewObject) {=0A=
      var selector  =3D inviewObject.data.selector,=0A=
          $element  =3D inviewObject.$element;=0A=
      $elements =3D $elements.add(selector ? $element.find(selector) : =
$element);=0A=
    });=0A=
=0A=
    elementsLength =3D $elements.length;=0A=
    if (elementsLength) {=0A=
      viewportSize   =3D viewportSize   || getViewportSize();=0A=
      viewportOffset =3D viewportOffset || getViewportOffset();=0A=
=0A=
      for (; i<elementsLength; i++) {=0A=
        // Ignore elements that are not in the DOM tree=0A=
        if (!$.contains(documentElement, $elements[i])) {=0A=
          continue;=0A=
        }=0A=
=0A=
        var element       =3D $elements[i],=0A=
            $element      =3D $(element),=0A=
            elementSize   =3D {},=0A=
            elementOffset =3D {},=0A=
            inView        =3D $element.data('inview'),=0A=
            visiblePartX,=0A=
            visiblePartY,=0A=
            visiblePartsMerged;=0A=
        =0A=
        // for the case where 'display:none' is used in place of =
'visibility:hidden'=0A=
        // count and sum the above items to get and move closer to the =
correct values=0A=
        // IMPORTANT :: insert element into container empty=0A=
        if($element.css('display') =3D=3D 'none')=0A=
        {=0A=
            var parentElement =3D $element.parent();=0A=
  =0A=
            elementOffset.top =3D parentElement.offset().top;=0A=
            elementOffset.left =3D parentElement.offset().left;=0A=
            elementSize.height =3D parentElement.height();=0A=
            elementSize.width =3D parentElement.width();=0A=
        } else {=0A=
       	    elementSize =3D { height: $element.height(), width: =
$element.width() }=0A=
       	    elementOffset =3D $element.offset();=0A=
       	}=0A=
=0A=
        // Don't ask me why because I haven't figured out yet:=0A=
        // viewportOffset and viewportSize are sometimes suddenly null =
in Firefox 5.=0A=
        // Even though it sounds weird:=0A=
        // It seems that the execution of this function is interferred =
by the onresize/onscroll event=0A=
        // where viewportOffset and viewportSize are unset=0A=
        if (!viewportOffset || !viewportSize) {=0A=
          return;=0A=
        }=0A=
        =0A=
        if (element.offsetWidth >=3D 0 && element.offsetHeight >=3D 0 && =
element.style.display !=3D "none" &&=0A=
            elementOffset.top + elementSize.height > viewportOffset.top =
&&=0A=
            elementOffset.top < viewportOffset.top + viewportSize.height =
&&=0A=
            elementOffset.left + elementSize.width > viewportOffset.left =
&&=0A=
            elementOffset.left < viewportOffset.left + =
viewportSize.width) {=0A=
          visiblePartX =3D (viewportOffset.left > elementOffset.left ?=0A=
            'right' : (viewportOffset.left + viewportSize.width) < =
(elementOffset.left + elementSize.width) ?=0A=
            'left' : 'both');=0A=
          visiblePartY =3D (viewportOffset.top > elementOffset.top ?=0A=
            'bottom' : (viewportOffset.top + viewportSize.height) < =
(elementOffset.top + elementSize.height) ?=0A=
            'top' : 'both');=0A=
          visiblePartsMerged =3D visiblePartX + "-" + visiblePartY;=0A=
          if (!inView || inView !=3D=3D visiblePartsMerged) {=0A=
            $element.data('inview', =
visiblePartsMerged).trigger('inview', [true, visiblePartX, =
visiblePartY]);=0A=
          }=0A=
        } else if (inView) {=0A=
          $element.data('inview', false).trigger('inview', [false]);=0A=
        }=0A=
      }=0A=
    }=0A=
  }=0A=
=0A=
  $(w).bind("scroll resize", function() {=0A=
    viewportSize =3D viewportOffset =3D null;=0A=
  });=0A=
  =0A=
  // IE < 9 scrolls to focused elements without firing the "scroll" event=0A=
  if (!documentElement.addEventListener && documentElement.attachEvent) {=0A=
    documentElement.attachEvent("onfocusin", function() {=0A=
      viewportOffset =3D null;=0A=
    });=0A=
  }=0A=
=0A=
  // Use setInterval in order to also make sure this captures elements =
within=0A=
  // "overflow:scroll" elements or elements that appeared in the dom =
tree due to=0A=
  // dom manipulation and reflow=0A=
  // old: $(window).scroll(checkInView);=0A=
  //=0A=
  // By the way, iOS (iPad, iPhone, ...) seems to not execute, or at =
least delays=0A=
  // intervals while the user scrolls. Therefore the inview event might =
fire a bit late there=0A=
  setInterval(checkInView, 250);=0A=
})(jQuery);;=0A=
/**=0A=
 * Resizeable Iframes.=0A=
 *=0A=
 * Start listening to resize postMessage events for selected iframes:=0A=
 * $( selector ).Jetpack( 'resizeable' );=0A=
 * - OR -=0A=
 * Jetpack.resizeable( 'on', context );=0A=
 *=0A=
 * Resize selected iframes:=0A=
 * $( selector ).Jetpack( 'resizeable', 'resize', { width: 100, height: =
200 } );=0A=
 * - OR -=0A=
 * Jetpack.resizeable( 'resize', { width: 100, height: 200 }, context );=0A=
 *=0A=
 * Stop listening to resize postMessage events for selected iframes:=0A=
 * $( selector ).Jetpack( 'resizeable', 'off' );=0A=
 * - OR -=0A=
 * Jetpack.resizeable( 'off', context );=0A=
 *=0A=
 * Stop listening to all resize postMessage events:=0A=
 * Jetpack.resizeable( 'off' );=0A=
 */=0A=
(function($) {=0A=
	var listening     =3D false, // Are we listening for resize postMessage =
events=0A=
	    sourceOrigins =3D [],    // What origins are allowed to send resize =
postMessage events=0A=
	    $sources      =3D false, // What iframe elements are we tracking =
resize postMessage events from=0A=
=0A=
	    URLtoOrigin,     // Utility to convert URLs into origins=0A=
	    setupListener,   // Binds global resize postMessage event handler=0A=
	    destroyListener, // Unbinds global resize postMessage event handler=0A=
=0A=
	    methods; // Jetpack.resizeable methods=0A=
=0A=
	// Setup the Jetpack global=0A=
	if ( 'undefined' =3D=3D=3D typeof window.Jetpack ) {=0A=
		window.Jetpack =3D {=0A=
			/**=0A=
			 * Handles the two different calling methods:=0A=
			 * $( selector ).Jetpack( 'namespace', 'method', context ) // here, =
context is optional and is used to filter the collection=0A=
			 * - vs. -=0A=
			 * Jetpack.namespace( 'method', context ) // here context defines the =
collection=0A=
			 *=0A=
			 * @internal=0A=
			 *=0A=
			 * Call as: Jetpack.getTarget.call( this, context )=0A=
			 *=0A=
			 * @param string context: jQuery selector=0A=
			 * @return jQuery|undefined object on which to perform operations or =
undefined when context cannot be determined=0A=
			 */=0A=
			getTarget: function( context ) {=0A=
				if ( this instanceof jQuery ) {=0A=
					return context ? this.filter( context ) : this;=0A=
				}=0A=
=0A=
				return context ? $( context ) : context;=0A=
			}=0A=
		};=0A=
	}=0A=
=0A=
	// Setup the Jetpack jQuery method=0A=
	if ( 'undefined' =3D=3D=3D typeof $.fn.Jetpack ) {=0A=
		/**=0A=
		 * Dispatches calls to the correct namespace=0A=
		 * =0A=
		 * @param string namespace=0A=
		 * @param ...=0A=
		 * @return mixed|jQuery (chainable)=0A=
		 */=0A=
		$.fn.Jetpack =3D function( namespace ) {=0A=
			if ( 'function' =3D=3D=3D typeof Jetpack[namespace] ) {=0A=
				// Send the call to the correct Jetpack.namespace=0A=
				return Jetpack[namespace].apply( this, Array.prototype.slice.call( =
arguments, 1 ) );=0A=
			} else {=0A=
				$.error( 'Namespace "' + namespace + '" does not exist on =
jQuery.Jetpack' );=0A=
			}=0A=
		};=0A=
	}=0A=
=0A=
	// Define Jetpack.resizeable() namespace to just always bail if no =
postMessage=0A=
	if ( 'function' !=3D=3D typeof window.postMessage ) {=0A=
		$.extend( window.Jetpack, {=0A=
			/**=0A=
			 * Defines the Jetpack.resizeable() namespace.=0A=
			 * See below for non-trivial definition for browsers with postMessage.=0A=
			 */ =0A=
			resizeable: function() {=0A=
				$.error( 'Browser does not support window.postMessage' );=0A=
			}=0A=
		} );=0A=
=0A=
		return;=0A=
	}=0A=
=0A=
	/**=0A=
	 * Utility to convert URLs into origins=0A=
	 *=0A=
	 * http://example.com:port/path?query#fragment -> =
http://example.com:port=0A=
	 *=0A=
	 * @param string URL=0A=
	 * @return string origin=0A=
	 */=0A=
	URLtoOrigin =3D function( URL ) {=0A=
		if ( ! URL.match( /^https?:\/\// ) ) {=0A=
			URL =3D document.location.href;=0A=
		}=0A=
		return URL.split( '/' ).slice( 0, 3 ).join( '/' );=0A=
	};=0A=
=0A=
	/**=0A=
	 * Binds global resize postMessage event handler=0A=
	 */=0A=
	setupListener =3D function() {=0A=
		listening =3D true;=0A=
=0A=
		$( window ).on( 'message.JetpackResizeableIframe', function( e ) {=0A=
			var event =3D e.originalEvent,=0A=
			    data;=0A=
=0A=
			// Ensure origin is allowed=0A=
			if ( -1 =3D=3D=3D $.inArray( event.origin, sourceOrigins ) ) {=0A=
				return;=0A=
			}=0A=
=0A=
			// Some browsers send structured data, some send JSON strings=0A=
			if ( 'object' =3D=3D=3D typeof event.data ) {=0A=
				data =3D event.data.data;=0A=
			} else {=0A=
				try {=0A=
					data =3D JSON.parse( event.data );=0A=
				} catch ( err ) {=0A=
					data =3D false;=0A=
				}=0A=
			}=0A=
=0A=
			if ( !data.data ) {=0A=
				return;=0A=
			}=0A=
=0A=
			// Un-nest=0A=
			data =3D data.data;=0A=
=0A=
			// Is it a resize event?=0A=
			if ( 'undefined' =3D=3D=3D typeof data.action || 'resize' !=3D=3D =
data.action ) {=0A=
				return;=0A=
			}=0A=
=0A=
			// Find the correct iframe and resize it=0A=
			$sources.filter( function() {=0A=
				if ( 'undefined' !=3D=3D typeof data.name )=0A=
					return this.name =3D=3D=3D data.name;=0A=
				else=0A=
					return event.source =3D=3D=3D this.contentWindow;=0A=
			} ).first().Jetpack( 'resizeable', 'resize', data );=0A=
		} );=0A=
	};=0A=
=0A=
	/**=0A=
	 * Unbinds global resize postMessage event handler=0A=
	 */=0A=
	destroyListener =3D function() {=0A=
		listening =3D false;=0A=
		$( window ).off( 'message.JetpackResizeableIframe' );=0A=
=0A=
		sourceOrigins =3D [];=0A=
		$( '.jetpack-resizeable' ).removeClass( 'jetpack-resizeable' );=0A=
		$sources =3D false;=0A=
	};=0A=
=0A=
	// Methods for Jetpack.resizeable() namespace=0A=
	methods =3D {=0A=
		/**=0A=
		 * Start listening for resize postMessage events on the given iframes=0A=
		 *=0A=
		 * Call statically as: Jetpack.resizeable( 'on', context )=0A=
		 * Call as: $( selector ).Jetpack( 'resizeable', 'on', context ) // =
context optional: used to filter the collectino=0A=
		 *=0A=
		 * @param string context jQuery selector.=0A=
		 * @return jQuery (chainable)=0A=
		 */=0A=
		on: function( context ) {=0A=
			var target =3D Jetpack.getTarget.call( this, context );=0A=
=0A=
			if ( ! listening ) {=0A=
				setupListener();=0A=
			}=0A=
=0A=
			target.each( function() {=0A=
				sourceOrigins.push( URLtoOrigin( $( this ).attr( 'src' ) ) );=0A=
			} ).addClass( 'jetpack-resizeable' );=0A=
=0A=
			$sources =3D $( '.jetpack-resizeable' );=0A=
=0A=
			return target;=0A=
		},=0A=
=0A=
		/**=0A=
		 * Stop listening for resize postMessage events on the given iframes=0A=
		 *=0A=
		 * Call statically as: Jetpack.resizeable( 'off', context )=0A=
		 * Call as: $( selector ).Jetpack( 'resizeable', 'off', context ) // =
context optional: used to filter the collectino=0A=
		 *=0A=
		 * @param string context jQuery selector=0A=
		 * @return jQuery (chainable)=0A=
		 */=0A=
		off: function( context ) {=0A=
			var target =3D Jetpack.getTarget.call( this, context );=0A=
=0A=
			if ( 'undefined' =3D=3D=3D typeof target ) {=0A=
				destroyListener();=0A=
=0A=
				return target;=0A=
			}=0A=
=0A=
			target.each( function() {=0A=
				var origin =3D URLtoOrigin( $( this ).attr( 'src' ) ),=0A=
				    pos =3D $.inArray( origin, sourceOrigins );=0A=
=0A=
				if ( -1 !=3D=3D pos ) {=0A=
					sourceOrigins.splice( pos, 1 );=0A=
				}=0A=
			} ).removeClass( 'jetpack-resizeable' );=0A=
=0A=
			$sources =3D $( '.jetpack-resizeable' );=0A=
=0A=
			return target;=0A=
		},=0A=
=0A=
		/**=0A=
		 * Resize the given iframes=0A=
		 *=0A=
		 * Call statically as: Jetpack.resizeable( 'resize', dimensions, =
context )=0A=
		 * Call as: $( selector ).Jetpack( 'resizeable', 'resize', dimensions, =
context ) // context optional: used to filter the collectino=0A=
		 *=0A=
		 * @param object dimensions in pixels: { width: (int), height: (int) }=0A=
		 * @param string context jQuery selector=0A=
		 * @return jQuery (chainable)=0A=
		 */=0A=
		resize: function( dimensions, context ) {=0A=
			var target =3D Jetpack.getTarget.call( this, context );=0A=
=0A=
			$.each( [ 'width', 'height' ], function( i, variable ) {=0A=
				var value =3D 0;=0A=
				if ( 'undefined' !=3D=3D typeof dimensions[variable] ) {=0A=
					value =3D parseInt( dimensions[variable], 10 );=0A=
				}=0A=
=0A=
				if ( 0 !=3D=3D value ) {=0A=
					target[variable]( value );=0A=
					var container =3D target.parent();=0A=
					if ( container.hasClass( 'slim-likes-widget' ) ) {=0A=
						container[variable]( value );=0A=
					}=0A=
				}=0A=
			} );=0A=
=0A=
			return target;=0A=
		}=0A=
	};=0A=
=0A=
	// Define Jetpack.resizeable() namespace=0A=
	$.extend( window.Jetpack, {=0A=
		/**=0A=
		 * Defines the Jetpack.resizeable() namespace.=0A=
		 * See above for trivial definition for browsers with no postMessage.=0A=
		 *=0A=
		 * @param string method=0A=
		 * @param ...=0A=
		 * @return mixed|jQuery (chainable)=0A=
		 */=0A=
		resizeable: function( method ) {=0A=
			if ( methods[method] ) {=0A=
				// Send the call to the correct Jetpack.resizeable() method=0A=
				return methods[method].apply( this, Array.prototype.slice.call( =
arguments, 1 ) );=0A=
			} else if ( ! method ) {=0A=
				// By default, send to Jetpack.resizeable( 'on' ), which isn't =
useful in that form but is when called as=0A=
				// jQuery( selector ).Jetpack( 'resizeable' )=0A=
				return methods.on.apply( this );=0A=
			} else {=0A=
				$.error( 'Method ' +  method + ' does not exist on =
Jetpack.resizeable' );=0A=
			} =0A=
		}=0A=
	} );=0A=
})(jQuery);=0A=
;=0A=
jQuery.extend(jQuery.easing,=0A=
{=0A=
 easeOutCubic: function (x, t, b, c, d) {=0A=
  return c*((t=3Dt/d-1)*t*t + 1) + b;=0A=
 }=0A=
});=0A=
jQuery(document).ready(function($) {=0A=
	var isopen =3D false,=0A=
	    bitHeight =3D $('#bitsubscribe').height(),=0A=
		$bit =3D $('#bit');=0A=
	setTimeout(function () {=0A=
		$bit.animate({=0A=
				bottom: '-' + bitHeight - 30 + 'px'=0A=
			}, 200);=0A=
		if (document.location.href.indexOf('blogsub=3D') !=3D=3D -1) {=0A=
			open();=0A=
		}=0A=
	}, 300);=0A=
	var open =3D function() {=0A=
		if (isopen) return;=0A=
		isopen =3D true;=0A=
		$('a.bsub', $bit).addClass('open');=0A=
		$('#bitsubscribe', $bit).addClass('open')=0A=
		$bit.stop();=0A=
		$bit.animate({=0A=
			bottom: '0px'=0A=
		   },{duration:400, easing:"easeOutCubic"});=0A=
	}=0A=
	var close =3D function() {=0A=
		if (!isopen) return;=0A=
		isopen =3D false;=0A=
		$bit.stop();=0A=
		$bit.animate({=0A=
			bottom: '-' + bitHeight - 30 + 'px'=0A=
		}, 200, function() { =0A=
			$('a.bsub', $bit).removeClass('open');=0A=
			$('#bitsubscribe', $bit).removeClass('open');=0A=
		});=0A=
	}=0A=
	$('a.bsub', $bit).click(function () {=0A=
		if ( !isopen )=0A=
			open();=0A=
		else=0A=
			close();=0A=
	});=0A=
	var target =3D $bit.has('form').length? $bit : $(document);=0A=
	target.keyup(function(e) {=0A=
		if (27 =3D=3D e.keyCode) close();=0A=
	});=0A=
	=0A=
	$( '#loggedout-follow' ).submit( function() {=0A=
		email =3D $( '#loggedout-follow-field' ).val();=0A=
		if ( '' =3D=3D=3D email || !email.match( /^.*@.*\..*$/ ) ) {=0A=
			var error =3D LoggedOutFollow.invalid_email;=0A=
			$( '#loggedout-follow-error' ).text( error ).css( 'opacity', 1 =
).fadeIn( 'slow' );=0A=
			$( '#loggedout-follow-field' ).focus( function() { =
$('#loggedout-follow-error').fadeOut(); } );=0A=
			return false;=0A=
		}=0A=
		return true;=0A=
	});=0A=
});;=0A=
addComment=3D{moveForm:function(d,f,i,c){var =
m=3Dthis,a,h=3Dm.I(d),b=3Dm.I(i),l=3Dm.I("cancel-comment-reply-link"),j=3D=
m.I("comment_parent"),k=3Dm.I("comment_post_ID");if(!h||!b||!l||!j){retur=
n}m.respondId=3Di;c=3Dc||false;if(!m.I("wp-temp-form-div")){a=3Ddocument.=
createElement("div");a.id=3D"wp-temp-form-div";a.style.display=3D"none";b=
.parentNode.insertBefore(a,b)}h.parentNode.insertBefore(b,h.nextSibling);=
if(k&&c){k.value=3Dc}j.value=3Df;l.style.display=3D"";l.onclick=3Dfunctio=
n(){var =
n=3DaddComment,e=3Dn.I("wp-temp-form-div"),o=3Dn.I(n.respondId);if(!e||!o=
){return}n.I("comment_parent").value=3D"0";e.parentNode.insertBefore(o,e)=
;e.parentNode.removeChild(e);this.style.display=3D"none";this.onclick=3Dn=
ull;return false};try{m.I("comment").focus()}catch(g){}return =
false},I:function(a){return document.getElementById(a)}};;=0A=

------=_NextPart_000_0000_01CE3A81.CA9C5BC0
Content-Type: application/javascript
Content-Transfer-Encoding: quoted-printable
Content-Location: http://partner.googleadservices.com/gampad/google_service.js

(function(){var f=3Dnull;function =
k(a){this.t=3D{};this.tick=3Dfunction(a,c,d){d=3Dd?d:(new =
Date).getTime();this.t[a]=3D[d,c]};this.tick("start",f,a)}var l=3Dnew =
k;window.GA_jstiming=3D{Timer:k,load:l};if(window.GA_jstiming){window.GA_=
jstiming.d=3D{};window.GA_jstiming.i=3D1;var m=3Dfunction(a,b,c){var =
d=3Da.t[b],e=3Da.t.start;if(d&&(e||c))return d=3Da.t[b][0],e=3Dvoid =
0!=3Dc?c:e[0],d-e};window.GA_jstiming.report=3Dfunction(a,b,c){var =
d=3D"";a.h&&(d+=3D"&"+a.h);var e=3Da.t,h=3De.start,v=3D[],p=3D[],g;for(g =
in e)if("start"!=3Dg&&0!=3Dg.indexOf("_")){var =
q=3De[g][1];q?e[q]&&p.push(g+"."+m(a,g,e[q][0])):h&&v.push(g+"."+m(a,g))}=
delete e.start;if(b)for(var w in =
b)d+=3D"&"+w+"=3D"+b[w];a=3D[c?c:"{{SCHEME}}//csi.gstatic.com/csi","?v=3D=
3","&s=3D"+=0A=
(window.GA_jstiming.sn||"gam")+"&action=3D",a.name,p.length?"&it=3D"+p.jo=
in(","):"","",d,"&rt=3D",v.join(",")].join("");b=3Dnew Image;var =
x=3Dwindow.GA_jstiming.i++;window.GA_jstiming.d[x]=3Db;b.onload=3Db.onerr=
or=3Dfunction(){delete window.GA_jstiming.d[x]};b.src=3Da;b=3Df;return =
a}};var n=3Dthis,r=3Dfunction(a,b){var =
c,d=3Db,e=3Da.split(".");c=3Dc||n;!(e[0]in =
c)&&c.execScript&&c.execScript("var "+e[0]);for(var =
h;e.length&&(h=3De.shift());)!e.length&&void =
0!=3D=3Dd?c[h]=3Dd:c=3Dc[h]?c[h]:c[h]=3D{}},t=3Dfunction(a){var =
b=3Ds;function =
c(){}c.prototype=3Db.prototype;a.k=3Db.prototype;a.prototype=3Dnew =
c};var =
u=3D/^([\w-]+\.)*([\w-]{2,})(\:[0-9]+)?$/,y=3Dfunction(a,b){if(!a)return =
b;var c=3Da.match(u);return c?c[0]:b};var =
z,A=3D"false",B=3D!1,C=3Dz=3D/^true$/.test(A)?!0:/^false$/.test(A)?!1:B;v=
ar D=3Dfunction(){return y("","pubads.g.doubleclick.net")};var =
E;E||y("","pagead2.googlesyndication.com");var F=3Dfunction(a,b){for(var =
c in =
a)Object.prototype.hasOwnProperty.call(a,c)&&b.call(f,a[c],c,a)};var =
G=3Dfunction(a){this.c=3D[];this.b=3D{};for(var =
b=3D0,c=3Darguments.length;b<c;++b)this.b[arguments[b]]=3D""};G.prototype=
.j=3Dfunction(a){return =
this.b.hasOwnProperty(a)?this.b[a]:""};G.prototype.geil=3DG.prototype.j;v=
ar H=3Dfunction(a){var =
b=3D[],c=3Dfunction(a){""!=3Da&&b.push(a)};F(a.b,c);return =
0<a.c.length&&0<b.length?a.c.join(",")+","+b.join(","):a.c.join(",")+b.jo=
in(",")};function I(a){var b=3D"adsense";if(!a||!("string"=3D=3Dtypeof =
a&&0<a.length)||b=3D=3Df)a=3Df;else{var =
c=3Dwindow.GS_googleServiceIds_[b];c=3D=3Df&&(c=3D"adsense"=3D=3Db?new =
J:new =
K,window.GS_googleServiceIds_[b]=3Dc);b:{for(b=3D0;b<c.a.length;b++)if(a=3D=
=3Dc.a[b])break b;c.a[c.a.length]=3Da}a=3Dc}return =
a}r("GS_googleAddAdSenseService",I);function L(){for(var a in =
window.GS_googleServiceIds_){var =
b=3Dwindow.GS_googleServiceIds_[a];"function"!=3Dtypeof =
b&&b.enable()}}r("GS_googleEnableAllServices",L);=0A=
function =
M(){window.GS_googleServiceIds_=3D{}}r("GS_googleResetAllServices",M);fun=
ction N(){var =
a=3D"adsense",a=3Da=3D=3Df?f:window.GS_googleServiceIds_[a];return =
a=3Da=3D=3Df?"":a.a.join()}r("GS_googleGetIdsForAdSenseService",N);functi=
on O(a){return P(a)}r("GS_googleFindService",O);function Q(){var =
a=3DP("adsense");return =
a?H(a.g):""}r("GS_googleGetExpIdsForAdSense",Q);function =
s(a){this.f=3Da;this.a=3D[];this.g=3Dnew G}=0A=
s.prototype.toString=3Dfunction(){for(var a=3D"["+this.f+" ids: =
",b=3D0;b<this.a.length;b++)0<b&&(a+=3D","),a+=3Dthis.a[b];return =
a+=3D"]"};var P=3Dfunction(a){return =
a=3Da=3D=3Df?f:window.GS_googleServiceIds_[a]};function =
K(){s.call(this,"unknown")}t(K);K.prototype.enable=3Dfunction(){};functio=
n J(){s.call(this,"adsense");this.e=3D!1}t(J);=0A=
J.prototype.enable=3Dfunction(){if(!this.e){var =
a;a=3D(a=3Ddocument.URL)&&(0<a.indexOf("?google_debug")||0<a.indexOf("&go=
ogle_debug"))?"google_ads_dbg.js":"google_ads.js";var =
b=3D"http://"+y("","partner.googleadservices.com");C&&(b=3D"https://"+y("=
","securepubads.g.doubleclick.net"));var =
c=3D"",d;d=3DD();(d=3D"pubads.g.doubleclick.net"=3D=3Dd)||(c=3D"?prodhost=
=3D"+D());a=3Db+"/gampad/"+a+c;b=3D"script";document.write("<"+b+' =
src=3D"'+a+'">\x3c/script>');this.e=3D!0;window.GA_jstiming&&=0A=
window.GA_jstiming.Timer&&(window.GA_jstiming.load.name=3D"load",window.G=
A_jstiming.load.tick("start"))}};window.GS_googleServiceIds_||(window.GS_=
googleServiceIds_=3D{});})()=0A=

------=_NextPart_000_0000_01CE3A81.CA9C5BC0
Content-Type: application/javascript
Content-Transfer-Encoding: quoted-printable
Content-Location: http://s2.wp.com/wp-content/mu-plugins/akismet-2.5/form.js?m=1308783962g

jQuery(document).ready(function(){var timing=3Dnew Date();var =
ak_js=3Ddocument.getElementById('ak_js');if(ak_js){ak_js.value=3Dtiming.g=
etTime();return;}=0A=
var input=3D'<input type=3D"hidden" id=3D"ak_js" name=3D"ak_js" =
value=3D"'=0A=
+timing.getTime()+'"/>';var =
div=3Ddocument.createElement('div');div.innerHTML=3Dinput=0A=
jQuery('#commentform').append(div);jQuery('#replyrow =
td').append(input);});
------=_NextPart_000_0000_01CE3A81.CA9C5BC0
Content-Type: application/javascript
Content-Transfer-Encoding: quoted-printable
Content-Location: http://0.gravatar.com/js/gprofiles.js?ver=201316ac

// http://javascriptcompressor.com/=0A=
if('undefined'=3D=3Dtypeof(console)){console=3D{"log":function(str){},"de=
bug":function(str){}}}var =
Gravatar=3D{"profile_stack":{},"profile_map":{},"overTimeout":false,"outT=
imeout":false,"stopOver":false,"active_grav":false,"active_hash":false,"a=
ctive_id":false,"active_grav_clone":false,"profile_cb":null,"stats_queue"=
:[],"throbber":null,"has_bg":false,"disabled":false,"url_prefix":'http://=
en',"disable":function(){Gravatar.disabled=3Dtrue;Gravatar.hide_card();va=
r d=3Dnew =
Date(2100,1,1,1,1,1);Gravatar.stat('disable');if(-1=3D=3Dwindow.location.=
host.search(/wordpress.com/i)){document.cookie=3D'nohovercard=3D1; =
expires=3D'+d.toUTCString()+';'}else{document.cookie=3D'nohovercard=3D1; =
expires=3D'+d.toUTCString()+'; domain=3D.wordpress.com; =
path=3D/'}},"mouseOut":function(e){e.stopImmediatePropagation();Gravatar.=
stopOver=3Dtrue;Gravatar.outTimeout=3DsetTimeout(function(){Gravatar.hide=
_card()},300)},"init":function(container,noGrav){var =
ca=3Ddocument.cookie.split(';'),i,c;for(i=3D0;i<ca.length;i++){c=3Dca[i];=
while(' =
'=3D=3Dc.charAt(0)){c=3Dc.substring(1,c.length)}if(0=3D=3Dc.indexOf('noho=
vercard=3D1')){return}}if('https:'=3D=3Dwindow.location.protocol)this.url=
_prefix=3D'https://secure';this.attach_profiles(container,noGrav);this.ad=
d_card_css();jQuery('body').on('mouseenter.gravatar =
mouseleave.gravatar','img.grav-hashed',function(e){if(Gravatar.disabled){=
return}e.preventDefault();e.stopPropagation();if('mouseleave'=3D=3De.type=
||'mouseout'=3D=3De.type){return =
Gravatar.mouseOut.call(this,e)}Gravatar.stopOver=3Dfalse;Gravatar.active_=
id=3DjQuery(this).attr('id');Gravatar.active_hash=3DGravatar.active_id.sp=
lit('-')[1];Gravatar.untilt_gravatar();clearTimeout(Gravatar.overTimeout)=
;if(false=3D=3D=3DGravatar.profile_map['g'+Gravatar.active_hash]){return}=
Gravatar.stat('hover');clearTimeout(Gravatar.outTimeout);Gravatar.tilt_gr=
avatar();Gravatar.fetch_profile_by_hash(Gravatar.active_hash,Gravatar.act=
ive_id);Gravatar.overTimeout=3DsetTimeout(function(){Gravatar.show_card()=
},600)});jQuery('body').on('mouseenter.gravatar =
mouseleave.gravatar','div.gcard, =
img.grav-clone',function(e){if(Gravatar.disabled){return}e.preventDefault=
();e.stopPropagation();if(e.type=3D=3D'mouseenter'||e.type=3D=3D'mouseove=
r'){Gravatar.stopOver=3Dfalse;clearTimeout(Gravatar.outTimeout)}else{Grav=
atar.mouseOut.call(this,e)}});jQuery(window).bind('scroll',function(){if(=
!Gravatar.active_hash.length){return}Gravatar.hide_card()})},"attach_prof=
iles":function(container,noGrav){setInterval(Gravatar.send_stats,3000);co=
ntainer=3D"undefined"=3D=3Dtypeof(container)?"body":container;if(noGrav&&=
'string'=3D=3Dtypeof(noGrav)){jQuery(noGrav).addClass('no-grav')}jQuery(c=
ontainer+' img[src*=3D"gravatar.com/avatar"]').not('.no-grav, .no-grav =
img').each(function(){hash=3DGravatar.extract_hash(this);uniq=3D0;if(jQue=
ry('#grav-'+hash+'-'+uniq).length){while(jQuery('#grav-'+hash+'-'+uniq).l=
ength){uniq++}}var =
g=3DjQuery(this).attr('id','grav-'+hash+'-'+uniq).attr('title','').remove=
Attr('title');if(g.parent('a').size()){g.parent('a').attr('title','').rem=
oveAttr('title')}g.addClass('grav-hashed');if(g.parents('#comments, =
.comments, #commentlist, .commentlist, =
.grav-hijack').size()||!g.parents('a:first').size()){g.addClass('grav-hij=
ack')}})},"show_card":function(){if(Gravatar.stopOver){return}dom_id=3Dth=
is.profile_map['g'+Gravatar.active_hash];jQuery('.gcard').hide();if('fetc=
hing'=3D=3Dthis.profile_stack['g'+Gravatar.active_hash]){Gravatar.show_th=
robber();this.listen(Gravatar.active_hash,'show_card');Gravatar.stat('wai=
t');return}if('undefined'=3D=3Dtypeof(this.profile_stack['g'+Gravatar.act=
ive_hash])){Gravatar.show_throbber();this.listen(Gravatar.active_hash,'sh=
ow_card');this.fetch_profile_by_hash(Gravatar.active_hash,dom_id);return}=
Gravatar.stat('show');Gravatar.hide_throbber();if(!jQuery('#profile-'+thi=
s.active_hash).length){this.build_card(this.active_hash,this.profile_stac=
k['g'+this.active_hash])}this.render_card(this.active_grav,'profile-'+thi=
s.active_hash)},"hide_card":function(){clearTimeout(Gravatar.overTimeout)=
;this.untilt_gravatar();jQuery('div.gcard').filter('#profile-'+this.activ=
e_hash).fadeOut(120,function(){jQuery('img.grav-large').stop().remove()})=
.end().not('#profile-'+this.active_hash).hide()},"render_card":function(g=
rav,card_id){var card_el=3DjQuery('#'+card_id).stop();var =
grav_el=3Dgrav;var grav_pos=3Dgrav_el.offset();if(null!=3Dgrav_pos){var =
grav_width=3Dgrav_el.width();var grav_height=3Dgrav_el.height();var =
grav_space=3D5+(grav_width*.4);var card_width=3Dcard_el.width();var =
card_height=3Dcard_el.height();if(card_width=3D=3DjQuery(window).width())=
{card_width=3D400;card_height=3D200}var left=3Dgrav_pos.left-17;var =
top=3Dgrav_pos.top-7;var =
grav_pos_class=3D'pos-right';if(grav_pos.left+grav_width+grav_space+card_=
width>jQuery(window).width()+jQuery(window).scrollLeft()){left=3Dgrav_pos=
.left-card_width+grav_width+17;grav_pos_class=3D'pos-left'}var =
top_offset=3Dgrav_height*.25;jQuery('#'+card_id).removeClass('pos-right =
pos-left').addClass(grav_pos_class).css({'top':(top-top_offset)+'px','lef=
t':left+'px'});var =
arrow_offset=3D(grav_height/2);if(arrow_offset>card_height){arrow_offset=3D=
card_height/2}if(arrow_offset>(card_height/2)-6){arrow_offset=3D(card_hei=
ght/2)-6}if(arrow_offset>53){arrow_offset=3D53}if(this.has_bg){arrow_offs=
et=3Darrow_offset-8}if(arrow_offset<0){arrow_offset=3D0}var =
css=3D{'height':((grav_height*2)+top_offset)+'px'};if('pos-right'=3D=3Dgr=
av_pos_class){css['right']=3D'auto';css['left']=3D'-7px';css['background-=
position']=3D'0px =
'+arrow_offset+'px'}else{css['right']=3D'-10px';css['left']=3D'auto';css[=
'background-position']=3D'0px '+arrow_offset+'px'}jQuery('#'+card_id+' =
.grav-cardarrow').css(css)}card_el.stop().css({opacity:0}).show().animate=
({opacity:1},150,'linear',function(){jQuery(this).css({opacity:'auto'});j=
Query(this).stop();var date=3Dnew Date();var =
qp=3D'http';if('https:'=3D=3Dwindow.location.protocol){qp+=3D's'}var =
url=3Dqp+'://pixel.quantserve.com/pixel/p-18-mFEk4J448M.gif?labels=3Dtype=
.gravatar.hovercard&rand=3D'+Math.random().toString()+'-'+date.getTime();=
var img=3Dnew =
Image(1,1);img.src=3Durl})},"build_card":function(hash,profile){Object.si=
ze=3Dfunction(obj){var size=3D0,key;for(key in =
obj){if(obj.hasOwnProperty(key)){size++}}return =
size};GProfile.init(profile);var urls=3DGProfile.get('urls');var =
photos=3DGProfile.get('photos');var =
services=3DGProfile.get('accounts');var =
limit=3D100;if(Object.size(urls)>3){limit+=3D90}else{limit+=3D10+(20*Obje=
ct.size(urls))}if(Object.size(services)>0){limit+=3D30}var =
description=3DGProfile.get('aboutMe');description=3Ddescription.replace(/=
<[^>]+>/ig,'');description=3Ddescription.toString().substr(0,limit);if(li=
mit=3D=3Ddescription.length){description+=3D'<a =
href=3D"'+GProfile.get('profileUrl')+'" =
target=3D"_blank">&#8230;</a>'}var =
card_class=3D'grav-inner';if(Gravatar.my_hash&&hash=3D=3DGravatar.my_hash=
){card_class+=3D' =
grav-is-user';if(!description.length){description=3D"<p>Want a better =
profile? <a class=3D'grav-edit-profile' =
href=3D'http://gravatar.com/profiles/edit/?noclose' =
target=3D'_blank'>Click =
here</a>.</p>"}}if(description.length){card_class+=3D' =
gcard-about'}name=3DGProfile.get('displayName');if(!name.length){name=3DG=
Profile.get('preferredUsername')}var card=3D'<div =
id=3D"profile-'+hash+'" class=3D"gcard grofile"> 						<div =
class=3D"grav-inner"> 							<div class=3D"grav-grav"> 								<a =
href=3D"'+GProfile.get('profileUrl')+'" target=3D"_blank"> 									<img =
src=3D"'+GProfile.get('thumbnailUrl')+'?s=3D100&r=3Dpg&d=3Dmm" =
width=3D"100" height=3D"100" /> 								</a> 							</div> 							<div =
class=3D"grav-info"> 								<h4><a =
href=3D"'+GProfile.get('profileUrl')+'" =
target=3D"_blank">'+name+'</a></h4> 								<p =
class=3D"grav-loc">'+GProfile.get('currentLocation')+'</p> 								<p =
class=3D"grav-about">'+description+'</p> 								<div =
class=3D"grav-view-complete-button"> 									<a =
href=3D"'+GProfile.get('profileUrl')+'" target=3D"_blank" =
class=3D"grav-view-complete">View Complete Profile</a> 								</div> 			=
					<p class=3D"grav-disable"><a href=3D"#" =
onclick=3D"Gravatar.disable(); return false">Turn off hovercards</a></p> =
							</div> 							<div style=3D"clear:both"></div> 						</div> 						=
<div class=3D"grav-cardarrow"></div> 						<div class=3D"grav-tag"><a =
href=3D"http://gravatar.com/" title=3D"Powered by Gravatar.com" =
target=3D"_blank">&nbsp;</a></div> 					=
</div>';jQuery('body').append(jQuery(card));jQuery('#profile-'+hash+' =
.grav-inner').addClass(card_class);this.has_bg=3Dfalse;var =
bg=3DGProfile.get('profileBackground');if(Object.size(bg)){this.has_bg=3D=
true;var bg_css=3D{padding:'8px =
0'};if(bg.color){bg_css['background-color']=3Dbg.color}if(bg.url){bg_css[=
'background-image']=3D'url('+bg.url+')'}if(bg.position){bg_css['backgroun=
d-position']=3Dbg.position}if(bg.repeat){bg_css['background-repeat']=3Dbg=
.repeat}jQuery('#profile-'+hash).css(bg_css);jQuery('#profile-'+hash+' =
.grav-tag').css('top','8px')}if(!jQuery('#profile-'+hash+' =
.gcard-links').length&&!jQuery('#profile-'+hash+' =
.gcard-services').length){jQuery('#profile-'+hash+' =
.grav-rightcol').css({'width':'auto'})}if(!jQuery('#profile-'+hash+' =
.gcard-about').length){jQuery('#profile-'+hash+' =
.grav-leftcol').css({'width':'auto'})}if(jQuery.isFunction(Gravatar.profi=
le_cb)){Gravatar.loaded_js(hash,'profile-'+hash)}jQuery('#profile-'+hash+=
' a.grav-extra-comments').click(function(e){return =
Gravatar.stat('click_comment',e)});jQuery('#profile-'+hash+' =
a.grav-extra-likes').click(function(e){return =
Gravatar.stat('click_like',e)});jQuery('#profile-'+hash+' .grav-links =
a').click(function(e){return =
Gravatar.stat('click_link',e)});jQuery('#profile-'+hash+' .grav-services =
a').click(function(e){return =
Gravatar.stat('click_service',e)});jQuery('#profile-'+hash+' h4 a, =
#profile-'+hash+' .grav-view-complete, #profile-'+hash+' .grav-grav =
a').click(function(e){return =
Gravatar.stat('to_profile',e)});jQuery('#profile-'+hash+' .grav-tag =
a').click(function(e){if(3=3D=3De.which||2=3D=3De.button||e.altKey||e.met=
aKey||e.ctrlKey){e.preventDefault();e.stopImmediatePropagation();Gravatar=
.stat('egg');return Gravatar.whee()}return =
Gravatar.stat('to_gravatar',e)}).bind('contextmenu',function(e){e.prevent=
Default();e.stopImmediatePropagation();Gravatar.stat('egg');return =
Gravatar.whee()});jQuery('#profile-'+hash+' =
a.grav-edit-profile').click(function(e){return =
Gravatar.stat('click_edit_profile',e)})},"tilt_gravatar":function(){this.=
active_grav=3DjQuery('img#'+this.active_id);if(jQuery('img#grav-clone-'+t=
his.active_hash).length){return}this.active_grav_clone=3Dthis.active_grav=
.clone().attr('id','grav-clone-'+this.active_hash).addClass('grav-clone')=
;var =
top=3Dthis.active_grav.offset().top+parseInt(this.active_grav.css('paddin=
g-top'),10),left=3Dthis.active_grav.offset().left+parseInt(this.active_gr=
av.css('padding-left'),10);var fancyCSS=3D{'-webkit-box-shadow':'0 0 4px =
rgba(0,0,0,.4)','-moz-box-shadow':'0 0 4px =
rgba(0,0,0,.4)','box-shadow':'0 0 4px =
rgba(0,0,0,.4)','border-width':'2px 2px =
'+(this.active_grav.height()/5)+'px =
2px','border-color':'#fff','border-style':'solid','padding':'0px','margin=
':'-2px 0 0 -2px'};if(this.active_grav.hasClass('grav-hijack')){var =
aWrap=3D'<a href=3D"http://gravatar.com/'+this.active_hash+'" =
class=3D"grav-clone-a" target=3D"_blank"></a>'}else{var =
aWrap=3Dthis.active_grav.parents('a:first').clone(true).empty()}var =
appendix=3Dthis.active_grav_clone.css(fancyCSS).wrap(aWrap).parent().css(=
{'position':'absolute','top':top+'px','left':left+'px','z-index':15,'bord=
er':'none','text-decoration':'none'});jQuery('body').append(appendix);thi=
s.active_grav_clone.removeClass('grav-hashed')},"untilt_gravatar":functio=
n(){jQuery('img.grav-clone, =
a.grav-clone-a').remove();Gravatar.hide_throbber()},"show_throbber":funct=
ion(){if(!Gravatar.throbber){Gravatar.throbber=3DjQuery('<div =
id=3D"grav-throbber" style=3D"position: absolute; z-index: 16"><img =
src=3D"'+this.url_prefix+'.gravatar.com/images/throbber.gif" alt=3D"." =
width=3D"15" height=3D"15" =
/></div>')}jQuery('body').append(Gravatar.throbber);var =
offset=3DjQuery('#'+Gravatar.active_id).offset();Gravatar.throbber.css({t=
op:offset.top+2+'px',left:offset.left+1+'px'})},"hide_throbber":function(=
){if(!Gravatar.throbber){return}Gravatar.throbber.remove()},"fetch_profil=
e_by_email":function(email){return =
this.fetch_profile_by_hash(this.md5(email.toString().toLowerCase()))},"fe=
tch_profile_by_hash":function(hash,dom_id){this.profile_map['g'+hash]=3Dd=
om_id;if(this.profile_stack['g'+hash]&&'object'=3D=3Dtypeof(this.profile_=
stack['g'+hash])){return =
this.profile_stack['g'+hash]}this.profile_stack['g'+hash]=3D'fetching';Gr=
avatar.stat('fetch');this.load_js(this.url_prefix+'.gravatar.com/'+hash+'=
.json?callback=3DGravatar.fetch_profile_callback',function(){Gravatar.fet=
ch_profile_error(hash,dom_id)})},"fetch_profile_callback":function(profil=
e){if(!profile||'object'!=3Dtypeof(profile)){return}this.profile_stack['g=
'+profile.entry[0].hash]=3Dprofile;this.notify(profile.entry[0].hash)},"f=
etch_profile_error":function(hash,dom_id){Gravatar.stat('profile_404');Gr=
avatar.profile_map['g'+hash]=3Dfalse;var =
grav=3DjQuery('#'+dom_id);if(grav.parent('a[href=3D"http://gravatar.com/'=
+hash+'"]').size()){grav.unwrap()}if(dom_id=3D=3DGravatar.active_id){Grav=
atar.hide_card()}},"listen":function(key,callback){if(!this.notify_stack)=
{this.notify_stack=3D{}}key=3D'g'+key;if(!this.notify_stack[key]){this.no=
tify_stack[key]=3D[]}for(a=3D0;a<this.notify_stack[key].length;a++){if(ca=
llback=3D=3Dthis.notify_stack[key][a]){return}}this.notify_stack[key][thi=
s.notify_stack[key].length]=3Dcallback},"notify":function(key){if(!this.n=
otify_stack){this.notify_stack=3D{}}key=3D'g'+key;if(!this.notify_stack[k=
ey]){this.notify_stack[key]=3D[]}for(a=3D0;a<this.notify_stack[key].lengt=
h;a++){if(false=3D=3Dthis.notify_stack[key][a]||"undefined"=3D=3Dtypeof(t=
his.notify_stack[key][a])){continue}Gravatar[this.notify_stack[key][a]](k=
ey.substr(1));this.notify_stack[key][a]=3Dfalse}},"extract_hash":function=
(str){hash=3D/gravatar.com\/avatar\/([0-9a-f]{32})/.exec(jQuery(str).attr=
('src'));if(null!=3Dhash&&"object"=3D=3Dtypeof(hash)&&2=3D=3Dhash.length)=
{hash=3Dhash[1]}else{hash=3D/gravatar_id\=3D([0-9a-f]{32})/.exec(jQuery(s=
tr).attr('src'));if(null!=3D=3Dhash&&"object"=3D=3Dtypeof(hash)&&2=3D=3Dh=
ash.length){hash=3Dhash[1]}else{return false}}return =
hash},"load_js":function(src,error_handler){if(!this.loaded_scripts){this=
.loaded_scripts=3D[]}if(this.loaded_scripts[src]){return}this.loaded_scri=
pts[src]=3Dtrue;var =
new_script=3Ddocument.createElement('script');new_script.src=3Dsrc;new_sc=
ript.type=3D'text/javascript';if(jQuery.isFunction(error_handler)){new_sc=
ript.onerror=3Derror_handler}document.getElementsByTagName('head')[0].app=
endChild(new_script)},"loaded_js":function(hash,dom_id){Gravatar.profile_=
cb(hash,dom_id)},"add_card_css":function(){if(jQuery('#gravatar-card-css'=
).length){return}var =
src=3DjQuery('script[src*=3D"/js/gprofiles."]').attr('src')||false,url,bu=
st=3Dfalse;if(src){url=3Dsrc.replace(/\/js\/gprofiles(?:\.dev)?\.js.*$/,'=
');bust=3Dsrc.split('?')[1]||false}else{url=3D'http://s.gravatar.com'}if(=
!bust){var now=3Dnew Date(),janOne=3Dnew =
Date(now.getFullYear(),0,1),bust=3DMath.ceil((((now-janOne)/86400000)+jan=
One.getDay()+1)/7),bust=3D'ver=3D'+now.getFullYear().toString()+bust.toSt=
ring()}new_css=3D"<link rel=3D'stylesheet' type=3D'text/css' =
id=3D'gravatar-card-css' href=3D'"+url+"/css/hovercard.css?"+bust+"' =
/>";if(!jQuery('#gravatar-card-services-css').length){new_css+=3D"<link =
rel=3D'stylesheet' type=3D'text/css' id=3D'gravatar-card-services-css' =
href=3D'"+url+"/css/services.css?"+bust+"' =
/>"}jQuery('head').append(new_css)},"md5":function(str){return =
hex_md5(str)},"autofill":function(email,map){if(!email.length||-1=3D=3Dem=
ail.indexOf('@')){return}this.autofill_map=3Dmap;hash=3Dthis.md5(email.to=
String().toLowerCase());if("undefined"=3D=3Dtypeof(this.profile_stack['g'=
+hash])){this.listen(hash,'autofill_data');this.fetch_profile_by_hash(has=
h)}else{this.autofill_data(hash)}},"autofill_data":function(hash){GProfil=
e.init(this.profile_stack['g'+hash]);for(var m in =
this.autofill_map){switch(m){case'url':link=3DGProfile.get('urls');url=3D=
('undefined'!=3Dtypeof =
link[0]?link[0]['value']:GProfile.get('profileUrl'));jQuery('#'+this.auto=
fill_map[m]).val(url);break;case'urls':links=3DGProfile.get('urls');links=
_str=3D'';for(l=3D0;l<links.length;l++){links_str+=3Dlinks[l]['value']+"\=
n"}jQuery('#'+this.autofill_map[m]).val(links_str);break;default:parts=3D=
m.split(/\./);if(parts[1]){val=3DGProfile.get(m);switch(parts[0]){case'im=
s':case'phoneNumbers':val=3Dval.value;break;case'emails':val=3Dval[0].val=
ue;case'accounts':val=3Dval.url;break}jQuery('#'+this.autofill_map[m]).va=
l(val)}else{jQuery('#'+this.autofill_map[m]).val(GProfile.get(m))}}}},"wh=
ee":function(){if(Gravatar.whee.didWhee){return}Gravatar.whee.didWhee=3Dt=
rue;if(document.styleSheets[0].addRule){document.styleSheets[0].addRule('=
.grav-tag a','background-position: 22px 100% =
!important')}else{jQuery('.grav-tag a').css('background-position','22px =
100%')}jQuery('img[src*=3D"gravatar.com/"]').addClass('grav-whee').css({'=
-webkit-box-shadow':'1px 1px 3px #aaa','-moz-box-shadow':'1px 1px 3px =
#aaa','box-shadow':'1px 1px 3px #aaa','border':'2px white solid'});var =
i=3D0;setInterval(function(){jQuery('.grav-whee').css({'-webkit-transform=
':'rotate(-'+i+'deg) scale(1.3)','-moz-transform':'rotate(-'+i+'deg) =
scale(1.3)','transform':'rotate(-'+i+'deg) =
scale(1.3)'});i++;if(360=3D=3Di){i=3D0}},6);return =
false},"stat":function(stat,e){Gravatar.stats_queue.push(stat);if(e){var =
diffWindow=3De.metaKey||'_blank'=3D=3DjQuery(e.currentTarget).attr('targe=
t');Gravatar.send_stats(function(){if(diffWindow){return}document.locatio=
n=3De.currentTarget.href});return =
diffWindow}if(Gravatar.stats_queue.length>10){Gravatar.send_stats()}},"se=
nd_stats":function(cb){if(!document.images){return}var =
stats=3DGravatar.stats_queue;if(!stats.length){return}var date=3Dnew =
Date();Gravatar.stats_queue=3D[];url_prefix=3D'http://stats';if('https:'=3D=
=3Dwindow.location.protocol)url_prefix=3D'https://ssl-stats';var =
url=3Durl_prefix+'.wordpress.com/g.gif?v=3Dwpcom2&x_grav-hover=3D'+stats.=
join(',')+'&rand=3D'+Math.random().toString()+'-'+date.getTime();var =
img=3Dnew =
Image(1,1);if(jQuery.isFunction(cb)){img.onload=3Dcb}img.src=3Durl}};var =
GProfile=3D{"data":{},"init":function(data){if('fetching'=3D=3Ddata){retu=
rn false}if('undefined'=3D=3Dtypeof(data.entry[0])){return =
false}GProfile.data=3Ddata.entry[0]},"get":function(attr){if(-1!=3Dattr.i=
ndexOf('.')){parts=3Dattr.split(/\./);if(GProfile.data[parts[0]]){if(GPro=
file.data[parts[0]][parts[1]]){return =
GProfile.data[parts[0]][parts[1]]}for(i=3D0,s=3DGProfile.data[parts[0]].l=
ength;i<s;i++){if(GProfile.data[parts[0]][i].type&&parts[1]=3D=3DGProfile=
.data[parts[0]][i].type||GProfile.data[parts[0]][i].shortname&&parts[1]=3D=
=3DGProfile.data[parts[0]][i].shortname||GProfile.data[parts[0]][i].prima=
ry&&parts[1]=3D=3D'primary'){return =
GProfile.data[parts[0]][i]}}}return''}if(GProfile.data[attr]){return =
GProfile.data[attr]}if('url'=3D=3Dattr){if(GProfile.data.urls.length){ret=
urn GProfile.data.urls[0].value}}return''}};var hexcase=3D0;var =
b64pad=3D"";var chrsz=3D8;function hex_md5(s){return =
binl2hex(core_md5(str2binl(s),s.length*chrsz))}function =
b64_md5(s){return =
binl2b64(core_md5(str2binl(s),s.length*chrsz))}function =
str_md5(s){return =
binl2str(core_md5(str2binl(s),s.length*chrsz))}function =
hex_hmac_md5(a,b){return binl2hex(core_hmac_md5(a,b))}function =
b64_hmac_md5(a,b){return binl2b64(core_hmac_md5(a,b))}function =
str_hmac_md5(a,b){return binl2str(core_hmac_md5(a,b))}function =
md5_vm_test(){return =
hex_md5("abc")=3D=3D"900150983cd24fb0d6963f7d28e17f72"}function =
core_md5(x,e){x[e>>5]|=3D0x80<<((e)%32);x[(((e+64)>>>9)<<4)+14]=3De;var =
a=3D1732584193;var b=3D-271733879;var c=3D-1732584194;var =
d=3D271733878;for(var i=3D0;i<x.length;i+=3D16){var f=3Da;var g=3Db;var =
h=3Dc;var =
j=3Dd;a=3Dmd5_ff(a,b,c,d,x[i+0],7,-680876936);d=3Dmd5_ff(d,a,b,c,x[i+1],1=
2,-389564586);c=3Dmd5_ff(c,d,a,b,x[i+2],17,606105819);b=3Dmd5_ff(b,c,d,a,=
x[i+3],22,-1044525330);a=3Dmd5_ff(a,b,c,d,x[i+4],7,-176418897);d=3Dmd5_ff=
(d,a,b,c,x[i+5],12,1200080426);c=3Dmd5_ff(c,d,a,b,x[i+6],17,-1473231341);=
b=3Dmd5_ff(b,c,d,a,x[i+7],22,-45705983);a=3Dmd5_ff(a,b,c,d,x[i+8],7,17700=
35416);d=3Dmd5_ff(d,a,b,c,x[i+9],12,-1958414417);c=3Dmd5_ff(c,d,a,b,x[i+1=
0],17,-42063);b=3Dmd5_ff(b,c,d,a,x[i+11],22,-1990404162);a=3Dmd5_ff(a,b,c=
,d,x[i+12],7,1804603682);d=3Dmd5_ff(d,a,b,c,x[i+13],12,-40341101);c=3Dmd5=
_ff(c,d,a,b,x[i+14],17,-1502002290);b=3Dmd5_ff(b,c,d,a,x[i+15],22,1236535=
329);a=3Dmd5_gg(a,b,c,d,x[i+1],5,-165796510);d=3Dmd5_gg(d,a,b,c,x[i+6],9,=
-1069501632);c=3Dmd5_gg(c,d,a,b,x[i+11],14,643717713);b=3Dmd5_gg(b,c,d,a,=
x[i+0],20,-373897302);a=3Dmd5_gg(a,b,c,d,x[i+5],5,-701558691);d=3Dmd5_gg(=
d,a,b,c,x[i+10],9,38016083);c=3Dmd5_gg(c,d,a,b,x[i+15],14,-660478335);b=3D=
md5_gg(b,c,d,a,x[i+4],20,-405537848);a=3Dmd5_gg(a,b,c,d,x[i+9],5,56844643=
8);d=3Dmd5_gg(d,a,b,c,x[i+14],9,-1019803690);c=3Dmd5_gg(c,d,a,b,x[i+3],14=
,-187363961);b=3Dmd5_gg(b,c,d,a,x[i+8],20,1163531501);a=3Dmd5_gg(a,b,c,d,=
x[i+13],5,-1444681467);d=3Dmd5_gg(d,a,b,c,x[i+2],9,-51403784);c=3Dmd5_gg(=
c,d,a,b,x[i+7],14,1735328473);b=3Dmd5_gg(b,c,d,a,x[i+12],20,-1926607734);=
a=3Dmd5_hh(a,b,c,d,x[i+5],4,-378558);d=3Dmd5_hh(d,a,b,c,x[i+8],11,-202257=
4463);c=3Dmd5_hh(c,d,a,b,x[i+11],16,1839030562);b=3Dmd5_hh(b,c,d,a,x[i+14=
],23,-35309556);a=3Dmd5_hh(a,b,c,d,x[i+1],4,-1530992060);d=3Dmd5_hh(d,a,b=
,c,x[i+4],11,1272893353);c=3Dmd5_hh(c,d,a,b,x[i+7],16,-155497632);b=3Dmd5=
_hh(b,c,d,a,x[i+10],23,-1094730640);a=3Dmd5_hh(a,b,c,d,x[i+13],4,68127917=
4);d=3Dmd5_hh(d,a,b,c,x[i+0],11,-358537222);c=3Dmd5_hh(c,d,a,b,x[i+3],16,=
-722521979);b=3Dmd5_hh(b,c,d,a,x[i+6],23,76029189);a=3Dmd5_hh(a,b,c,d,x[i=
+9],4,-640364487);d=3Dmd5_hh(d,a,b,c,x[i+12],11,-421815835);c=3Dmd5_hh(c,=
d,a,b,x[i+15],16,530742520);b=3Dmd5_hh(b,c,d,a,x[i+2],23,-995338651);a=3D=
md5_ii(a,b,c,d,x[i+0],6,-198630844);d=3Dmd5_ii(d,a,b,c,x[i+7],10,11268914=
15);c=3Dmd5_ii(c,d,a,b,x[i+14],15,-1416354905);b=3Dmd5_ii(b,c,d,a,x[i+5],=
21,-57434055);a=3Dmd5_ii(a,b,c,d,x[i+12],6,1700485571);d=3Dmd5_ii(d,a,b,c=
,x[i+3],10,-1894986606);c=3Dmd5_ii(c,d,a,b,x[i+10],15,-1051523);b=3Dmd5_i=
i(b,c,d,a,x[i+1],21,-2054922799);a=3Dmd5_ii(a,b,c,d,x[i+8],6,1873313359);=
d=3Dmd5_ii(d,a,b,c,x[i+15],10,-30611744);c=3Dmd5_ii(c,d,a,b,x[i+6],15,-15=
60198380);b=3Dmd5_ii(b,c,d,a,x[i+13],21,1309151649);a=3Dmd5_ii(a,b,c,d,x[=
i+4],6,-145523070);d=3Dmd5_ii(d,a,b,c,x[i+11],10,-1120210379);c=3Dmd5_ii(=
c,d,a,b,x[i+2],15,718787259);b=3Dmd5_ii(b,c,d,a,x[i+9],21,-343485551);a=3D=
safe_add(a,f);b=3Dsafe_add(b,g);c=3Dsafe_add(c,h);d=3Dsafe_add(d,j)}retur=
n Array(a,b,c,d)}function md5_cmn(q,a,b,x,s,t){return =
safe_add(bit_rol(safe_add(safe_add(a,q),safe_add(x,t)),s),b)}function =
md5_ff(a,b,c,d,x,s,t){return md5_cmn((b&c)|((~b)&d),a,b,x,s,t)}function =
md5_gg(a,b,c,d,x,s,t){return md5_cmn((b&d)|(c&(~d)),a,b,x,s,t)}function =
md5_hh(a,b,c,d,x,s,t){return md5_cmn(b^c^d,a,b,x,s,t)}function =
md5_ii(a,b,c,d,x,s,t){return md5_cmn(c^(b|(~d)),a,b,x,s,t)}function =
core_hmac_md5(a,b){var =
c=3Dstr2binl(a);if(c.length>16)c=3Dcore_md5(c,a.length*chrsz);var =
d=3DArray(16),opad=3DArray(16);for(var =
i=3D0;i<16;i++){d[i]=3Dc[i]^0x36363636;opad[i]=3Dc[i]^0x5C5C5C5C}var =
e=3Dcore_md5(d.concat(str2binl(b)),512+b.length*chrsz);return =
core_md5(opad.concat(e),512+128)}function safe_add(x,y){var =
a=3D(x&0xFFFF)+(y&0xFFFF);var =
b=3D(x>>16)+(y>>16)+(a>>16);return(b<<16)|(a&0xFFFF)}function =
bit_rol(a,b){return(a<<b)|(a>>>(32-b))}function str2binl(a){var =
b=3DArray();var c=3D(1<<chrsz)-1;for(var =
i=3D0;i<a.length*chrsz;i+=3Dchrsz)b[i>>5]|=3D(a.charCodeAt(i/chrsz)&c)<<(=
i%32);return b}function binl2str(a){var b=3D"";var =
c=3D(1<<chrsz)-1;for(var =
i=3D0;i<a.length*32;i+=3Dchrsz)b+=3DString.fromCharCode((a[i>>5]>>>(i%32)=
)&c);return b}function binl2hex(a){var =
b=3Dhexcase?"0123456789ABCDEF":"0123456789abcdef";var c=3D"";for(var =
i=3D0;i<a.length*4;i++){c+=3Db.charAt((a[i>>2]>>((i%4)*8+4))&0xF)+b.charA=
t((a[i>>2]>>((i%4)*8))&0xF)}return c}function binl2b64(a){var =
b=3D"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";va=
r c=3D"";for(var i=3D0;i<a.length*4;i+=3D3){var =
d=3D(((a[i>>2]>>8*(i%4))&0xFF)<<16)|(((a[i+1>>2]>>8*((i+1)%4))&0xFF)<<8)|=
((a[i+2>>2]>>8*((i+2)%4))&0xFF);for(var =
j=3D0;j<4;j++){if(i*8+j*6>a.length*32)c+=3Db64pad;else =
c+=3Db.charAt((d>>6*(3-j))&0x3F)}}return c};
------=_NextPart_000_0000_01CE3A81.CA9C5BC0
Content-Type: application/javascript
Content-Transfer-Encoding: quoted-printable
Content-Location: http://s0.wp.com/wp-content/mu-plugins/gravatar-hovercards/wpgroho.js?m=1351637563g

WPGroHo=3DjQuery.extend({my_hash:'',data:{},renderers:{},syncProfileData:=
function(hash,id){if(!WPGroHo.data[hash]){WPGroHo.data[hash]=3D{};a=3DjQu=
ery('div.grofile-hash-map-'+hash+' =
span').each(function(){WPGroHo.data[hash][this.className]=3DjQuery(this).=
text();});}=0A=
WPGroHo.appendProfileData(WPGroHo.data[hash],hash,id);},appendProfileData=
:function(data,hash,id){for(var key in =
data){if(jQuery.isFunction(WPGroHo.renderers[key])){return =
WPGroHo.renderers[key](data[key],hash,id,key);}=0A=
jQuery('#'+id).find('h4').after(jQuery('<p class=3D"grav-extra '+key+'" =
/>').html(data[key]));}}},WPGroHo);
------=_NextPart_000_0000_01CE3A81.CA9C5BC0
Content-Type: application/javascript
Content-Transfer-Encoding: quoted-printable
Content-Location: http://s1.wp.com/wp-content/mu-plugins/highlander-comments/script.js?m=1364417154g

var =
HighlanderComments=3DjQuery.extend(HighlanderComments,{autosaveInterval:f=
alse,commentList:null,initialHeight:70,cookies:{facebook:'wpc_fbc',twitte=
r:'wpc_tc',wordpress:'wpc_wpc'},popups:{facebook:',height=3D400,width=3D6=
00',twitter:',height=3D515,width=3D600',wordpress:',height=3D500,width=3D=
500'},currentParent:false,currentParentId:false,currentParentMargins:{},r=
esizeCallback:function(){},init:function(){jQuery('#respond').addClass('j=
s');HighlanderComments.commentList=3DjQuery('#thecomments, .thecomments, =
#commentlist, #comment-list, #comments-list, .commentlist, =
.comment-list, .comments-list, =
.com-list').last();jQuery('#comment-form-nascar =
a').click(HighlanderComments.clickService);jQuery('#postas-wordpress').cl=
ick(HighlanderComments.clickExternalTab);jQuery('#postas-facebook, =
#labelto-facebook').click(HighlanderComments.clickExternalTab);jQuery('#p=
ostas-twitter, =
#labelto-twitter').click(HighlanderComments.clickExternalTab);jQuery('#la=
belto-wordpress').click(HighlanderComments.checkPostToWordPress);jQuery('=
#comment-form-post-to-edit =
a').click(HighlanderComments.editShareText);jQuery(window).resize(Highlan=
derComments.toggleShareLabels);HighlanderComments.toggleShareLabels();Hig=
hlanderComments.restoreComment();jQuery.each(jQuery('.comment-form-field =
input, =
textarea#comment'),function(){if(jQuery(this).val()!=3D=3D''){HighlanderC=
omments.hideLabels(jQuery(this));}});jQuery('div.comment-form-fields =
input').change(function(){HighlanderComments.toggleLabel(jQuery(this));})=
.focus(function(){HighlanderComments.hideLabels(jQuery(this));}).blur(fun=
ction(){HighlanderComments.showLabels(jQuery(this));});jQuery('div.commen=
t-form-fields =
label').click(function(){HighlanderComments.hideLabels(jQuery(this).paren=
t().children('.comment-form-input =
input'));});jQuery('#email').blur(function(){HighlanderComments.updateAva=
tarWithGravatar('#email');if(!jQuery('#author').val()){Gravatar.autofill(=
jQuery(this).val(),{'displayName':'author','url':'url'});var =
afd=3DGravatar.autofill_data;Gravatar.autofill_data=3Dfunction(hash){afd.=
call(Gravatar,hash);jQuery('input#url').change();jQuery('input#author').c=
hange().click();};}});jQuery('textarea#comment')=0A=
.autoResize({animate:false,animateCallback:HighlanderComments.resizeCallb=
ack})=0A=
.trigger('change.dynSiz')=0A=
.focus(function(){HighlanderComments.hideLabels(jQuery(this));})=0A=
.blur(function(){HighlanderComments.showLabels(jQuery(this));})=0A=
.keydown(function(e){if('undefined'!=3Dtypeof =
e.keyCode&&9=3D=3De.keyCode){e.preventDefault();if('guest'=3D=3DjQuery('#=
hc_post_as').val()){if(1=3D=3DHighlanderComments.comment_registration){jQ=
uery('#postas-wordpress').focus();}else{jQuery('#email').focus();}}else{j=
Query('#comment-submit').focus();}}})=0A=
.keyup(function(e){HighlanderComments.fillShareText(jQuery(this));});jQue=
ry('#commentform').submit(function(){var =
verified=3Dtrue,email,author;if(''=3D=3D=3DjQuery('textarea#comment').val=
()){jQuery('label[for=3D"comment"]').fadeOut('fast',function(){jQuery(thi=
s).text(HighlanderComments.enterACommentError).fadeIn('fast').addClass('e=
rror');});jQuery('#comment-form-comment').addClass('error');jQuery('texta=
rea#comment').focus(function(){jQuery(this).parent('#comment-form-comment=
').removeClass('error');});verified=3Dfalse;}=0A=
if('guest'=3D=3DjQuery('#hc_post_as').val()&&(jQuery('#comment-form-guest=
 label span[class=3D"required"]').size()||jQuery('#comment-form-guest =
label[class=3D"error"]').size())){email=3DjQuery('#email').val();if(''=3D=
=3D=3Demail||!email.match(/^.*@.*\..*$/)){jQuery('label[for=3D"email"]').=
fadeOut('fast',function(){var =
error;if(''=3D=3Demail){error=3DHighlanderComments.enterEmailError;}else{=
error=3D'<span =
class=3D"nopublish">'+HighlanderComments.invalidEmailError+'</span>';}=0A=
jQuery(this).html(error).css('opacity',1).fadeIn('fast').addClass('error'=
);});jQuery('div.comment-form-email =
.comment-form-input').addClass('error');jQuery('input#email').focus(funct=
ion(){jQuery(this).parent().removeClass('error');});verified=3Dfalse;}=0A=
author=3DjQuery('#author').val();if(''=3D=3D=3Dauthor){jQuery('label[for=3D=
"author"]').fadeOut('fast',function(){jQuery(this).text(HighlanderComment=
s.enterAuthorError).fadeIn('fast').addClass('error');});jQuery('div.comme=
nt-form-author =
.comment-form-input').addClass('error');jQuery('input#author').focus(func=
tion(){jQuery(this).parent().removeClass('error');});verified=3Dfalse;}}=0A=
if('1'=3D=3DHighlanderComments.comment_registration&&'guest'=3D=3DjQuery(=
'#hc_post_as').val()){jQuery('#comment-form-nascar > =
p').addClass('error').fadeOut('fast',function(){jQuery(this).fadeIn('fast=
');});verified=3Dfalse;}=0A=
HighlanderComments.writeCookie('hc_post_as',jQuery('#hc_post_as').val(),7=
,'.wordpress.com');if(!verified){return false;}=0A=
HighlanderComments.clickSubmit();return =
true;});if('1'=3D=3DHighlanderComments.comment_registration){jQuery('#com=
ment-form-guest').hide();if(!HighlanderComments.isJetpack&&!HighlanderCom=
ments.userIsLoggedIn){HighlanderComments.clickGuestTab();jQuery('#comment=
-form-wordpress').removeClass('selected');jQuery('#hc_post_as').val('gues=
t');}}else{if(HighlanderComments.userIsLoggedIn&&jQuery('#comment-form-wo=
rdpress.selected').length){jQuery('#comment-form-guest').slideUp('fast',f=
unction(){HighlanderComments.clickExternalTab('wordpress');});}}=0A=
if(jQuery('.comment-form-service.selected').not('#comment-form-guest.sele=
cted').length){jQuery('#comment-form-nascar').hide();}=0A=
if('undefined'!=3D=3Dtypeof =
addComment){HighlanderComments._moveForm=3DaddComment.moveForm;addComment=
.moveForm=3DHighlanderComments.moveForm;}=0A=
jQuery('#comment-form-guest =
.comment-form-avatar').hover(function(){pos=3DjQuery(this).offset();style=
=3D'top:'+(pos.top-10)+'px;left:'+(pos.left+35)+'px;';jQuery('body').appe=
nd('<div id=3D"hltt-grav" class=3D"highlander-tooltip" =
style=3D"'+style+'">'+HighlanderComments.gravatarFromEmail+'</div>');},fu=
nction(){jQuery('#hltt-grav').fadeOut('fast',function(){jQuery(this).remo=
ve();jQuery('.highlander-tooltip').remove();});});jQuery('#comment-form-n=
ascar =
ul').hover(function(){pos=3DjQuery(this).offset();style=3D'top:'+(pos.top=
-12)+'px;left:'+(pos.left-125)+'px;';jQuery('body').append('<div =
id=3D"hltt-auth" class=3D"highlander-tooltip" =
style=3D"'+style+'">'+HighlanderComments.logInToExternalAccount+'</div>')=
;},function(){jQuery('#hltt-auth').fadeOut('fast',function(){jQuery(this)=
.remove();jQuery('.highlander-tooltip').remove();});});},_moveForm:null,m=
oveForm:function(commId,parentId,respondId,postId){if(null=3D=3D=3DHighla=
nderComments._moveForm){return;}=0A=
var =
t=3Dthis,r=3Dfalse,respond=3DjQuery('#'+respondId).css({marginLeft:0,marg=
inRight:0}),w,wTop,commElement,rHeight,cTop,rTop;if(HighlanderComments.cu=
rrentParent){if(parentId=3D=3D=3DHighlanderComments.currentParentId){retu=
rn false;}=0A=
w=3DjQuery(window);wTop=3Dw.scrollTop();commElement=3DjQuery('#'+commId);=
cTop=3DcommElement.offset().top;rTop=3Drespond.offset().top;if(rTop<=3DcT=
op){rHeight=3Drespond.outerHeight(true);respond.before(jQuery('<div =
id=3D"highlander-placeholder" =
/>').css({margin:0,padding:0,border:0,height:rHeight,visibility:'hidden',=
position:respond.css('position')}));}=0A=
r=3DHighlanderComments._moveForm.call(t,commId,parentId,respondId,postId)=
;if(false!=3D=3Dr){return r;}=0A=
HighlanderComments.currentParent.stop(true,true).css(HighlanderComments.c=
urrentParentMargins);jQuery('#highlander-placeholder').remove();if(rTop<=3D=
cTop){jQuery(window).scrollTop(wTop-rHeight);}=0A=
HighlanderComments.moveFormNow.call(t,commId,parentId,respondId);}else{r=3D=
HighlanderComments._moveForm.call(t,commId,parentId,respondId,postId);if(=
false=3D=3D=3Dr){HighlanderComments.moveFormNow.call(t,commId,parentId,re=
spondId);}}=0A=
return =
r;},moveFormNow:function(commId,parentId,respondId){HighlanderComments.cu=
rrentParent=3DjQuery('#comment-'+parentId).parents('.highlander-comment')=
.andSelf().filter('.highlander-comment').last();if(!HighlanderComments.cu=
rrentParent.size()){HighlanderComments.currentParent=3DjQuery('#comment-'=
+parentId).parents('.comment').andSelf().filter('.comment').last();}=0A=
HighlanderComments.currentParentId=3DparentId;var =
respond=3DjQuery('#'+respondId);if(!HighlanderComments.currentParent.find=
(respond).size()){var =
betterParent=3DHighlanderComments.currentParent.parents('.children:first'=
);if(!betterParent.size()){betterParent=3DHighlanderComments.currentParen=
t.parents('.highlander-comment:first');if(!betterParent.size()){betterPar=
ent=3DHighlanderComments.currentParent.parents('.comment:first');}}=0A=
if(betterParent.size()){HighlanderComments.currentParent=3DbetterParent;}=
}=0A=
HighlanderComments.currentParentMargins=3D{backgroundColor:HighlanderComm=
ents.currentParent.css('backgroundColor'),marginLeft:HighlanderComments.c=
urrentParent.css('marginLeft'),marginRight:HighlanderComments.currentPare=
nt.css('marginRight')};var =
oldOff,newOff,offOrder,autoWidth=3Dfalse;if('ltr'=3D=3D=3DHighlanderComme=
nts.currentParent.css('direction')){offOrder=3D['Right','Left'];}else{off=
Order=3D['Left','Right'];}=0A=
jQuery.each(offOrder,function(i,v){if('0px'=3D=3D=3DHighlanderComments.cu=
rrentParentMargins['margin'+v]){oldOff=3DHighlanderComments.currentParent=
.offset().left;if('Right'=3D=3D=3Dv){oldOff+=3DHighlanderComments.current=
Parent.outerWidth();}=0A=
HighlanderComments.currentParent.css('margin'+v,0);newOff=3DHighlanderCom=
ments.currentParent.offset().left;if('Right'=3D=3D=3Dv){newOff+=3DHighlan=
derComments.currentParent.outerWidth();}=0A=
if(oldOff!=3D=3DnewOff){newOff=3D'Right'=3D=3D=3Dv?newOff-oldOff:oldOff-n=
ewOff;HighlanderComments.currentParent.css('margin'+v,newOff);HighlanderC=
omments.currentParentMargins['margin'+v]=3DnewOff;autoWidth=3Dtrue;}}});i=
f(autoWidth){HighlanderComments.currentParent.css('width','auto');Highlan=
derComments.currentParentMargins.width=3D'auto';}=0A=
var =
rgbaTransparent=3D/rgba.*,\s*0\s*\)/,cp,bg,bgi;if('transparent'=3D=3D=3DH=
ighlanderComments.currentParentMargins.backgroundColor||HighlanderComment=
s.currentParentMargins.backgroundColor.match(rgbaTransparent)){cp=3DHighl=
anderComments.currentParent.get(0);bg=3D'transparent';bgi=3DHighlanderCom=
ments.currentParent.css('backgroundImage');while('none'=3D=3D=3Dbgi&&cp.p=
arentNode&&cp.parentNode!=3Ddocument&&('transparent'=3D=3D=3Dbg||bg.match=
(rgbaTransparent))){cp=3Dcp.parentNode;bg=3DjQuery(cp);bgi=3Dbg.css('back=
groundImage');bg=3Dbg.css('backgroundColor');}=0A=
HighlanderComments.currentParent.css('backgroundColor',bg);}=0A=
var =
cancel=3Ddocument.getElementById('cancel-comment-reply-link'),listOffsetS=
ource=3DHighlanderComments.commentList,listOffset,parentOffset=3DHighland=
erComments.currentParent.offset(),currentParentMargins=3DHighlanderCommen=
ts.currentParentMargins,redoMargins=3Dfalse,grandWidth;cp=3DHighlanderCom=
ments.currentParent;while(!cp.is(HighlanderComments.commentList)&&!cp.is(=
document)){if('hidden'=3D=3D=3Dcp.css('overflow')||'hidden'=3D=3D=3Dcp.cs=
s('overflow-x')){listOffsetSource=3Dcp;break;}=0A=
cp=3Dcp.parent();}=0A=
listOffset=3DlistOffsetSource.offset();HighlanderComments._unmoveForm=3Dc=
ancel.onclick;cancel.onclick=3Dfunction(){return =
HighlanderComments.unmoveForm.call(this);};if(-1<currentParentMargins.mar=
ginLeft.toString().indexOf('%')){grandWidth=3DHighlanderComments.currentP=
arent.parent().width();currentParentMargins.marginLeft=3DparseFloat(curre=
ntParentMargins.marginLeft)/100*grandWidth;redoMargins=3Dtrue;}=0A=
if(-1<currentParentMargins.marginRight.toString().indexOf('%')){grandWidt=
h=3DHighlanderComments.currentParent.parent().width();currentParentMargin=
s.marginRight=3DparseFloat(currentParentMargins.marginRight)/100*grandWid=
th;redoMargins=3Dtrue;}=0A=
if(redoMargins){HighlanderComments.currentParent.css(currentParentMargins=
);}=0A=
listOffset.right=3DlistOffset.left+listOffsetSource.outerWidth();parentOf=
fset.left-=3DparseInt(HighlanderComments.currentParent.css('margin-left')=
,10);parentOffset.right=3DparentOffset.left+HighlanderComments.currentPar=
ent.outerWidth(true);respond.hide();HighlanderComments.currentParent.anim=
ate({marginLeft:'-=3D'+(parentOffset.left-listOffset.left).toString(),mar=
ginRight:'-=3D'+(listOffset.right-parentOffset.right).toString()},350,fun=
ction(){respond.slideDown(350,function(){jQuery('#'+commId+' =
.comment-reply-link:first').focus();jQuery('#comment').focus();Highlander=
Comments.resizeCallback();});respond.children('form').after('<div =
class=3D"clear" =
id=3D"threaded-clear"></div>');});},_unmoveForm:null,unmoveForm:function(=
){var =
r=3DHighlanderComments._unmoveForm.call(this);if(false!=3D=3Dr){return =
r;}=0A=
HighlanderComments.currentParent.stop(true,true).animate(HighlanderCommen=
ts.currentParentMargins,350,function(){HighlanderComments.currentParent.c=
ss(HighlanderComments.currentParentMargins);HighlanderComments.currentPar=
ent=3DHighlanderComments.currentParentId=3Dfalse;});jQuery('#respond').st=
op(true,true).show();jQuery('#respond =
div#threaded-clear').remove();HighlanderComments.resizeCallback();return =
r;},HTMLToText:function(string){return jQuery('<span =
/>').html(string).text();},autosaveComment:function(){var oneDay=3Dnew =
Date();oneDay.setTime(oneDay.getTime()+86400000);document.cookie=3D'comme=
nt-'+HighlanderComments.postID+'=3D'+encodeURIComponent(jQuery('#comment'=
).val())+'; expires=3D'+oneDay.toGMTString()+'; =
path=3D/';},unsaveComment:function(){var oneDay=3Dnew =
Date();oneDay.setTime(oneDay.getTime()-86400000);document.cookie=3D'comme=
nt-'+HighlanderComments.postID+'=3D ; =
expires=3D'+oneDay.toGMTString()+'; =
path=3D/';},restoreComment:function(){var =
parts=3Ddocument.cookie.split(';'),part;jQuery.each(parts,function(i){par=
t=3Dparts[i].split('=3D');if('comment-'+HighlanderComments.postID=3D=3D=3D=
jQuery.trim(part[0])){if('undefined'!=3D=3Dtypeof =
part[1]&&'undefined'!=3D=3Dpart[1]&&''!=3D=3DdecodeURIComponent(part[1]))=
{jQuery('#comment').val(decodeURIComponent(part[1]));}=0A=
return;}});},switchAccount:function(){jQuery('.comment-form-service').rem=
oveClass('selected').hide();jQuery('#hc_post_as').val('guest');jQuery('#c=
omment-form-nascar > =
p').removeClass('error');if('1'=3D=3DHighlanderComments.comment_registrat=
ion){jQuery('#comment-form-nascar').show();jQuery('#comment-form-guest').=
hide();HighlanderComments.resizeCallback();}else{jQuery('#comment-form-na=
scar').show();jQuery('#comment-form-guest').slideDown('fast',HighlanderCo=
mments.resizeCallback);HighlanderComments.clickGuestTab();}},clickService=
:function(e){e.preventDefault();var =
tab=3Dthis.href.replace(/^.*#/,'#').split(':');if('#comment-form-load-ser=
vice'=3D=3D=3Dtab[0]&&tab[1]){jQuery('#comment-form-load-service =
p').text(HighlanderComments.connectingToText.replace('%s',tab[1]));}else{=
jQuery('#hc_post_as').val(tab[0].split('-').pop());}=0A=
jQuery('.comment-form-service')=0A=
.css('visibility','hidden')=0A=
.show()=0A=
.removeClass('selected')=0A=
.filter(tab[0])=0A=
.css('visibility','visible')=0A=
.fadeIn('fast')=0A=
.end()=0A=
.not(tab[0])=0A=
.hide()=0A=
.css('visibility','visible');jQuery('#comment-form-nascar =
li.selected').removeClass('selected');jQuery(this).parent().addClass('sel=
ected');HighlanderComments.resizeCallback();},clickGuestTab:function(e){i=
f('1'=3D=3DHighlanderComments.comment_registration){jQuery('#comment-form=
-guest').hide();}=0A=
if(jQuery('#email').length&&-1<jQuery('#email').val().indexOf('@twitter.e=
xample.com')){jQuery('#email').val('').blur();}=0A=
HighlanderComments.updateAvatarWithGravatar('#email');jQuery('#comment-fo=
rm-subscribe').css('opacity','1').find('input').removeAttr('disabled');Hi=
ghlanderComments.resizeCallback();},checkPostToWordPress:function(e){High=
landerComments.clickExternalTab('wordpress');jQuery('#wordpress-login-fir=
st').show();},updateAvatarWithGravatar:function(e){var =
grav_base=3D('https:'=3D=3D=3Dlocation.protocol?'https://secure':'http://=
www')+'.gravatar.com/avatar/';if(jQuery(e).length){jQuery('#comment-form-=
guest .comment-form-avatar =
img').attr('src',grav_base+Gravatar.md5(jQuery.trim(jQuery(e).val().toLow=
erCase()))+'?s=3D25&d=3D'+encodeURIComponent(HighlanderComments.gravDefau=
lt));}else{jQuery('#comment-form-guest .comment-form-avatar =
img').attr('src',grav_base+'ad516503a11cd5ca435acc9bb6523536?s=3D25&force=
default=3D1&d=3D'+encodeURIComponent(HighlanderComments.gravDefault));}},=
getServiceData:function(service){var =
data=3DHighlanderComments.readCookie(HighlanderComments.cookies[service])=
;if(null=3D=3D=3Ddata||'undefined'=3D=3D=3Dtypeof =
data.access_token||!data.access_token){return false;}=0A=
return =
data;},ext_win:false,ext_win_check:false,pollExternalWindow:function(serv=
ice,from_tab){if(!HighlanderComments.ext_win||HighlanderComments.ext_win.=
closed){if(HighlanderComments.getServiceData(service)){HighlanderComments=
.doExternalLoggedIn(service);return;}=0A=
HighlanderComments.doExternalCanceled(service,from_tab);HighlanderComment=
s.ext_win=3Dfalse;clearInterval(HighlanderComments.ext_win_check);}},canc=
elExternalWindow:function(){if(HighlanderComments.ext_win){HighlanderComm=
ents.ext_win.close();}=0A=
HighlanderComments.doExternalCanceled(jQuery('#hc_post_as').val(),true);}=
,clickExternalTab:function(e){if('undefined'=3D=3Dtypeof e){return;}=0A=
jQuery('#comment-form-guest').slideUp('fast',function(){jQuery('#comment-=
form-nascar').hide();HighlanderComments.resizeCallback();clearInterval(Hi=
ghlanderComments.ext_win_check);jQuery('.highlander-tooltip').remove();va=
r from_tab=3D1;if('string'=3D=3Dtypeof e){var service=3De;}else{var =
service=3De.currentTarget.id.split('-')[1];if(e.currentTarget.nodeName!=3D=
'A'){from_tab=3D0;}}=0A=
if(null!=3DHighlanderComments.readCookie(HighlanderComments.cookies[servi=
ce])&&('wordpress'=3D=3Dservice&&HighlanderComments.userIsLoggedIn||'word=
press'!=3Dservice)){if(from_tab){HighlanderComments.doExternalLoggedIn(se=
rvice);}}else{HighlanderComments.ext_win=3Dwindow.open(HighlanderComments=
.connectURL+'&service=3D'+service,'highconn','status=3D0,toolbar=3D0,loca=
tion=3D1,menubar=3D0,directories=3D0,resizable=3D1,scrollbars=3D0'+Highla=
nderComments.popups[service]);HighlanderComments.ext_win_check=3DsetInter=
val("HighlanderComments.pollExternalWindow( '"+service+"', "+from_tab+" =
)",100);}});},doExternalLoggedIn:function(service){clearInterval(Highland=
erComments.ext_win_check);var =
data=3DHighlanderComments.getServiceData(service);if('object'!=3D=3Dtypeo=
f data){return;}=0A=
if('wordpress'=3D=3Dservice){jQuery('#comment-form-subscribe').css('opaci=
ty','1').find('input').removeAttr('disabled');jQuery('#comment-form-'+ser=
vice+' .comment-form-avatar =
img').attr('src',data.avatar);HighlanderComments.userIsLoggedIn=3Dtrue;if=
(!HighlanderComments.isJetpack){jQuery('body').append('<iframe =
class=3D"highlander-auth-init" height=3D"1" width=3D"1" =
style=3D"display:none;" =
src=3D"'+HighlanderComments.homeURL+'highlander.login/" =
/>');}}else{if('twitter'=3D=3Dservice){jQuery('#comment-form-subscribe').=
css('opacity','0.5').find('input').attr('disabled','disabled').removeAttr=
('checked');}=0A=
jQuery('#comment-form-'+service+' .comment-form-avatar img')=0A=
.attr('src',function(){var =
split,host,path,query,url;try{if(data.avatar.match(/^(https?:)?\/\/i[012]=
\.wp\.com\//)){return data.avatar.replace(/^https?:/,location.protocol);}=0A=
if(data.avatar.match(/^(https?:)?\/\/(.*?\.)gravatar\.com\//)){return =
data.avatar.replace(/^https?:/,location.protocol);}=0A=
split=3Ddata.avatar.split('#');split=3Dsplit[0].split('?');query=3Dsplit[=
1];split=3Dsplit[0].split('//');split=3Dsplit[1].split('/');host=3Dsplit[=
0];path=3Dsplit.slice(1).join('/');url=3Dlocation.protocol+'//i0.wp.com/'=
+host+'/'+path+'?';if('graph.facebook.com'=3D=3D=3Dhost&&query.length){ur=
l+=3D'q=3D'+encodeURIComponent(query)+'&';}=0A=
return url+'resize=3D25%2C25';}catch(error){return data.avatar;}});}=0A=
jQuery('#email').val(data.email).change();jQuery('#author').val(data.name=
).change();jQuery('#url').val(data.link).change().click();jQuery('#'+serv=
ice+'-avatar').val(data.avatar);jQuery('#'+service+'-user_id').val(data.u=
id);jQuery('#'+service+'-access_token').val(data.access_token);jQuery('#h=
c_post_as').val(service);if(service=3D=3DjQuery('#comment-form-nascar =
li.selected =
a').attr('id').replace('postas-','')){jQuery('#comment-form-load-service'=
).hide();jQuery('#comment-form-'+service).show();jQuery('#comment-form-'+=
service+' .comment-form-posting-as =
strong').text(data.name+':');HighlanderComments.resizeCallback();}},doExt=
ernalCanceled:function(service,from_tab){if(from_tab){jQuery('#comment-fo=
rm-'+service+' .comment-form-avatar =
img').attr('src',('https:'=3D=3D=3Dlocation.protocol?'https://secure':'ht=
tp://www')+'.gravatar.com/avatar/ad516503a11cd5ca435acc9bb6523536?s=3D25&=
d=3D'+encodeURIComponent(HighlanderComments.gravDefault));jQuery('.commen=
t-meta-'+service).val('');jQuery('#postas-'+service+' =
span').html('&nbsp; &nbsp; =
&nbsp;');jQuery('#comment-form-'+service).hide();HighlanderComments.switc=
hAccount();}=0A=
jQuery('#postto-'+service).prop('checked',false);},doExternalLogout:funct=
ion(service){var =
hostname;if(-1!=3D=3Ddocument.location.hostname.indexOf('.wordpress.com')=
){hostname=3D'wordpress.com';}else{hostname=3Ddocument.location.hostname;=
}=0A=
HighlanderComments.writeCookie(HighlanderComments.cookies[service],'',-10=
,hostname);HighlanderComments.doExternalCanceled(service,true);if('wordpr=
ess'=3D=3Dservice){HighlanderComments.userIsLoggedIn=3Dfalse;jQuery('body=
').append('<iframe height=3D"1" width=3D"1" style=3D"display:none;" =
src=3D"'+HighlanderComments.logoutURL+'" =
/>');}},clickSubmit:function(e){HighlanderComments.unsaveComment();jQuery=
('#respond =
input#comment-submit').val(HighlanderComments.HTMLToText(HighlanderCommen=
ts.submittingText)).addClass('disabled').attr('disabled','disabled').wrap=
('<p id=3D"comment-form-submitting" =
/>');},toggleLabel:function(input){if(jQuery(window).width()&&jQuery(wind=
ow).width()<=3D450){return;}=0A=
if(!input.val().length){input.parents('div.comment-form-field').children(=
'label').css({opacity:1});}else{input.parents('div.comment-form-field').c=
hildren('label').css({opacity:0.05});}},hideLabels:function(input){if(jQu=
ery(window).width()=3D=3D0||jQuery(window).width()>450&&!input.attr('plac=
eholder')){input.parents('div.comment-form-field').children('label').anim=
ate({opacity:0},150,function(){jQuery(this).hide();});}=0A=
input.parent().addClass('active');},showLabels:function(input){if(jQuery(=
window).width()=3D=3D0||jQuery(window).width()>450&&!input.attr('placehol=
der')){if(!input.val().length){input.parents('div.comment-form-field').ch=
ildren('label').show().animate({opacity:1},150);}}=0A=
input.parent().removeClass('active');},editShareText:function(e){e.preven=
tDefault();if(jQuery('#comment-form-edit-share-text').is(':hidden')){jQue=
ry('#comment-form-edit-share-text').slideDown('fast',HighlanderComments.r=
esizeCallback);}else{jQuery('#comment-form-edit-share-text').slideUp('fas=
t',HighlanderComments.resizeCallback);}},toggleShareLabels:function(){if(=
jQuery('#respond').outerWidth()>450){jQuery('#comment-form-post-to label =
span').show().parent().css({'padding-right':0});}else{jQuery('#comment-fo=
rm-post-to label span').hide().parent().css({'padding-right':'20px'});}=0A=
HighlanderComments.resizeCallback();},fillShareText:function(textarea){if=
(!jQuery('#comment-form-share-text-textarea').length){return;}=0A=
var =
current=3DjQuery('#comment-form-share-text-textarea').val().split('": =
');var shareComment=3Dcurrent[0]+'": =
'+jQuery(textarea).val();if(shareComment.length>140){shareComment=3Dshare=
Comment.substr(0,136)+'...';}=0A=
jQuery('#comment-form-share-text-textarea').val(shareComment);},readCooki=
e:function(c){var =
nameEQ=3Dc+"=3D",cookieStrings=3Ddocument.cookie.split(';'),i,cookieStrin=
g,num,chunk,pairs,pair,cookie_data;for(i=3D0;i<cookieStrings.length;i++){=
cookieString=3DcookieStrings[i];while(cookieString.charAt(0)=3D=3D=3D' =
'){cookieString=3DcookieString.substring(1,cookieString.length);}=0A=
if(cookieString.indexOf(nameEQ)=3D=3D=3D0){chunk=3DcookieString.substring=
(nameEQ.length,cookieString.length);pairs=3Dchunk.split('&');cookie_data=3D=
{};for(num=3Dpairs.length-1;num>=3D0;num--){pair=3Dpairs[num].split('=3D'=
);cookie_data[pair[0]]=3DdecodeURIComponent(pair[1]);}=0A=
return cookie_data;}}=0A=
return null;},writeCookie:function(name,value,days,domain){var =
expires;if(days){var date=3Dnew =
Date();date.setTime(date.getTime()+(days*24*60*60*1000));expires=3D"; =
expires=3D"+date.toGMTString();}else{expires=3D"";}=0A=
if(domain){domain=3D"; domain=3D"+domain;}else{domain=3D'';}=0A=
document.cookie=3Dname+"=3D"+value+expires+"; =
path=3D/"+domain;}});jQuery(HighlanderComments.init);(function($){$.fn.au=
toResize=3Dfunction(options){var =
settings=3D$.extend({onResize:function(){},animate:true,animateDuration:1=
50,animateCallback:function(){},extraSpace:20,limit:1000},options);this.f=
ilter('textarea').each(function(){var =
textarea=3D$(this).css({resize:'none','overflow-y':'hidden'}),origHeight=3D=
textarea.height(),clone=3D(function(){var =
props=3D['height','width','lineHeight','textDecoration','letterSpacing'],=
propOb=3D{};$.each(props,function(i,prop){propOb[prop]=3Dtextarea.css(pro=
p);});return =
textarea.clone().removeAttr('id').removeAttr('name').css({position:'absol=
ute',top:0,left:-9999}).css(propOb).attr('tabIndex','-1').insertBefore(te=
xtarea);})(),lastScrollTop=3Dnull,updateSize=3Dfunction(){clone.height(0)=
.val($(this).val()).scrollTop(10000);var =
scrollTop=3DMath.max(clone.scrollTop(),origHeight)+settings.extraSpace,to=
Change=3D$(this).add(clone);if(lastScrollTop=3D=3D=3DscrollTop){return;}=0A=
lastScrollTop=3DscrollTop;if(scrollTop>=3Dsettings.limit){$(this).css('ov=
erflow-y','');return;}=0A=
settings.onResize.call(this);if(settings.animate&&textarea.css('display')=
=3D=3D=3D'block'){toChange.stop().animate({height:scrollTop},settings.ani=
mateDuration,settings.animateCallback);}else{toChange.height(scrollTop);s=
ettings.animateCallback.call(this);}};textarea=0A=
.unbind('.dynSiz')=0A=
.bind('keyup.dynSiz',updateSize)=0A=
.bind('keydown.dynSiz',updateSize)=0A=
.bind('change.dynSiz',updateSize);});return this;};})(jQuery);
------=_NextPart_000_0000_01CE3A81.CA9C5BC0
Content-Type: application/javascript
Content-Transfer-Encoding: quoted-printable
Content-Location: http://s0.wp.com/wp-content/js/devicepx.js?m=1354656609g

var =
DetectZoom=3D{mediaQueryBinarySearch:function(property,unit,a,b,maxIter,e=
psilon){var =
matchMedia,head,style,div,binarySearch;binarySearch=3Dfunction(a,b,maxIte=
r){var mid=3D(a+b)/2;if(maxIter=3D=3D0||b-a<epsilon)return mid;var =
query=3D"("+property+":"+mid+unit+")";if(matchMedia(query).matches){retur=
n binarySearch(mid,b,maxIter-1);}else{return =
binarySearch(a,mid,maxIter-1);}};if(window.matchMedia){matchMedia=3Dwindo=
w.matchMedia;}else{head=3Ddocument.getElementsByTagName('head')[0];style=3D=
document.createElement('style');div=3Ddocument.createElement('div');div.c=
lassName=3D'mediaQueryBinarySearch';head.appendChild(style);div.style.dis=
play=3D'none';document.body.appendChild(div);matchMedia=3Dfunction(query)=
{style.sheet.insertRule('@media '+query+=0A=
'{.mediaQueryBinarySearch '+=0A=
'{text-decoration: underline} }',0);var =
matched=3DgetComputedStyle(div,null).textDecoration=3D=3D'underline';styl=
e.sheet.deleteRule(0);return{matches:matched};};}=0A=
var =
r=3DbinarySearch(a,b,maxIter);if(div){head.removeChild(style);document.bo=
dy.removeChild(div);}=0A=
return r;},_zoomIe7:function(){var =
rect=3Ddocument.body.getBoundingClientRect();var =
z=3D(rect.right-rect.left)/document.body.offsetWidth;z=3DMath.round(z*100=
)/100;return{zoom:z,devicePxPerCssPx:z};},_zoomIe8:function(){var =
zoom=3Dscreen.deviceXDPI/screen.logicalXDPI;return{zoom:zoom,devicePxPerC=
ssPx:zoom};},_zoomWebkitMobile:function(){var =
devicePixelRatio=3Dwindow.devicePixelRatio!=3Dnull?window.devicePixelRati=
o:1,deviceWidth;if(Math.abs(window.orientation)=3D=3D90){deviceWidth=3Dsc=
reen.height;}else{deviceWidth=3Dscreen.width;}=0A=
var =
z=3DdeviceWidth/window.innerWidth;return{zoom:z,devicePxPerCssPx:z*device=
PixelRatio};},_zoomWebkit:function(){var =
devicePixelRatio=3Dwindow.devicePixelRatio!=3Dnull?window.devicePixelRati=
o:1;var =
container=3Ddocument.createElement('div'),div=3Ddocument.createElement('d=
iv');var important=3Dfunction(str){return str.replace(/;/g," =
!important;");};container.setAttribute('style',important('width:0; =
height:0; overflow:hidden; visibility:hidden; position: =
absolute;'));div.innerHTML=3D"1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<b=
r>0";div.setAttribute('style',important('font: 100px/1em sans-serif; =
-webkit-text-size-adjust: none; height: auto; width: 1em; padding: 0; =
overflow: =
visible;'));container.appendChild(div);document.body.appendChild(containe=
r);var z=3D1000/div.clientHeight;z=3DMath.round(z*100)/100;var =
r=3D{zoom:z,devicePxPerCssPx:devicePixelRatio*z};document.body.removeChil=
d(container);return r;},_zoomFF35:function(){var z=3Dscreen.width/=0A=
this.mediaQueryBinarySearch('min-device-width','px',0,6000,20,.0001);z=3D=
Math.round(z*100)/100;return{zoom:z,devicePxPerCssPx:z};},_zoomFF36:funct=
ion(){var =
container=3Ddocument.createElement('div'),outerDiv=3Ddocument.createEleme=
nt('div');container.setAttribute('style','width:0; height:0; =
overflow:hidden;'+=0A=
'visibility:hidden; position: =
absolute');outerDiv.style.width=3DouterDiv.style.height=3D'500px';var =
div=3DouterDiv;for(var i=3D0;i<10;++i){var =
child=3Ddocument.createElement('div');child.style.overflowY=3D'scroll';di=
v.appendChild(child);div=3Dchild;}=0A=
container.appendChild(outerDiv);document.body.appendChild(container);var =
outerDivWidth=3DouterDiv.clientWidth;var =
innerDivWidth=3Ddiv.clientWidth;var =
scrollbarWidthCss=3D(outerDivWidth-innerDivWidth)/10;document.body.remove=
Child(container);var =
scrollbarWidthDevice=3D15;if(-1!=3Dnavigator.platform.indexOf('Win')){scr=
ollbarWidthDevice=3D17;}=0A=
var =
z=3DscrollbarWidthDevice/scrollbarWidthCss;z=3DMath.round(z*100)/100;retu=
rn{zoom:z,devicePxPerCssPx:z};},_zoomFF4:function(){var =
z=3Dthis.mediaQueryBinarySearch('min--moz-device-pixel-ratio','',0,10,20,=
.0001);z=3DMath.round(z*100)/100;return{zoom:z,devicePxPerCssPx:z};},_zoo=
mOperaOlder:function(){var =
fixedDiv=3Ddocument.createElement('div');fixedDiv.style.position=3D'fixed=
';fixedDiv.style.width=3D'100%';fixedDiv.style.height=3D'100%';fixedDiv.s=
tyle.top=3DfixedDiv.style.left=3D'0';fixedDiv.style.visibility=3D'hidden'=
;document.body.appendChild(fixedDiv);var =
z=3Dwindow.innerWidth/fixedDiv.offsetWidth;document.body.removeChild(fixe=
dDiv);return{zoom:z,devicePxPerCssPx:z};},_zoomOpera11:function(){var =
z=3Dwindow.outerWidth/window.innerWidth;z=3DMath.round(z*100)/100;return{=
zoom:z,devicePxPerCssPx:z};},ratios:function(){var =
r;if(!isNaN(screen.logicalXDPI)&&!isNaN(screen.systemXDPI)){return =
this._zoomIe8();}else if('ontouchstart'in =
window&&document.body.style.webkitTextSizeAdjust!=3Dnull){return =
this._zoomWebkitMobile();}else =
if(document.body.style.webkitTextSizeAdjust!=3Dnull){return =
this._zoomWebkit();}else =
if(-1!=3Dnavigator.userAgent.indexOf('Firefox/3.5')){return =
this._zoomFF35();}else =
if(-1!=3Dnavigator.userAgent.indexOf('Firefox/3.6')){return =
this._zoomFF36();}else if(-1!=3Dnavigator.appVersion.indexOf("MSIE =
7.")){return this._zoomIe7();}else =
if(-1!=3Dnavigator.userAgent.indexOf('Opera')){var =
versionIdx=3Dnavigator.userAgent.indexOf('Version/');if(11.01<parseFloat(=
navigator.userAgent.substr(versionIdx+8)))=0A=
return this._zoomOpera11();else=0A=
return this._zoomOperaOlder();}else =
if(0.001<(r=3Dthis._zoomFF4()).zoom){return =
r;}else{return{zoom:1,devicePxPerCssPx:1}}},zoom:function(){return =
this.ratios().zoom;},device:function(){return =
this.ratios().devicePxPerCssPx;}};var =
wpcom_img_zoomer=3D{zoomed:false,timer:null,interval:1000,imgNeedsSizeAtt=
s:function(img){if(img.getAttribute('width')!=3D=3Dnull||img.getAttribute=
('height')!=3D=3Dnull)=0A=
return false;if(img.width<img.naturalWidth||img.height<img.naturalHeight)=0A=
return false;return true;},init:function(){var =
t=3Dthis;try{t.zoomImages();t.timer=3DsetInterval(function(){t.zoomImages=
();},t.interval);}=0A=
catch(e){}},stop:function(){if(this.timer)=0A=
clearInterval(this.timer);},getScale:function(){var =
scale=3DDetectZoom.device();if(scale<=3D1.0)scale=3D1.0;else =
if(scale<=3D1.5)scale=3D1.5;else if(scale<=3D2.0)scale=3D2.0;else =
if(scale<=3D3.0)scale=3D3.0;else if(scale<=3D4.0)scale=3D4.0;else =
scale=3D5.0;return scale;},shouldZoom:function(scale){var =
t=3Dthis;if("innerWidth"in window&&!window.innerWidth)=0A=
return false;if(scale=3D=3D1.0&&t.zoomed=3D=3Dfalse)=0A=
return false;return true;},zoomImages:function(){var t=3Dthis;var =
scale=3Dt.getScale();if(!t.shouldZoom(scale)){return;}=0A=
t.zoomed=3Dtrue;var imgs=3Ddocument.getElementsByTagName("img");for(var =
i=3D0;i<imgs.length;i++){var =
imgScale=3Dimgs[i].getAttribute("scale");if(imgScale=3D=3Dscale||imgScale=
=3D=3D"0")=0A=
continue;var =
scaleFail=3Dimgs[i].getAttribute("scale-fail");if(scaleFail&&scaleFail<=3D=
scale)=0A=
continue;if(!(imgs[i].width&&imgs[i].height))=0A=
continue;if(t.scaleImage(imgs[i],scale)){imgs[i].setAttribute("scale",sca=
le);}=0A=
else{imgs[i].setAttribute("scale","0");}}},scaleImage:function(img,scale)=
{var t=3Dthis;var =
newSrc=3Dimg.src;if(img.parentNode.className.match(/slideshow-slide/))=0A=
return =
false;if(img.src.match(/^https?:\/\/([^\/]*\.)?gravatar\.com\/.+[?&](s|si=
ze)=3D/)){newSrc=3Dimg.src.replace(/([?&](s|size)=3D)(\d+)/,function($0,$=
1,$2,$3){var =
originalAtt=3D"originals",originalSize=3Dimg.getAttribute(originalAtt);if=
(originalSize=3D=3D=3Dnull){originalSize=3D$3;img.setAttribute(originalAt=
t,originalSize);if(t.imgNeedsSizeAtts(img)){img.width=3Dimg.width;img.hei=
ght=3Dimg.height;}}=0A=
var size=3Dimg.clientWidth;var =
targetSize=3DMath.ceil(img.clientWidth*scale);targetSize=3DMath.max(targe=
tSize,originalSize);targetSize=3DMath.min(targetSize,512);return =
$1+targetSize;});}=0A=
else =
if(img.src.match(/^https?:\/\/([^\/]+)\.files\.wordpress\.com\/.+[?&][wh]=
=3D/)){if(img.src.match(/[?&]crop/))=0A=
return false;var changedAttrs=3D{};var =
matches=3Dimg.src.match(/([?&]([wh])=3D)(\d+)/g);for(var =
i=3D0;i<matches.length;i++){var lr=3Dmatches[i].split('=3D');var =
thisAttr=3Dlr[0].replace(/[?&]/g,'');var thisVal=3Dlr[1];var =
originalAtt=3D'original'+thisAttr,originalSize=3Dimg.getAttribute(origina=
lAtt);if(originalSize=3D=3D=3Dnull){originalSize=3DthisVal;img.setAttribu=
te(originalAtt,originalSize);if(t.imgNeedsSizeAtts(img)){img.width=3Dimg.=
width;img.height=3Dimg.height;}}=0A=
var size=3DthisAttr=3D=3D'w'?img.clientWidth:img.clientHeight;var =
naturalSize=3D(thisAttr=3D=3D'w'?img.naturalWidth:img.naturalHeight);var =
targetSize=3DMath.ceil(size*scale);targetSize=3DMath.max(targetSize,origi=
nalSize);if(scale>img.getAttribute("scale")&&targetSize<=3DnaturalSize)=0A=
targetSize=3DthisVal;if(naturalSize<thisVal)=0A=
targetSize=3DthisVal;if(targetSize!=3DthisVal)=0A=
changedAttrs[thisAttr]=3DtargetSize;}=0A=
var w=3DchangedAttrs.w||false;var =
h=3DchangedAttrs.h||false;if(w){newSrc=3Dimg.src.replace(/([?&])w=3D\d+/g=
,function($0,$1){return $1+'w=3D'+w;});}=0A=
if(h){newSrc=3DnewSrc.replace(/([?&])h=3D\d+/g,function($0,$1){return =
$1+'h=3D'+h;});}}=0A=
else =
if(img.src.match(/^https?:\/\/([^\/]+\.)*(wordpress|wp)\.com\/mshots\/.+[=
?&]w=3D\d+/)){newSrc=3Dimg.src.replace(/([?&]w=3D)(\d+)/,function($0,$1,$=
2){var =
originalAtt=3D'originalw',originalSize=3Dimg.getAttribute(originalAtt);if=
(originalSize=3D=3D=3Dnull){originalSize=3D$2;img.setAttribute(originalAt=
t,originalSize);if(t.imgNeedsSizeAtts(img)){img.width=3Dimg.width;img.hei=
ght=3Dimg.height;}}=0A=
var size=3Dimg.clientWidth;var =
targetSize=3DMath.ceil(size*scale);targetSize=3DMath.max(targetSize,origi=
nalSize);if(scale>img.getAttribute("scale")&&targetSize<=3Dimg.naturalWid=
th)=0A=
targetSize=3D$2;if($2!=3DtargetSize)=0A=
return $1+targetSize;});}=0A=
else =
if(img.src.match(/^https?:\/\/([^\/.]+\.)*(wp|wordpress)\.com\/imgpress\?=
(.+)/)){var =
imgpressSafeFunctions=3D["zoom","url","h","w","fit","filter","brightness"=
,"contrast","colorize","smooth","unsharpmask"];var =
qs=3DRegExp.$3.split('&');for(var q in =
qs){q=3Dqs[q].split('=3D')[0];if(imgpressSafeFunctions.indexOf(q)=3D=3D-1=
){return false;}}=0A=
img.width=3Dimg.width;img.height=3Dimg.height;if(scale=3D=3D1)=0A=
newSrc=3Dimg.src.replace(/\?(zoom=3D[^&]+&)?/,'?');else=0A=
newSrc=3Dimg.src.replace(/\?(zoom=3D[^&]+&)?/,'?zoom=3D'+scale+'&');}=0A=
else =
if(img.src.match(/^https?:\/\/([^\/.]+\.)*(wp|wordpress)\.com\/latex\.php=
\?(latex|zoom)=3D(.+)/)){img.width=3Dimg.width;img.height=3Dimg.height;if=
(scale=3D=3D1)=0A=
newSrc=3Dimg.src.replace(/\?(zoom=3D[^&]+&)?/,'?');else=0A=
newSrc=3Dimg.src.replace(/\?(zoom=3D[^&]+&)?/,'?zoom=3D'+scale+'&');}=0A=
else =
if(img.src.match(/^https?:\/\/[^\/]+\/.*[-@]([12])x\.(gif|jpeg|jpg|png)(\=
?|$)/)){img.width=3Dimg.width;img.height=3Dimg.height;var =
currentSize=3DRegExp.$1,newSize=3DcurrentSize;if(scale<=3D1)=0A=
newSize=3D1;else=0A=
newSize=3D2;if(currentSize!=3DnewSize)=0A=
newSrc=3Dimg.src.replace(/([-@])[12]x\.(gif|jpeg|jpg|png)(\?|$)/,'$1'+new=
Size+'x.$2$3');}=0A=
else{return false;}=0A=
if(newSrc!=3Dimg.src){var =
prevSrc,origSrc=3Dimg.getAttribute("src-orig");if(!origSrc){origSrc=3Dimg=
.src;img.setAttribute("src-orig",origSrc);}=0A=
if(img.complete)=0A=
prevSrc=3Dimg.src;else=0A=
prevSrc=3DorigSrc;img.onerror=3Dfunction(){img.src=3DprevSrc;if(img.getAt=
tribute("scale-fail")<scale)=0A=
img.setAttribute("scale-fail",scale);img.onerror=3Dnull;};img.src=3DnewSr=
c;}=0A=
return true;}};wpcom_img_zoomer.init();
------=_NextPart_000_0000_01CE3A81.CA9C5BC0
Content-Type: application/javascript
Content-Transfer-Encoding: quoted-printable
Content-Location: http://s.stats.wordpress.com/w.js?21

function st_go(a){var =
i,u=3Ddocument.location.protocol+'//stats.wordpress.com/g.gif?host=3D'+es=
cape(document.location.host)+'&rand=3D'+Math.random();for(i in =
a){u=3Du+'&'+i+'=3D'+escape(a[i]);}u=3Du+'&ref=3D'+escape(document.referr=
er);document.open();document.write("<img id=3D\"wpstats\" =
src=3D\""+u+"\" alt=3D\"\" />");document.close();}=0A=
function ex_go(a){var =
i,u=3Ddocument.location.protocol+'//stats.wordpress.com/g.gif?v=3Dwpcom-n=
o-pv&rand=3D'+Math.random();for(i in =
a){u=3Du+'&'+i+'=3D'+escape(a[i]);}document.open();document.write("<img =
id=3D\"wpstats2\" src=3D\""+u+"\" alt=3D\"\" style=3D\"display:none\" =
/>");document.close();}=0A=
function re_go(a){var =
i,u=3Ddocument.location.protocol+'//stats.wordpress.com/g.gif?rand=3D'+Ma=
th.random();for(i in =
a){u=3Du+'&'+i+'=3D'+escape(a[i]);}document.open();document.write("<img =
id=3D\"wpstats\" src=3D\""+u+"\" alt=3D\"\" style=3D\"display:none\" =
/>");document.close();}=0A=
function clicktrack(e){var =
t;if(e){t=3De.target;}else{t=3Dwindow.event.srcElement;}linktrack(t,500);=
}=0A=
function contexttrack(e){var =
t;if(e){t=3De.target;}else{t=3Dwindow.event.srcElement;}linktrack(t,0);}=0A=
function =
linktracker_init(b,p){_blog=3Db;_post=3Dp;_host=3Ddocument.location.host?=
document.location.host:document.location.toString().replace(/^[^\/]*\/+([=
^\/]*)(\/.*)?/,'$1');if(document.body){document.body.onclick=3Dclicktrack=
;document.body.oncontextmenu=3Dcontexttrack;}else =
if(document){document.onclick=3Dclicktrack;document.oncontextmenu=3Dconte=
xttrack;}else{}}=0A=
function =
linktrack(a,d){try{if(!a||a=3D=3Dnull)return;while(a.nodeName!=3D"A"){if(=
typeof =
a.parentNode=3D=3D'undefined')return;a=3Da.parentNode;if(!a)return;}=0A=
b=3Da;while(b.nodeName!=3D"BODY"){if(typeof =
a.parentNode=3D=3D'undefined')return;b=3Db.parentNode;if(b.id=3D=3D'wpcom=
bar')return;if(b.id=3D=3D'wpadminbar')return;if(b.className=3D=3D'wpadver=
t')return;}=0A=
if(a.href.match(eval('/^(http(s)?:\\/\\/)?'+_host+'/')))return;if(a.href.=
match(eval('/^javascript/')))return;var bh=3Da.href;var =
pr=3Ddocument.location.protocol||'http:';var r=3D(typeof =
a.rel!=3D'undefined')?escape(a.rel):'0';var b=3D(typeof =
_blog!=3D'undefined')?_blog:'0';var p=3D(typeof =
_post!=3D'undefined')?_post:'0';var =
src=3Dpr+'//stats.wordpress.com/c.gif?b=3D'+b+'&p=3D'+p+'&r=3D'+r+'&u=3D'=
+escape(bh)+"&rand=3D"+Math.random();if(a.className.match('flaptor')){var=
 fx=3Dfunction(c){return c.replace(/flaptor\s*/,'')};var =
f=3D'b'+_blog+'p'+_post+' '+fx(a.className);var =
links=3Ddocument.getElementsByTagName('A');for(i=3D0;i<links.length;i++){=
if(links[i].className.match('flaptor'))=0A=
f=3Df+' '+fx(links[i].className);}=0A=
src=3Dsrc+'&f=3D'+f;}=0A=
var x=3Dnew Image(1,1);x.src=3Dsrc;if(d){var now=3Dnew Date();var =
end=3Dnow.getTime()+d;while(true){now=3Dnew =
Date();if(now.getTime()>end){break}}}}catch(e){}}
------=_NextPart_000_0000_01CE3A81.CA9C5BC0--
